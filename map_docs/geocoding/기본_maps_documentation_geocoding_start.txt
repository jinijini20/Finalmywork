Tab: 기본
Source URL: https://developers.google.com/maps/documentation/geocoding/start?hl=ko

이 페이지는 Cloud Translation API를 통해 번역되었습니다.
홈
제품
Google Maps Platform
문서
Web Services
Geocoding API
의견 보내기
시작하기
유럽 경제 지역 (EEA) 개발자
시작하기 전에: Geocoding API를 사용하려면 결제 계정이 있고 Geocoding API가 사용 설정된 프로젝트가 필요합니다. 프로젝트 소유자 및 결제 관리자를 여러 명 만들어 이러한 역할을 맡은 담당자가 팀에 상주하도록 하는 것이 좋습니다. 자세한 내용은 Cloud 콘솔에서 설정하기를 참고하세요.
Geocoding API는 주소의 지오코딩 및 역 지오코딩을 제공하는 서비스입니다.
이 서비스는 클라이언트 측 Google 지도 JavaScript API의 일부로 사용하거나 Google 지도 서비스용 Java 클라이언트, Python 클라이언트, Go 클라이언트, Node.js 클라이언트와 함께 서버 측에서 사용할 수도 있습니다.
지오코딩은 주소 (예: 상세 주소)를 지리적 좌표 (예: 위도 및 경도)로 변환하는 과정으로, 이를 사용하여 지도에 마커를 배치하거나 지도의 위치를 지정할 수 있습니다.
역 지오코딩은 지리적 좌표를 사람이 읽을 수 있는 주소로 변환하는 과정입니다.
Geocoding API를 사용하여 지정된 장소 ID의 주소를 찾을 수도 있습니다.
샘플 요청 및 응답
HTTP 인터페이스를 통해 Geocoding API에 액세스합니다. 다음은 지오코딩 및 역 지오코딩 요청의 예입니다.
지오코딩 요청 및 응답(위도/경도 검색)
다음 예에서는 '1600 Amphitheatre Parkway, Mountain View, CA'의 위도와 경도를 요청하고 출력이 JSON 형식이어야 한다고 지정합니다.
https://maps.googleapis.com/maps/api/geocode/json?address=1600+Amphitheatre+Parkway,+Mountain+View,+CA&key=YOUR_API_KEY
웹브라우저에 URL을 입력하여 테스트할 수 있습니다 (YOUR_API_KEY를 실제 API 키로 바꾸어야 함). 응답에는 이 주소의 위도와 경도가 포함됩니다.
지오코딩 요청 URL 빌드, 사용 가능한 매개변수, 응답 이해에 관한 자세한 내용은 개발자 가이드를 참고하세요.
다음은 JSON 형식의 샘플 지오코딩 응답입니다.
{
   "results" : [
      {
         "address_components" : [
            {
               "long_name" : "1600",
               "short_name" : "1600",
               "types" : [ "street_number" ]
            },
            {
               "long_name" : "Amphitheatre Parkway",
               "short_name" : "Amphitheatre Pkwy",
               "types" : [ "route" ]
            },
            {
               "long_name" : "Mountain View",
               "short_name" : "Mountain View",
               "types" : [ "locality", "political" ]
            },
            {
               "long_name" : "Santa Clara County",
               "short_name" : "Santa Clara County",
               "types" : [ "administrative_area_level_2", "political" ]
            },
            {
               "long_name" : "California",
               "short_name" : "CA",
               "types" : [ "administrative_area_level_1", "political" ]
            },
            {
               "long_name" : "United States",
               "short_name" : "US",
               "types" : [ "country", "political" ]
            },
            {
               "long_name" : "94043",
               "short_name" : "94043",
               "types" : [ "postal_code" ]
            }
         ],
         "formatted_address" : "1600 Amphitheatre Pkwy, Mountain View, CA 94043, USA",
         "geometry" : {
            "location" : {
               "lat" : 37.4267861,
               "lng" : -122.0806032
            },
            "location_type" : "ROOFTOP",
            "viewport" : {
               "northeast" : {
                  "lat" : 37.4281350802915,
                  "lng" : -122.0792542197085
               },
               "southwest" : {
                  "lat" : 37.4254371197085,
                  "lng" : -122.0819521802915
               }
            }
         },
         "place_id" : "ChIJtYuu0V25j4ARwu5e4wwRYgE",
         "plus_code" : {
            "compound_code" : "CWC8+R3 Mountain View, California, United States",
            "global_code" : "849VCWC8+R3"
         },
         "types" : [ "street_address" ]
      }
   ],
   "status" : "OK"
}
역지오코딩 요청 및 응답(주소 검색)
다음 예에서는 미국 뉴욕주 브루클린의 지정된 위도/경도에 해당하는 주소를 요청합니다. 결과를 JSON 형식으로 출력하도록 지정합니다.
https://maps.googleapis.com/maps/api/geocode/json?latlng=40.714224,-73.961452&key=YOUR_API_KEY
웹브라우저에 URL을 입력하여 테스트할 수 있습니다. 'YOUR_API_KEY'를 실제 API 키로 대체해야 합니다. 응답에는 위도 및 경도 위치의 사람이 읽을 수 있는 주소가 포함됩니다.
역 지오코딩 요청 URL 빌드, 사용 가능한 매개변수, 응답 이해에 관한 자세한 내용은 개발자 가이드를 참고하세요.
다음은 JSON 형식의 샘플 역지오코딩 응답입니다.
{
   "plus_code" : {
      "compound_code" : "P27Q+MC New York, NY, USA",
      "global_code" : "87G8P27Q+MC"
   },
   "results" : [
      {
         "address_components" : [
            {
               "long_name" : "279",
               "short_name" : "279",
               "types" : [ "street_number" ]
            },
            {
               "long_name" : "Bedford Avenue",
               "short_name" : "Bedford Ave",
               "types" : [ "route" ]
            },
            {
               "long_name" : "Williamsburg",
               "short_name" : "Williamsburg",
               "types" : [ "neighborhood", "political" ]
            },
            {
               "long_name" : "Brooklyn",
               "short_name" : "Brooklyn",
               "types" : [ "political", "sublocality", "sublocality_level_1" ]
            },
            {
               "long_name" : "Kings County",
               "short_name" : "Kings County",
               "types" : [ "administrative_area_level_2", "political" ]
            },
            {
               "long_name" : "New York",
               "short_name" : "NY",
               "types" : [ "administrative_area_level_1", "political" ]
            },
            {
               "long_name" : "United States",
               "short_name" : "US",
               "types" : [ "country", "political" ]
            },
            {
               "long_name" : "11211",
               "short_name" : "11211",
               "types" : [ "postal_code" ]
            }
         ],
         "formatted_address" : "279 Bedford Ave, Brooklyn, NY 11211, USA",
         "geometry" : {
            "location" : {
               "lat" : 40.7142484,
               "lng" : -73.9614103
            },
            "location_type" : "ROOFTOP",
            "viewport" : {
               "northeast" : {
                  "lat" : 40.71559738029149,
                  "lng" : -73.9600613197085
               },
               "southwest" : {
                  "lat" : 40.71289941970849,
                  "lng" : -73.96275928029151
               }
            }
         },
         "place_id" : "ChIJT2x8Q2BZwokRpBu2jUzX3dE",
         "plus_code" : {
            "compound_code" : "P27Q+MC Brooklyn, New York, United States",
            "global_code" : "87G8P27Q+MC"
         },
         "types" : [
            "bakery",
            "cafe",
            "establishment",
            "food",
            "point_of_interest",
            "store"
         ]
      },

   ... Additional results truncated in this example[] ...

   ],
   "status" : "OK"
}
클라이언트 라이브러리로 코딩 시작하기
클라이언트 라이브러리는 인증, 요청 제한, 자동 재시도와 같은 일반적인 작업의 간단한 네이티브 구현을 제공하여 Google 지도 웹 서비스 API로 개발하는 것을 더 쉽게 만듭니다. Geocoding API는 Google 지도 서비스용 Java 클라이언트, Python 클라이언트, Go 클라이언트, Node.js 클라이언트에서 사용할 수 있습니다.
인증, 할당량, 가격 책정, 정책
인증
Geocoding API를 사용하려면 먼저 API를 사용 설정하고 적절한 인증 사용자 인증 정보를 가져와야 합니다. 자세한 내용은 Google Maps Platform 시작하기를 참고하세요.
할당량 및 가격 책정
Geocoding API에 설정된 할당량 및 가격에 관한 자세한 내용은 사용량 및 결제 페이지를 참고하세요.
정책
Geocoding API는 API 정책에 따라 사용해야 합니다.
자세히 알아보기
Geocoding API로 할 수 있는 작업은 더 많습니다. 추가 데모, 예시, 사용 가능한 매개변수, 상태 코드 및 오류 메시지, 기타 세부정보는 Geocoding API 개발자 가이드를 참고하세요.
Geocoding API 개발자 가이드에서는 Geocoding API 웹 서비스를 설명합니다. 이 API는 Google Maps Platform API 중 하나에서 제공하는 지도 내에서 지오코딩 데이터를 사용하려는 웹사이트 및 모바일 개발자를 대상으로 합니다.
의견 보내기