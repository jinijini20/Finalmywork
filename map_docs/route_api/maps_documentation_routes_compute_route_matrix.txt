Source URL: https://developers.google.com/maps/documentation/routes/compute_route_matrix?hl=ko

이 페이지는 Cloud Translation API [https://cloud.google.com/translate/?hl=ko]를 통해 번역되었습니다.
홈 [https://developers.google.com/?hl=ko]
제품 [https://developers.google.com/products?hl=ko]
Google Maps Platform [https://developers.google.com/maps?hl=ko]
문서 [https://developers.google.com/maps/documentation?hl=ko]
Web Services [https://developers.google.com/maps/web-services?hl=ko]
Routes API [https://developers.google.com/maps/documentation/routes?hl=ko]
의견 보내기
경로 매트릭스 가져오기
유럽 경제 지역 (EEA) 개발자
Routes API를 사용하여 computeRouteMatrix [https://developers.google.com/maps/documentation/routes/reference/rest/v2/TopLevel/computeRouteMatrix?hl=ko] 메서드(REST) 또는 스트리밍 ComputeRouteMatrix [https://developers.google.com/maps/documentation/routes/reference/rpc/google.maps.routing.v2?hl=ko#google.maps.routing.v2.Routes.ComputeRouteMatrix] 메서드 (gRPC)를 호출하여 여러 출발지와 목적지에 대한 경로의 거리와 시간을 계산합니다.
이 메서드는 출발지 및 목적지 목록을 사용하여 각 출발지에서 시작하여 각 목적지로 끝나는 경로의 거리와 소요 시간을 계산합니다.
대중교통 경로 매트릭스 가져오기
대중교통에서 경로 매트릭스를 계산할 수도 있습니다. 예시는 대중교통 경로 매트릭스 가져오기 [https://developers.google.com/maps/documentation/routes/transit-rm?hl=ko]를 참고하세요.
요청 한도
Compute Route Matrix 메서드는 주소 또는 장소 ID를 사용하는 중간 지점과 요소에 다음과 같은 요청 한도를 적용합니다. 요소는 경로 매트릭스의 각 출발지와 목적지 간의 경로이므로 요소 수는 출발지 수와 목적지 수를 곱한 값입니다. 예를 들어 출발지가 10개, 도착지가 10개이면 요소는 100개입니다.
TRANSIT 경로가 아닌 경로의 요소 수는 625개를 초과할 수 없습니다.
TRANSIT 경로를 지정하는 경우 요소 수는 100개를 초과할 수 없습니다.
TRAFFIC_AWARE_OPTIMAL를 지정하는 경우 요소 수는 100개를 초과할 수 없습니다. TRAFFIC_AWARE_OPTIMAL에 대한 자세한 내용은 트래픽 데이터를 포함하는 방법 및 여부 지정 [https://developers.google.com/maps/documentation/routes/config_trade_offs?hl=ko]을 참고하세요.
주소 또는 장소 ID를 사용하여 출발지 또는 도착지를 지정하는 경우 이 방법으로 최대 50개까지 지정할 수 있습니다.
응답 오류
Compute Route Matrix 메서드의 한 가지 기능은 전체 응답 또는 개별 응답 요소에 대해 오류를 반환할 수 있다는 점입니다. 예를 들어 요청의 형식이 잘못된 경우(예: 출처가 0개인 경우) 전체 응답에 오류가 포함됩니다.
그러나 오류가 응답의 요소 하위 집합에 적용되는 경우 (예: 출발지와 도착지의 한 가지 조합에 대해 경로를 계산할 수 없음) 오류의 영향을 받는 요소만 오류 코드를 반환합니다.
gRPC 스트림 결과
ComputeRouteMatrix [https://developers.google.com/maps/documentation/routes/reference/rpc/google.maps.routing.v2?hl=ko#google.maps.routing.v2.Routes.ComputeRouteMatrix] gRPC 메서드는 출발지 및 목적지 목록을 사용하고 출발지와 목적지의 각 조합에 대한 경로 정보를 포함하는 스트림을 반환합니다. 결과가 스트림으로 반환되므로 가능한 모든 경로 조합이 계산될 때까지 기다리지 않고도 결과 처리를 시작할 수 있습니다.
참고: 스트림 결과는 REST API에서 지원되지 않습니다.
스트림에서 반환하는 요소는 어떤 순서로 반환될지 보장되지 않습니다. 따라서 각 응답 요소에는 origin_index와 destination_index가 포함됩니다. 요청에서 지정한 출발지와 목적지의 경우 경로 출발지는 지정된 요소의 origins[origin_index]와 같고 경로 대상은 destinations[destination_index]와 같습니다. 이 배열은 0으로 색인이 생성됩니다. 출발지 및 도착지 목록 순서를 저장하는 것이 중요합니다.
경로 매트릭스 계산 예시
HTTP 요청에서 computeRouteMatrix [https://developers.google.com/maps/documentation/routes/reference/rest/v2/TopLevel/computeRouteMatrix?hl=ko] 메서드를 사용하여 경로 매트릭스를 계산합니다.
HTTP 예시
다음 예는 computeRouteMatrix HTTP 요청을 보여줍니다. 이 예에서는 다음과 같이 진행합니다.
출발 웨이포인트 2개와 도착 웨이포인트 2개의 배열을 지정합니다. 이 메서드는 각 출발지에서 각 목적지로의 경로를 계산하므로 응답에 4개의 경로가 포함됩니다.
배열에서 첫 번째 요소는 색인 0에 있고 두 번째 요소는 색인 1에 있습니다.
응답 필드 마스크를 포함하여 반환할 응답 [https://developers.google.com/maps/documentation/routes/reference/rest/v2/TopLevel/computeRouteMatrix?hl=ko#response-body](REST) 또는 ComputeRoutesResponse [https://developers.google.com/maps/documentation/routes/reference/rpc/google.maps.routing.v2?hl=ko#computeroutesresponse](gRPC)의 필드를 지정합니다. 이 예에서는 각 경로에 대해 originIndex, destinationIndex, duration, distanceMeters, status, condition를 반환하도록 요청을 구성합니다. 자세한 내용은 반환할 필드 선택 [https://developers.google.com/maps/documentation/routes/choose_fields?hl=ko]을 참고하세요.
curl -X POST -d '{
  "origins": [
    {
      "waypoint": {
        "location": {
          "latLng": {
            "latitude": 37.420761,
            "longitude": -122.081356
          }
        }
      },
      "routeModifiers": { "avoid_ferries": true}
    },
    {
      "waypoint": {
        "location": {
          "latLng": {
            "latitude": 37.403184,
            "longitude": -122.097371
          }
        }
      },
      "routeModifiers": { "avoid_ferries": true}
    }
  ],
  "destinations": [
    {
      "waypoint": {
        "location": {
          "latLng": {
            "latitude": 37.420999,
            "longitude": -122.086894
          }
        }
      }
    },
    {
      "waypoint": {
        "location": {
          "latLng": {
            "latitude": 37.383047,
            "longitude": -122.044651
          }
        }
      }
    }
  ],
  "travelMode": "DRIVE",
  "routingPreference": "TRAFFIC_AWARE"
}' \
-H 'Content-Type: application/json' -H 'X-Goog-Api-Key: YOUR_API_KEY' \
-H 'X-Goog-FieldMask: originIndex,destinationIndex,duration,distanceMeters,status,condition' \
'https://routes.googleapis.com/distanceMatrix/v2:computeRouteMatrix'
응답에는 모든 출발 및 도착 웨이포인트 조합에 가능한 네 가지 경로가 포함됩니다.
참고: 응답에 관한 자세한 설명은 컴퓨팅 경로 매트릭스 응답 이해하기 [https://developers.google.com/maps/documentation/routes/understand-rm-response?hl=ko]를 참고하세요.
originIndex 및 destinationIndex 응답 필드를 사용하여 응답에서 각 경로를 식별합니다. 예를 들어 응답의 originIndex가 1이면 요청의 origins 배열 색인 1에 있는 중간 지점에서 계산된 경로에 해당합니다.
[
    {
        "originIndex": 0,
        "destinationIndex": 0,
        "status": {},
        "distanceMeters": 822,
        "duration": "160s",
        "condition": "ROUTE_EXISTS"
    },
    {
        "originIndex": 1,
        "destinationIndex": 0,
        "status": {},
        "distanceMeters": 2919,
        "duration": "361s",
        "condition": "ROUTE_EXISTS"
    },
    {
        "originIndex": 1,
        "destinationIndex": 1,
        "status": {},
        "distanceMeters": 5598,
        "duration": "402s",
        "condition": "ROUTE_EXISTS"
    },
    {
        "originIndex": 0,
        "destinationIndex": 1,
        "status": {},
        "distanceMeters": 7259,
        "duration": "712s",
        "condition": "ROUTE_EXISTS"
    }
]
gRPC 예시
예를 들어 gRPC [https://www.grpc.io/] 요청은 gRPC 요청 예시 [https://developers.google.com/maps/documentation/routes/compute_route_directions?hl=ko#grpc-distance-example]의 예시를 참고하세요. 이 페이지의 Java 예에서는 Compute Routes와 Compute Route Matrix를 모두 호출합니다.
의견 보내기