Source URL: https://developers.google.com/maps/documentation/android-sdk/secrets-gradle-plugin?hl=ko

홈 [https://developers.google.com/?hl=ko]
제품 [https://developers.google.com/products?hl=ko]
Google Maps Platform [https://developers.google.com/maps?hl=ko]
문서 [https://developers.google.com/maps/documentation?hl=ko]
Android [https://developers.google.com/maps/android?hl=ko]
Maps SDK for Android [https://developers.google.com/maps/documentation/android-sdk/overview?hl=ko]
안내 [https://developers.google.com/maps/documentation/android-sdk?hl=ko]
의견 보내기
Secrets Gradle 플러그인
버전 제어 시스템에 API 키 [https://developers.google.com/maps/documentation/android-sdk/get-api-key?hl=ko]를 체크인하지 않는 것이 좋습니다. 대신 프로젝트의 루트 디렉터리에 있지만 버전 제어에서 제외된 로컬 secrets.properties 파일에 저장한 후 Android용 Secrets Gradle 플러그인 [https://github.com/google/secrets-gradle-plugin]을 사용하여 API 키를 읽어야 합니다.
Android용 Secrets Gradle 플러그인은 버전 제어 시스템에 체크인하지 않은 속성 파일에서 API 키를 포함한 보안 비밀을 읽습니다. 그런 다음 이 속성을 Gradle에서 생성된 BuildConfig 클래스와 Android 매니페스트 파일에 변수로 노출합니다.
Android용 Secrets Gradle 플러그인을 사용하여 API 키에 액세스하는 전체 예는 Android 스튜디오 프로젝트 설정 [https://developers.google.com/maps/documentation/android-sdk/config?hl=ko]을 참고하세요.
설치 및 사용
참고: 최신 시스템 요구사항 및 설치 안내는 GitHub의 Android용 Secrets Gradle 플러그인 [https://github.com/google/secrets-gradle-plugin] 문서를 참고하세요.
Google 지도 프로젝트에 Android용 Secrets Gradle 플러그인을 설치하려면 다음 단계를 따르세요.
Android 스튜디오에서 최상위 수준 build.gradle 또는 build.gradle.kts 파일을 열고 다음 코드를 buildscript 아래 dependencies 요소에 추가합니다.
모듈 수준 build.gradle 파일을 열고 plugins 요소에 다음 코드를 추가합니다.
모듈 수준 build.gradle 파일에서 targetSdk 및 compileSdk를 34로 설정해야 합니다.
파일을 저장하고 프로젝트를 Gradle과 동기화 [https://developer.android.com/studio/build?hl=ko#sync-files]합니다.
최상위 수준 디렉터리에서 secrets.properties 파일을 연 후 다음 코드를 추가합니다. YOUR_API_KEY를 직접 생성한 API 키로 변경합니다. secrets.properties가 버전 제어 시스템에 체크인되는 데서 제외되었으므로 키를 이 파일에 저장합니다.
참고: secrets.properties 파일이 존재하지 않으면 local.properties 파일과 동일한 폴더에 파일을 만듭니다.
MAPS_API_KEY=YOUR_API_KEY
파일을 저장합니다.
최상위 수준 디렉터리에서 secrets.properties 파일과 동일한 폴더에 local.defaults.properties 파일을 만든 후 다음 코드를 추가합니다.
참고: 아래에 표시된 대로 코드를 입력하세요. DEFAULT_API_KEY를 API 키로 바꾸지 마세요.
MAPS_API_KEY=DEFAULT_API_KEY
이 파일의 목적은 secrets.properties 파일이 없는 경우 빌드에 실패하지 않도록 API 키의 백업 위치를 제공하는 것입니다. 이는 버전 제어 시스템에서 secrets.properties가 빠진 앱을 복제하거나 API 키를 제공하는 secrets.properties 파일을 아직 로컬에서 생성하지 않은 경우 발생할 수 있습니다.
파일을 저장합니다.
AndroidManifest.xml 파일에서 com.google.android.geo.API_KEY로 이동한 후 android:value attribute를 업데이트합니다. <meta-data> 태그가 존재하지 않으면 <application> 태그의 하위 요소로 태그를 만듭니다.
<meta-data
    android:name="com.google.android.geo.API_KEY"
    android:value="${MAPS_API_KEY}" />
Note: com.google.android.geo.API_KEY is the recommended metadata name for the API key. A key with this name can be used to authenticate to multiple Google Maps-based APIs on the Android platform, including the Maps SDK for Android. For backwards compatibility, the API also supports the name com.google.android.maps.v2.API_KEY. This legacy name allows authentication to the Android Maps API v2 only. An application can specify only one of the API key metadata names. If both are specified, the API throws an exception.
In Android Studio, open your module-level build.gradle or build.gradle.kts file and edit the secrets property. If the secrets property does not exist, add it.
Edit the properties of the plugin to set propertiesFileName to secrets.properties, set defaultPropertiesFileName to local.defaults.properties, and set any other properties.
다음 단계
Android용 Secrets Gradle Plugin [https://github.com/google/secrets-gradle-plugin] GitHub 프로젝트 페이지를 확인합니다.
플러그인 사용의 전체 예는 Android 스튜디오 프로젝트 설정 [https://developers.google.com/maps/documentation/android-sdk/config?hl=ko]을 참고하세요.
의견 보내기