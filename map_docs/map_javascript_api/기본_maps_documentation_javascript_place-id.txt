Tab: 기본
Source URL: https://developers.google.com/maps/documentation/javascript/place-id?hl=ko

이 페이지는 Cloud Translation API [https://cloud.google.com/translate/?hl=ko]를 통해 번역되었습니다.
홈 [https://developers.google.com/?hl=ko]
제품 [https://developers.google.com/products?hl=ko]
Google Maps Platform [https://developers.google.com/maps?hl=ko]
문서 [https://developers.google.com/maps/documentation?hl=ko]
Web [https://developers.google.com/maps/web?hl=ko]
Maps JavaScript API [https://developers.google.com/maps/documentation/javascript?hl=ko]
의견 보내기
장소 ID
플랫폼 선택: Android [https://developers.google.com/maps/documentation/places/android-sdk/place-id?hl=ko] iOS [https://developers.google.com/maps/documentation/places/ios-sdk/place-id?hl=ko] JavaScript [https://developers.google.com/maps/documentation/javascript/place-id?hl=ko] 웹 서비스 [https://developers.google.com/maps/documentation/places/web-service/place-id?hl=ko]
유럽 경제 지역 (EEA) 개발자
소개
장소 ID는 Google 지역 정보 데이터베이스 및 Google 지도에 있는 장소를 고유하게 나타냅니다. 장소 ID는 다음과 같은 지도 API 요청에서 허용됩니다.
Geocoding API 및 지오코딩 서비스, Maps JavaScript API에서 장소 ID의 주소 가져오기
Routes API, Directions API (기존) 및 경로 서비스, Maps JavaScript API (기존)에서 출발지, 목적지, 중간 경유지 지정
Routes API, Distance Matrix API (기존) 및 Maps JavaScript API (기존)의 거리 행렬 서비스에서 출발지 및 목적지 지정
Places API (신규), Android용 Places SDK (신규), iOS용 Places SDK (신규), 장소 라이브러리에서 장소 세부정보 가져오기
Maps Embed API에서 장소 ID 매개변수 사용
지도 URL의 검색어 가져오기
Roads API에서 속도 제한 표시
경계를 위한 데이터 기반 스타일 지정에서 경계 다각형 찾기 및 스타일 지정
특정 장소의 ID 찾기
특정 장소의 장소 ID를 찾으시나요? 아래의 장소 ID 찾기를 사용하여 장소를 검색하고 ID를 가져오세요.
또는 Maps JavaScript API 문서의 장소 ID 찾기 [https://developers.google.com/maps/documentation/javascript/examples/places-placeid-finder?hl=ko]와 코드를 참고하세요.
개요
장소 ID는 장소를 고유하게 나타내는 텍스트 식별자입니다. 식별자의 길이는 서로 다를 수 있습니다 (장소 ID에는 길이 제한이 없음). 예:
ChIJgUbEo8cfqokR5lP9_Wh_DaM
GhIJQWDl0CIeQUARxks3icF8U8A
EicxMyBNYXJrZXQgU3QsIFdpbG1pbmd0b24sIE5DIDI4NDAxLCBVU0EiGhIYChQKEgnRTo6ixx-qiRHo_bbmkCm7ZRAN
EicxMyBNYXJrZXQgU3QsIFdpbG1pbmd0b24sIE5DIDI4NDAxLCBVU0E
IhoSGAoUChIJ0U6OoscfqokR6P225pApu2UQDQ
장소 ID는 비즈니스, 명소, 공원, 교차로 등 대부분의 위치에 사용할 수 있으며 동일한 장소 또는 위치에 서로 다른 여러 장소 ID가 있을 수 있습니다. 장소 ID는 시간이 지남에 따라 변경될 수 있습니다.
Places API와 여러 Google Maps Platform API에서 동일한 장소 ID를 사용할 수 있습니다. 예를 들어 동일한 장소 ID를 사용하여 Places API [https://developers.google.com/maps/documentation/places?hl=ko], Maps JavaScript API [https://developers.google.com/maps/documentation/javascript/places?hl=ko], Geocoding API [https://developers.google.com/maps/documentation/geocoding?hl=ko], Maps Embed API [https://developers.google.com/maps/documentation/embed?hl=ko], Roads API [https://developers.google.com/maps/documentation/roads/speed-limits?hl=ko]에서 장소를 참조할 수 있습니다.
장소 ID를 사용하여 장소 세부정보 가져오기
장소 ID를 사용하는 일반적인 방법은 (예를 들어 Maps JavaScript API의 Places API [https://developers.google.com/maps/documentation/places/web-service?hl=ko] 또는 장소 라이브러리 [https://developers.google.com/maps/documentation/javascript/places?hl=ko#place_searches]를 사용하여) 장소를 검색한 다음 반환된 장소 ID를 사용하여 장소 세부정보를 가져오는 것입니다. 장소 ID를 저장했다가 나중에 이를 사용하여 동일한 장소 세부정보를 가져올 수도 있습니다. 아래에서 장소 ID 저장 [https://developers.google.com/maps/documentation/javascript/place-id?hl=ko#save-id]에 관해 알아보세요.
Maps JavaScript API에서 장소 라이브러리를 사용하는 예
JavaScript 앱에서 장소 ID를 사용하려면 먼저 장소 검색 [https://developers.google.com/maps/documentation/javascript/places?hl=ko#place_search_responses] 또는 Place Autocomplete (기존) [https://developers.google.com/maps/documentation/javascript/places-autocomplete?hl=ko#get_place_information] 서비스의 getPlace()에서 반환된 PlaceResult에서 ID를 찾아야 합니다. 그런 다음 장소 ID를 사용하여 장소 세부정보 [https://developers.google.com/maps/documentation/javascript/places?hl=ko#place_details_requests]를 조회할 수 있습니다.
var map;

function initialize() {
  // Create a map centered in Pyrmont, Sydney (Australia).
  map = new google.maps.Map(document.getElementById('map'), {
    center: {lat: -33.8666, lng: 151.1958},
    zoom: 15
  });

  // Search for Google's office in Australia.
  var request = {
    location: map.getCenter(),
    radius: '500',
    query: 'Google Sydney'
  };

  var service = new google.maps.places.PlacesService(map);
  service.textSearch(request, callback);
}

// Checks that the PlacesServiceStatus is OK, and adds a marker
// using the place ID and location from the PlacesService.
function callback(results, status) {
  if (status == google.maps.places.PlacesServiceStatus.OK) {
    var marker = new google.maps.Marker({
      map: map,
      place: {
        placeId: results[0].place_id,
        location: results[0].geometry.location
      }
    });
  }
}

google.maps.event.addDomListener(window, 'load', initialize);
나중에 사용하기 위해 장소 ID 저장
장소 ID에는 Google Maps Platform 서비스 약관의 3.2.3(b)항 [https://cloud.google.com/maps-platform/terms?hl=ko#3.-license.]에 명시된 캐싱 제한사항이 적용되지 않습니다. 따라서 나중에 사용하기 위해 장소 ID 값을 저장할 수 있습니다.
저장된 장소 ID 새로고침
Google 지도 데이터베이스의 업데이트로 인해 장소 ID가 변경될 수 있으므로 12개월 이상 지난 장소 ID는 갱신하는 것이 좋습니다. 장소 ID는 fields 매개변수의 place_id 필드만 지정하고 장소 세부정보를 요청 [https://developers.google.com/maps/documentation/javascript/places?hl=ko#place_details_requests]하여 무료로 갱신할 수 있습니다.
그러면 Places Details - ID Refresh [https://developers.google.com/maps/billing-and-pricing/sku-details?hl=ko#place-details-id-refresh-ess-sku] SKU가 실행됩니다.
장소 ID 사용 시 오류 코드
INVALID_REQUEST
INVALID_REQUEST 상태 코드는 지정된 장소 ID가 유효하지 않음을 나타냅니다. 장소 ID가 잘렸거나 다른 방식으로 수정되어 더 이상 올바르지 않은 경우 INVALID_REQUEST가 반환될 수도 있습니다.
NOT_FOUND
NOT_FOUND 상태 코드는 지정된 장소 ID가 더 이상 사용되지 않음을 나타냅니다. 비즈니스가 폐업하거나 새로운 위치로 이전하면 장소 ID가 더 이상 사용되지 않을 수도 있습니다. Google 지도 데이터베이스의 업데이트로 인해 장소 ID가 변경될 수도 있습니다. 이 경우 장소에 새 장소 ID가 부여될 수도 있으며 이전 ID는 NOT_FOUND 응답을 반환합니다.
참고: 더 이상 사용되지 않는 장소 ID는 Google 지도 데이터베이스에서 삭제된 후 며칠 동안 Place Autocomplete (기존), Query Autocomplete (기존) 또는 Autocomplete (신규) 응답에서 계속 반환될 수 있습니다.
더 이상 사용되지 않는 장소 ID가 있는 경우 결과를 새로고침하려면 각 장소 ID를 반환한 원래 요청을 저장하고 필요에 따라 요청을 다시 실행합니다. 재발급된 요청에는 적절한 SKU의 요금이 청구됩니다.
일부 유형의 장소 ID는 경우에 따라 NOT_FOUND 응답을 유발하거나 API가 응답에 다른 장소 ID를 반환할 수도 있습니다. 여기에는 다음과 같은 장소 ID 유형이 포함됩니다.
Google 지도에 정확한 주소로 존재하지 않지만 주소 범위에서 추론되는 상세 주소
요청에서 도시 또는 지역을 지정하는 긴 경로의 구간
교차로
subpremise 유형의 주소 구성요소가 포함된 장소
이러한 ID는 주로 긴 문자열의 형태를 취합니다(장소 ID에는 길이 제한이 없음). 예를 들면 다음과 같습니다.
EpID4LC14LC_4LCo4LCv4LGN4LCo4LCX4LCw4LGNIC0g4LC44LGI4LCm4LGN4LCs4LC-4LCm4LGNIOCwsOCxi-CwoeCxjeCwoeCxgSAmIOCwteCwv-CwqOCwr-CxjSDgsKjgsJfgsLDgsY0g4LCu4LGG4LCv4LC_4LCo4LGNIOCwsOCxi-CwoeCxjeCwoeCxgSwg4LC14LC_4LCo4LCv4LGNIOCwqOCwl-CwsOCxjSDgsJXgsL7gsLLgsKjgsYAsIOCwsuCwleCxjeCwt-CxjeCwruCwv-CwqOCwl-CwsOCxjSDgsJXgsL7gsLLgsKjgsYAsIOCwuOCwsOCxguCwsOCxjSDgsKjgsJfgsLDgsY0g4LC14LGG4LC44LGN4LCf4LGNLCDgsLjgsK_gsYDgsKbgsL7gsKzgsL7gsKbgsY0sIOCwueCxiOCwpuCwsOCwvuCwrOCwvuCwpuCxjSwg4LCk4LGG4LCy4LCC4LCX4LC-4LCjIDUwMDA1OSwg4LCt4LC-4LCw4LCk4LCm4LGH4LC24LCCImYiZAoUChIJ31l5uGWYyzsR9zY2qk9lDiASFAoSCd9ZebhlmMs7Efc2NqpPZQ4gGhQKEglDz61OZpjLOxHgDJCFY-o1qBoUChIJi37TW2-YyzsRr_uv50r7tdEiCg1MwFcKFS_dyy4
의견 보내기