Source URL: https://developers.google.com/maps/documentation/places/android-sdk/config?hl=ko

이 페이지는 Cloud Translation API를 통해 번역되었습니다.
홈
제품
Google Maps Platform
문서
Android
Places SDK for Android
가이드
의견 보내기
Android 스튜디오 프로젝트 설정
알림: Android용 Places SDK 버전 2.0.0 이상은 AndroidX에 종속됩니다. 이 버전부터 이전 지원 라이브러리는 더 이상 지원되지 않습니다. 호환성을 유지하려면 AndroidX를 사용하도록 프로젝트를 이전해야 합니다.
Android용 Places SDK를 사용하도록 앱을 구성하려면 다음 단계를 따르세요. Android용 Places SDK를 사용하는 모든 앱에 필요합니다.
1단계: Android 스튜디오 설정하기
이 문서에서는 Android 스튜디오 Hedgehog 및 Android Gradle 플러그인 버전 8.2를 사용하는 개발 환경을 설명합니다.
참고: 개발 환경에서 다른 버전의 Android 스튜디오 또는 Gradle을 사용하는 경우 이러한 버전에 따라 단계를 수정해야 할 수도 있습니다. Android 스튜디오 및 Gradle 버전에 대한 자세한 내용은 Android Gradle 플러그인 및 Android 스튜디오 호환성을 참고하세요.
2단계: SDK 설정
Android용 Places SDK 라이브러리는 Google의 Maven 저장소를 통해 사용할 수 있습니다. 앱에 SDK를 추가하려면 다음 지침을 따르세요.
최상위 수준 settings.gradle.kts 파일의 pluginManagement 블록 아래에 Gradle 플러그인 포털, Google Maven 저장소, Maven 중앙 저장소를 포함합니다. pluginManagement 블록은 스크립트의 모든 문 앞에 표시되어야 합니다.
pluginManagement {
    repositories {
        gradlePluginPortal()
        google()
        mavenCentral()
    }
} 
최상위 수준 settings.gradle.kts 파일의 dependencyResolutionManagement 블록 아래 Google Maven 저장소, Maven 중앙 저장소를 포함합니다.
dependencyResolutionManagement {
    repositoriesMode.set(RepositoriesMode.FAIL_ON_PROJECT_REPOS)
    repositories {
        google()
        mavenCentral()
    }
} 
모듈 수준 build.gradle.kts 파일의 dependencies 섹션에서 Android용 Places SDK에 종속 항목을 추가합니다.
참고: Android용 Places SDK 버전 3.5.0에는 kotlin-bom 1.8.0 이상이 필요합니다. kotlin-bom 종속 항목에 관한 자세한 내용은 전이 종속 항목에서 최신 kotlin-stdlib 버전 사용을 참고하세요.
모듈 수준 build.gradle.kts 파일에서 compileSdk 및 minSdk를 다음 값으로 설정합니다.
참고: compileSdk는 34 이상으로, minSdk는 23 이상으로 설정해야 합니다.
모듈 수준 build.gradle 파일의 buildFeatures 섹션에서 이 절차의 뒷부분에 정의된 메타데이터 값에 액세스하는 데 사용하는 BuildConfig 클래스를 추가합니다.
3단계: 프로젝트에 API 키 추가
이 섹션에서는 API 키를 앱이 더욱 안전하게 참조할 수 있도록 저장하는 방법을 설명합니다. API 키는 버전 제어 시스템에 체크인하면 안 되기 때문에 프로젝트의 루트 디렉터리에 있는 secrets.properties 파일에 저장할 것을 권장합니다. secrets.properties 파일에 관한 자세한 내용은 Gradle 속성 파일을 참고하세요.
이 작업을 간소화하려면 Android용 Secrets Gradle 플러그인을 사용하는 것이 좋습니다.
참고: 최신 시스템 요구사항 및 설치 안내는 GitHub의 Android용 Secrets Gradle 플러그인 문서를 참고하세요.
Google 지도 프로젝트에 Android용 Secrets Gradle 플러그인을 설치하려면 다음 단계를 따르세요.
Android 스튜디오에서 최상위 수준 build.gradle.kts 또는 build.gradle 파일을 열고 다음 코드를 buildscript 아래 dependencies 요소에 추가합니다.
모듈 수준 build.gradle.kts 또는 build.gradle 파일을 열고 plugins 요소에 다음 코드를 추가합니다.
모듈 수준 build.gradle.kts 또는 build.gradle 파일에서 targetSdk 및 compileSdk가 34로 설정되어 있는지 확인합니다.
Gradle과 프로젝트를 동기화합니다.
최상위 수준 디렉터리에서 secrets.properties 파일을 연 후 다음 코드를 추가합니다. YOUR_API_KEY를 직접 생성한 API 키로 변경합니다. secrets.properties가 버전 제어 시스템에 체크인되는 데서 제외되었으므로 키를 이 파일에 저장합니다.
참고: secrets.properties 파일이 존재하지 않으면 local.properties 파일과 동일한 폴더에 파일을 만듭니다.
PLACES_API_KEY=YOUR_API_KEY
최상위 수준 디렉터리에서 secrets.properties 파일과 동일한 폴더에 local.defaults.properties 파일을 만든 후 다음 코드를 추가합니다.
참고: 아래에 표시된 대로 코드를 입력하세요. DEFAULT_API_KEY를 API 키로 바꾸지 마세요.
PLACES_API_KEY=DEFAULT_API_KEY
이 파일의 목적은 secrets.properties 파일이 없는 경우 빌드에 실패하지 않도록 API 키의 백업 위치를 제공하는 것입니다. 이는 버전 제어 시스템에서 secrets.properties가 빠진 앱을 복제하거나 API 키를 제공하는 secrets.properties 파일을 아직 로컬에서 생성하지 않은 경우 발생할 수 있습니다.
Android 스튜디오에서 모듈 수준 build.gradle.kts 또는 build.gradle 파일을 열고 secrets 속성을 수정합니다. secrets 속성이 없는 경우 추가합니다.
플러그인의 속성을 수정하여 propertiesFileName를 secrets.properties로, defaultPropertiesFileName를 local.defaults.properties로 설정하고 다른 속성을 설정합니다.
4단계: Places API 클라이언트 초기화
활동 또는 프래그먼트 내에서 Android용 Places SDK를 초기화합니다. 먼저 사용할 SDK 버전(Android용 Places SDK 또는 Android용 Places SDK(신규))을 결정해야 합니다. 제품 버전에 관한 자세한 내용은 SDK 버전 선택하기를 참고하세요.
다음 예는 두 버전 모두에서 SDK를 초기화하는 방법을 보여줍니다.
중요: API 키를 애플리케이션 코드에 직접 추가하지 마세요. 프로덕션 환경에서는 안전한 메커니즘을 사용하여 API 키를 관리하는 것이 좋습니다.
이제 Android용 Places SDK를 사용할 준비가 되었습니다.
5단계: Android 기기 설정하기
Android용 Places SDK를 사용하는 앱을 실행하려면 Google API를 포함하는 Android 5.0 이상의 Android 기기 또는 Android 에뮬레이터에 앱을 배포해야 합니다.
Android 기기를 사용하려면 하드웨어 기기에서 앱 실행의 안내를 따르세요.
Android Emulator를 사용하려면 Android 스튜디오와 함께 제공되는 Android Virtual Device(AVD) Manager를 이용해 가상 기기를 만들고 에뮬레이터를 설치하면 됩니다.
참고: Android Emulator를 사용하는 경우 Play 아이콘 이 있고 Play 스토어 열 아래 표시된 기기를 선택해야 합니다. 이 아이콘은 프로필이 CTS의 모든 요건을 충족하며 Play 스토어 앱이 포함된 시스템 이미지를 사용할 수 있음을 나타냅니다.
다음 단계
프로젝트가 구성되면 샘플 앱을 살펴볼 수 있습니다.
의견 보내기