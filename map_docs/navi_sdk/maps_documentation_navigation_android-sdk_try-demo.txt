Source URL: https://developers.google.com/maps/documentation/navigation/android-sdk/try-demo?hl=ko

이 페이지는 Cloud Translation API [https://cloud.google.com/translate/?hl=ko]를 통해 번역되었습니다.
Switch to English
홈 [https://developers.google.com/?hl=ko]
제품 [https://developers.google.com/products?hl=ko]
Google Maps Platform [https://developers.google.com/maps?hl=ko]
문서 [https://developers.google.com/maps/documentation?hl=ko]
Android [https://developers.google.com/maps/android?hl=ko]
Navigation SDK for Android [https://developers.google.com/maps/documentation/navigation/android-sdk?hl=ko]
도움이 되었나요?
의견 보내기
데모 보기
bookmark_border
이 페이지의 내용
준비 [https://developers.google.com/maps/documentation/navigation/android-sdk/try-demo?hl=ko#get_ready]
데모 앱 가져오기 [https://developers.google.com/maps/documentation/navigation/android-sdk/try-demo?hl=ko#get_the_demo_apps]
GoogleNavigation 데모 [https://developers.google.com/maps/documentation/navigation/android-sdk/try-demo?hl=ko#the_googlenavigation_demo]
빌드 [https://developers.google.com/maps/documentation/navigation/android-sdk/try-demo?hl=ko#build]
실행 [https://developers.google.com/maps/documentation/navigation/android-sdk/try-demo?hl=ko#run]
NavViewActivity 및 NavFragmentActivity 옵션 [https://developers.google.com/maps/documentation/navigation/android-sdk/try-demo?hl=ko#navviewactivity_and_navfragmentactivity_options]
SwappingMapAndNavActivity 옵션 [https://developers.google.com/maps/documentation/navigation/android-sdk/try-demo?hl=ko#swappingmapandnavactivity_option]
GoogleMap 데모 [https://developers.google.com/maps/documentation/navigation/android-sdk/try-demo?hl=ko#the_googlemap_demo]
Android용 Navigation SDK를 통합하면 앱이 외부 지도 뷰에 연결하는 것 이상의 기능을 제공할 수 있습니다. Google 지도 내비게이션을 사용하면 앱에서 사용자의 여정에 관한 데이터를 동적으로 검색하고 한눈에 볼 수 있는 보고서를 제공할 수 있습니다. 이 가이드에서는 GitHub에서 제공되는 Navigation SDK 데모 앱을 실행하는 방법을 설명합니다.
준비
Navigation SDK를 시작하려면 다음 항목이 있어야 합니다.
Navigation SDK와 함께 사용하도록 프로비저닝된 API 키입니다. 키 생성 및 제한에 대한 자세한 내용은 API 키 사용 [https://developers.google.com/maps/documentation/navigation/android-sdk/get-api-key?hl=ko]을 참고하세요.
SDK 아티팩트입니다. Navigation SDK에 Maven을 사용하도록 프로젝트가 구성 [https://developers.google.com/maps/documentation/navigation/android-sdk/set-up-project?hl=ko#using_maven_for_v45_and_later_recommended]되어 있는지 확인합니다.
하나 이상의 데모 앱 [https://developers.google.com/maps/documentation/navigation/android-sdk/try-demo?hl=ko#get_the_demo_apps]
Android 스튜디오 [https://developer.android.com/studio/intro/?hl=ko]: Navigation SDK로 앱을 빌드하는 데 권장되는 개발 환경입니다.
이 문서는 Android 개발 및 객체 지향 프로그래밍 개념에 익숙한 개발자를 위해 작성되었습니다. 사용자의 관점에서 Google 지도에도 익숙해야 합니다.
참고: 앱에서 이미 Maps SDK [https://developers.google.com/maps/documentation/android-sdk?hl=ko]를 사용하는 경우 지도 레이어와 탐색 기능 모두에 대해 Navigation SDK가 Maps SDK를 대체합니다. 동일한 앱에서 Navigation SDK와 Maps SDK를 사용할 수 없습니다.
데모 앱 가져오기
Google에서는 경험 수준에 따라 Google 지도 API 위에 Navigation SDK가 제공하는 기능을 이해하는 데 도움이 되는 두 가지 앱을 제공합니다. Google Maps API에 익숙한 개발자는 GoogleNavigation 데모에 집중할 수 있습니다. 두 프로젝트를 처음 접하는 개발자에게는 두 앱 모두 유용합니다.
Android용 Navigation SDK v4.1부터 다음 데모 앱은 모두 GitHub [https://github.com/googlemaps-samples/android-navigation-samples]에서 다운로드할 수 있습니다.
GoogleNavigation 데모: 안내 탐색 세션 중 사용자 환경과 관련된 API 동작 및 뷰의 통합을 보여줍니다.
GoogleMap 데모: GoogleMap [https://developers.google.com/maps/documentation/navigation/android-sdk/reference/com/google/android/gms/maps/GoogleMap?hl=ko] 인터페이스의 개별 동작을 보여주어 지도의 느낌과 표현을 맞춤설정합니다.
GoogleNavigation 데모
최신 GoogleNavigation 데모는 GitHub [https://github.com/googlemaps-samples/android-navigation-samples]에서 확인할 수 있습니다.
빌드
Android 스튜디오에서 데모 앱을 가져오고 Gradle을 실행하도록 허용합니다.
참고: 프로비저닝된 API 키로 local.defaults.properties를 업데이트할 때까지 앱에서 지도를 로드하지 못합니다.
local.defaults.properties을 열고 MAPS_API_KEY 속성 값을 업데이트합니다.
  MAPS_API_KEY=YOUR_API_KEY
빌드를 클릭하고 SDK 구현 세부정보를 살펴봅니다.
Java 클래스에서 구현 코드를 확인합니다.
레이아웃 XML에서 레이아웃 디자인과 텍스트를 확인합니다.
build.gradle 파일에서 종속 항목의 SDK를 확인합니다.
API 키가 매니페스트에 추가되는 방법에 관한 자세한 내용은 Secrets Gradle 플러그인 [https://developers.google.com/maps/documentation/android-sdk/secrets-gradle-plugin?hl=ko] 문서를 참고하세요.
실행
Android 기기를 컴퓨터에 연결하거나 에뮬레이터를 사용합니다.
Android 기기: 안내 [https://developer.android.com/studio/run/device.html?hl=ko]에 따라 Android 기기에서 개발자 옵션을 사용 설정하고 기기를 감지하도록 시스템을 구성합니다.
에뮬레이터: Android Virtual Device (AVD) Manager [https://developer.android.com/studio/run/managing-avds.html?hl=ko]를 사용하여 가상 기기를 구성합니다. 에뮬레이터를 선택할 때 Google API가 포함된 이미지를 선택해야 합니다.
Android 스튜디오에서 Run 메뉴 옵션 (또는 재생 버튼 아이콘)을 클릭한 후 배포 대상을 선택합니다.
빌드되고 실행되면 앱은 사용자에게 옵션 목록의 방문 페이지를 표시합니다.
NavViewActivity 및 NavFragmentActivity 옵션
NavSDK를 새로 도입하는 사용자는 이 두 옵션이 가장 유용할 것입니다.
옵션 1: NavViewActivity는 Navigator [https://developers.google.com/maps/documentation/navigation/android-sdk/reference/com/google/android/libraries/navigation/Navigator?hl=ko]와 함께 NavigationView [https://developers.google.com/maps/documentation/navigation/android-sdk/reference/com/google/android/libraries/navigation/NavigationView?hl=ko]를 사용하여 동작을 보여줍니다.
옵션 2: 두 번째 옵션인 NavFragmentActivity에서는 Navigator [https://developers.google.com/maps/documentation/navigation/android-sdk/reference/com/google/android/libraries/navigation/Navigator?hl=ko]와 함께 SupportNavigationFragment [https://developers.google.com/maps/documentation/navigation/android-sdk/reference/com/google/android/libraries/navigation/SupportNavigationFragment?hl=ko]를 사용하는 동작을 보여줍니다.
참고: 대부분의 경우 NavigationView과 직접 상호작용하는 대신 NavigationView [https://developers.google.com/maps/documentation/navigation/android-sdk/reference/com/google/android/libraries/navigation/NavigationView?hl=ko]의 래퍼인 SupportNavigationFragment [https://developers.google.com/maps/documentation/navigation/android-sdk/reference/com/google/android/libraries/navigation/SupportNavigationFragment?hl=ko]를 사용하는 것이 좋습니다. 자세한 내용은 탐색 지도 상호작용 권장사항 [https://developers.google.com/maps/documentation/navigation/android-sdk/nav-map-interactions-best-practices?hl=ko]을 참고하세요.
이러한 옵션 중 하나를 클릭하면 다음과 같은 내용이 표시됩니다.
탐색 UI
앱 메뉴의 '목적지 설정' 버튼
API에서 메서드를 동적으로 호출하기 위해 상호작용할 수 있는 오버레이
추가 옵션이 있는 더보기 메뉴
시작하려면 목적지 설정을 클릭하고 주소를 선택합니다. 그런 다음 앱은 현재 위치에서 해당 주소까지의 이동을 시뮬레이션합니다. 제어판 오버레이를 사용하여 API를 호출할 때 어떤 일이 발생하는지 확인합니다. 예를 들어 보기 메서드를 클릭하여 SDK를 야간 모드로 강제 설정하고 어떻게 표시되는지 확인할 수 있습니다.
SwappingMapAndNavActivity 옵션
참고: 이 옵션은 v1에서 v4로 전환하는 데 도움이 됩니다. 가능한 경우 NavigationView만 사용하는 것이 좋지만, 두 가지를 함께 사용하는 방법을 보여주는 예시로 제공됩니다.
SwappingMapAndNavActivity에서는 다음과 같은 일반적인 패턴을 보여줍니다.
MapView [https://developers.google.com/maps/documentation/navigation/android-sdk/reference/com/google/android/gms/maps/MapView?hl=ko] 표시
내비게이션이 시작되면 NavigationView [https://developers.google.com/maps/documentation/navigation/android-sdk/reference/com/google/android/libraries/navigation/NavigationView?hl=ko]으로 전환
탐색이 종료되면 MapView [https://developers.google.com/maps/documentation/navigation/android-sdk/reference/com/google/android/gms/maps/MapView?hl=ko]로 돌아감
GoogleMap 데모
최신 GoogleNavigation 데모는 GitHub [https://github.com/googlemaps-samples/android-navigation-samples]에서 확인할 수 있습니다.
참고: 앱에서 GoogleMap 객체와 상호작용하는 방법에 관한 자세한 내용은 GoogleMap 상호작용 권장사항 [https://developers.google.com/maps/documentation/navigation/android-sdk/googlemap-interactions-best-practices?hl=ko]을 참고하세요.
빌드
Android 스튜디오에서 데모 앱을 가져오고 Gradle을 실행하도록 허용합니다.
참고: 프로비저닝된 API 키로 local.defaults.properties를 업데이트할 때까지 앱에서 지도를 로드하지 못합니다.
local.defaults.properties을 열고 MAPS_API_KEY 속성 값을 업데이트합니다.
  MAPS_API_KEY=YOUR_API_KEY
빌드를 클릭하고 SDK 구현 세부정보를 살펴봅니다.
Java 클래스에서 구현 코드를 확인합니다.
레이아웃 XML에서 레이아웃 디자인과 텍스트를 확인합니다.
build.gradle 파일에서 종속 항목의 SDK를 확인합니다.
API 키가 매니페스트에 추가되는 방법에 관한 자세한 내용은 secrets Gradle 플러그인 [https://developers.google.com/maps/documentation/android-sdk/secrets-gradle-plugin?hl=ko]을 참고하세요.
실행
Android 기기를 컴퓨터에 연결하거나 에뮬레이터를 사용합니다.
Android 기기 안내 [https://developer.android.com/studio/run/device.html?hl=ko]에 따라 Android 기기에서 개발자 옵션을 사용 설정하고 기기를 감지하도록 시스템을 구성합니다.
에뮬레이터 Android Virtual Device (AVD) Manager [https://developer.android.com/studio/run/managing-avds.html?hl=ko]를 사용하여 가상 기기를 구성합니다. 에뮬레이터를 선택할 때 Google API가 포함된 이미지를 선택해야 합니다.
Android 스튜디오에서 Run 메뉴 옵션 (또는 재생 버튼 아이콘)을 클릭한 후 배포 대상을 선택합니다.
빌드 및 실행되면 앱은 데모 목록의 방문 페이지를 사용자에게 표시합니다.
이 프레젠테이션 패턴과 소스 코드의 해당 구조는 Google Maps SDK 데모 사용자에게 친숙해야 합니다. 이는 GoogleMap 데모가 Maps API 데모 앱 [https://developers.google.com/maps/documentation/android-sdk/code-samples?hl=ko]과 유사하도록 설계되었기 때문입니다. 주요 차이점은 Navigation SDK 데모를 통해 사용자가 데모를 테스트 실행할 뷰 클래스(NavigationView [https://developers.google.com/maps/documentation/navigation/android-sdk/reference/com/google/android/libraries/navigation/NavigationView?hl=ko] 또는 MapView [https://developers.google.com/maps/documentation/navigation/android-sdk/reference/com/google/android/gms/maps/MapView?hl=ko])를 선택할 수 있다는 것입니다(해당하는 경우).
Google은 일반적으로 채택자가 NavigationView [https://developers.google.com/maps/documentation/navigation/android-sdk/reference/com/google/android/libraries/navigation/NavigationView?hl=ko]을 사용하도록 권장합니다. 이 데모에서는 데모 앱의 두 버전에서 이러한 동작을 모두 시도하고 자신에게 적합한 버전을 선택할 수 있습니다. 예를 들어 해당 클래스와 상호작용할 것으로 예상되는 서드 파티 라이브러리를 사용하는 상황에서는 MapView를 사용해야 할 수 있습니다.
중요: MapView [https://developers.google.com/maps/documentation/navigation/android-sdk/reference/com/google/android/gms/maps/MapView?hl=ko], MapFragment [https://developers.google.com/maps/documentation/navigation/android-sdk/reference/com/google/android/gms/maps/MapFragment?hl=ko], SupportMapFragment [https://developers.google.com/maps/documentation/navigation/android-sdk/reference/com/google/android/gms/maps/SupportMapFragment?hl=ko] 클래스를 사용하려면 기기에 Google Play 서비스 애플리케이션이 설치되어 있어야 합니다. 새 에뮬레이터를 시작하거나 매우 오래된 기기를 초기화하면 Android 이미지에 매우 오래된 Google Play 서비스가 사전 설치되어 있을 수 있습니다. 이 경우 최신 버전이 자동으로 가져와질 때까지 기다리거나 Google Play 스토어를 통해 Play 서비스를 수동으로 업데이트해야 합니다.
도움이 되었나요?
의견 보내기