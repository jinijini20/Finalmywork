Source URL: https://developers.google.com/maps/documentation/javascript/examples/rgm-college-picker?hl=ko
Title: React Google Maps Library - Extended Component Library

Send feedback

React Google Maps Library - Extended Component Library

Stay organized with collections

Save and categorize content based on your preferences.

This example shows how to build a basic locations services web app using the
Google Maps Platform's Extended Component Library [https://github.com/googlemaps/extended-component-library/tree/main]
with the vis.gl/react-google-maps [https://visgl.github.io/react-google-maps/]
open source library.

Google Maps Platform's Extended Component
Library [https://github.com/googlemaps/extended-component-library/tree/main] is
a set of Web Components that helps developers build better maps faster, and with
less effort. It encapsulates boilerplate code, best practices, and responsive
design, reducing complex map UIs into what is effectively a single HTML element.
These components make it easier to read, learn, customize, and maintain
maps-related code.

The vis.gl/react-google-maps [https://visgl.github.io/react-google-maps/]
library is a collection of React components and hooks for the Google Maps
JavaScript API.
Important: The
vis.gl/react-google-maps [https://visgl.github.io/react-google-maps/] library
and the Extended Component
Library [https://github.com/googlemaps/extended-component-library/tree/main] are
offered using an open source license. It is not governed by the Google Maps
Platform Support Technical Support Services Guidelines, the SLA, or the
Deprecation Policy (however, any Google Maps Platform services used by the
library remain subject to the Google Maps Platform Terms of Service). If you
find a bug, or have a feature request, file an issue on the respective library
site.

TypeScript
import React, { useState, useRef } from 'react';
import ReactDOM from 'react-dom/client';
import { AdvancedMarker, Map, Pin, APIProvider } from '@vis.gl/react-google-maps';
import {
PlaceReviews,
PlaceDataProvider,
PlaceDirectionsButton,
IconButton,
PlaceOverview,
SplitLayout,
OverlayLayout,
PlacePicker
import { PlacePicker as TPlacePicker } from '@googlemaps/extended-component-library/place_picker.js';

/**
* See https://lit.dev/docs/frameworks/react/#using-slots for why
* we need to wrap our custom elements in a div with a slot attribute.
*/
return (
<div className="App">
<APIProvider
solutionChannel='GMP_devsite_samples_v3_rgmcollegepicker'
apiKey={API_KEY}
version='beta' >
<SplitLayout rowReverse rowLayoutMinWidth={700}>
<div className="SlotDiv" slot="fixed">
<OverlayLayout ref={overlayLayoutRef}>
<div className="SlotDiv" slot="main">
<PlacePicker
className="CollegePicker"
ref={pickerRef}
forMap="gmap"
country={['us', 'ca']}
type="university"
placeholder="Enter a college in the US or Canada"
onPlaceChange={() => {
if (!pickerRef.current?.value) {
setCollege(undefined);
place={college}
googleLogoAlreadyDisplayed
>
<div slot="action" className="SlotDiv">
<IconButton
slot="action"
variant="filled"
onClick={() => overlayLayoutRef.current?.showOverlay()}
>
See Reviews
</IconButton>
</div>
<div slot="action" className="SlotDiv">
<PlaceDirectionsButton slot="action" variant="filled">
Directions
</PlaceDirectionsButton>
</div>
</PlaceOverview>
</div>
<div slot="overlay" className="SlotDiv">
<IconButton
className="CloseButton"
onClick={() => overlayLayoutRef.current?.hideOverlay()}
>
Close
</IconButton>
<PlaceDataProvider place={college}>
<PlaceReviews />
</PlaceDataProvider>
</div>
</OverlayLayout>
</div>
<div className="SplitLayoutContainer" slot="main">
<Map
id="gmap"
mapId="8c732c82e4ec29d9"
center={college?.location ?? DEFAULT_CENTER}
zoom={college?.location ? DEFAULT_ZOOM_WITH_LOCATION : DEFAULT_ZOOM}
gestureHandling="none"
fullscreenControl={false}
zoomControl={false}
>
<AdvancedMarker position={college?.location}>
<Pin background={'#FBBC04'} glyphColor={'#000'} borderColor={'#000'} />
</AdvancedMarker>
)}
</Map>
</div>
</SplitLayout>
</APIProvider>
</div>
<React.StrictMode>
<App />
</React.StrictMode>
);index.tsx [https://github.com/googlemaps/js-samples/blob/2683f7366fb27829401945d2a7e27d77ed2df8e5/samples/rgm-college-picker/index.tsx#L8-L136]

Note: Read the guide [https://developers.google.com/maps/documentation/javascript/using-typescript] on using TypeScript and Google Maps.

JavaScript
import React, { useState, useRef } from "react";
import ReactDOM from "react-dom/client";
import {
AdvancedMarker,
Map,
Pin,
APIProvider,
PlaceReviews,
PlaceDataProvider,
PlaceDirectionsButton,
IconButton,
PlaceOverview,
SplitLayout,
OverlayLayout,
PlacePicker,
/**
* See https://lit.dev/docs/frameworks/react/#using-slots for why
* we need to wrap our custom elements in a div with a slot attribute.
*/
return (
<div className="App">
<APIProvider
solutionChannel="GMP_devsite_samples_v3_rgmcollegepicker"
apiKey={API_KEY}
version="beta"
>
<SplitLayout rowReverse rowLayoutMinWidth={700}>
<div className="SlotDiv" slot="fixed">
<OverlayLayout ref={overlayLayoutRef}>
<div className="SlotDiv" slot="main">
<PlacePicker
className="CollegePicker"
ref={pickerRef}
forMap="gmap"
country={["us", "ca"]}
type="university"
placeholder="Enter a college in the US or Canada"
onPlaceChange={() => {
if (!pickerRef.current?.value) {
setCollege(undefined);
place={college}
googleLogoAlreadyDisplayed
>
<div slot="action" className="SlotDiv">
<IconButton
slot="action"
variant="filled"
onClick={() => overlayLayoutRef.current?.showOverlay()}
>
See Reviews
</IconButton>
</div>
<div slot="action" className="SlotDiv">
<PlaceDirectionsButton slot="action" variant="filled">
Directions
</PlaceDirectionsButton>
</div>
</PlaceOverview>
</div>
<div slot="overlay" className="SlotDiv">
<IconButton
className="CloseButton"
onClick={() => overlayLayoutRef.current?.hideOverlay()}
>
Close
</IconButton>
<PlaceDataProvider place={college}>
<PlaceReviews />
</PlaceDataProvider>
</div>
</OverlayLayout>
</div>
<div className="SplitLayoutContainer" slot="main">
<Map
id="gmap"
mapId="8c732c82e4ec29d9"
center={college?.location ?? DEFAULT_CENTER}
zoom={
college?.location ? DEFAULT_ZOOM_WITH_LOCATION : DEFAULT_ZOOM
fullscreenControl={false}
zoomControl={false}
>
<AdvancedMarker position={college?.location}>
<Pin
background={"#FBBC04"}
glyphColor={"#000"}
borderColor={"#000"}
/>
</AdvancedMarker>
)}
</Map>
</div>
</SplitLayout>
</APIProvider>
</div>
<React.StrictMode>
<App />
</React.StrictMode>,
);index.jsx [https://github.com/googlemaps/js-samples/blob/2683f7366fb27829401945d2a7e27d77ed2df8e5/dist/samples/rgm-college-picker/docs/index.jsx#L7-L137]

Note: The JavaScript is compiled from the TypeScript snippet.

CSS
body {
<html>
<head>
<title>React Google Maps - College Picker App</title>

<link rel="stylesheet" type="text/css" href="./style.css" />
</head>
<body>
<div id="root"></div>
<script type="module" src="./index"></script>
</body>
</html>index.html [https://github.com/googlemaps/js-samples/blob/2683f7366fb27829401945d2a7e27d77ed2df8e5/dist/samples/rgm-college-picker/docs/index.html#L8-L18]

Try Sample

Google Cloud Shell [https://ssh.cloud.google.com/cloudshell/editor?cloudshell_git_repo=https%3A%2F%2Fgithub.com%2Fgooglemaps%2Fjs-samples&cloudshell_git_branch=sample-rgm-college-picker&cloudshell_tutorial=cloud_shell_instructions.md&cloudshell_workspace=.]

Clone Sample

Git and Node.js are required to run this sample locally. Follow these instructions [https://docs.npmjs.com/downloading-and-installing-node-js-and-npm] to install Node.js and NPM. The following commands clone, install dependencies and start the sample application.

git clone -b sample-rgm-college-picker https://github.com/googlemaps/js-samples.git
cd js-samples
npm i
npm start

Other samples can be tried by switching to any branch beginning with sample-SAMPLE_NAME.

git checkout sample-SAMPLE_NAME
npm i
npm start

Send feedback