Source URL: https://developers.google.com/maps/documentation/javascript/examples/map-geolocation?hl=ko
Title: Geolocation

Send feedback

Geolocation

Stay organized with collections

Save and categorize content based on your preferences.

This example creates a map that displays the geographic location of a user or
device on a Google map, through use of their browser's HTML5 Geolocation
feature. The user must consent to location sharing or else an error is shown.
Read more about the
W3C
Geolocation standard [https://w3c.github.io/geolocation-api/].

Read the documentation [https://developers.google.com/maps/documentation/javascript/geolocation].

TypeScript

locationButton.classList.add("custom-map-control-button");

map.controls[google.maps.ControlPosition.TOP_CENTER].push(locationButton);

locationButton.addEventListener("click", () => {
(position: GeolocationPosition) => {
infoWindow.setContent("Location found.");
infoWindow.open(map);
map.setCenter(pos);
browserHasGeolocation: boolean,
infoWindow: google.maps.InfoWindow,
pos: google.maps.LatLng
) {
infoWindow.setPosition(pos);
infoWindow.setContent(
browserHasGeolocation
? "Error: The Geolocation service failed."
: "Error: Your browser doesn't support geolocation."
infoWindow.open(map);

locationButton.classList.add("custom-map-control-button");
map.controls[google.maps.ControlPosition.TOP_CENTER].push(locationButton);
locationButton.addEventListener("click", () => {
(position) => {
infoWindow.setContent("Location found.");
infoWindow.open(map);
map.setCenter(pos);
infoWindow.setContent(
browserHasGeolocation
? "Error: The Geolocation service failed."
: "Error: Your browser doesn't support geolocation.",
infoWindow.open(map);
/*
* Always set the map height explicitly to define the size of the div element
* that contains the map.
*/
body {
<html>
<head>
<title>Geolocation</title>

<link rel="stylesheet" type="text/css" href="./style.css" />
<script type="module" src="./index.js"></script>
</head>
<body>
<div id="map"></div>

<!--
The `defer` attribute causes the script to execute after the full HTML
document has been parsed. For non-blocking uses, avoiding race conditions,
and consistent behavior across browsers, consider loading using Promises. See
https://developers.google.com/maps/documentation/javascript/load-maps-js-api
for more information.
-->
<script
src="https://maps.googleapis.com/maps/api/js?key=AIzaSyB41DRUbKWJHPxaFjMAwdrzWzbVKartNGg&callback=initMap&v=weekly"
defer
></script>
</body>
</html>index.html [https://github.com/googlemaps/js-samples/blob/2683f7366fb27829401945d2a7e27d77ed2df8e5/dist/samples/map-geolocation/docs/index.html#L8-L30]

View example [https://developers.google.com/maps/documentation/javascript/examples/map-geolocation]

Try Sample

JSFiddle.net [https://jsfiddle.net/gh/get/library/pure/googlemaps/js-samples/tree/master/dist/samples/map-geolocation/jsfiddle]

Google Cloud Shell [https://ssh.cloud.google.com/cloudshell/editor?cloudshell_git_repo=https%3A%2F%2Fgithub.com%2Fgooglemaps%2Fjs-samples&cloudshell_git_branch=sample-map-geolocation&cloudshell_tutorial=cloud_shell_instructions.md&cloudshell_workspace=.]

Clone Sample

Git and Node.js are required to run this sample locally. Follow these instructions [https://docs.npmjs.com/downloading-and-installing-node-js-and-npm] to install Node.js and NPM. The following commands clone, install dependencies and start the sample application.

git clone -b sample-map-geolocation https://github.com/googlemaps/js-samples.git
cd js-samples
npm i
npm start

Other samples can be tried by switching to any branch beginning with sample-SAMPLE_NAME.

git checkout sample-SAMPLE_NAME
npm i
npm start

Send feedback