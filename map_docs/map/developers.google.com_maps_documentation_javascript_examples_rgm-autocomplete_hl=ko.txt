Source URL: https://developers.google.com/maps/documentation/javascript/examples/rgm-autocomplete?hl=ko
Title: React Google Maps Library - Place Autocomplete

Send feedback

React Google Maps Library - Place Autocomplete

Stay organized with collections

Save and categorize content based on your preferences.

This example shows using the Places Autocomplete widget to update a map and
marker in
a React application. It uses the
vis.gl/react-google-maps [https://visgl.github.io/react-google-maps/] open
source library.The
vis.gl/react-google-maps [https://visgl.github.io/react-google-maps/] library
is a collection of React components and hooks for the Google Maps JavaScript
API.
Important: The
vis.gl/react-google-maps [https://visgl.github.io/react-google-maps/] library
is offered using an open source license. It is not governed by the Google Maps
Platform Support Technical Support Services Guidelines, the SLA, or the
Deprecation Policy (however, any Google Maps Platform services used by the
library remain subject to the Google Maps Platform Terms of Service). If you
find a bug, or have a feature request, file an issue on
GitHub [https://github.com/visgl/react-google-maps/issues] .

TypeScript
import React, { useState, useEffect, useRef } from 'react';
import { createRoot } from 'react-dom/client';
import {
APIProvider,
ControlPosition,
MapControl,
AdvancedMarker,
Map,
useMap,
useMapsLibrary,
useAdvancedMarkerRef,
AdvancedMarkerRef

useState<google.maps.places.PlaceResult | null>(null);
const [markerRef, marker] = useAdvancedMarkerRef();

return (
<APIProvider
apiKey={API_KEY}
solutionChannel='GMP_devsite_samples_v3_rgmautocomplete'>
<Map
mapId={'bf51a910020fa25a'}
defaultZoom={3}
defaultCenter={{ lat: 22.54992, lng: 0 }}
gestureHandling={'greedy'}
disableDefaultUI={true}
>
<AdvancedMarker ref={markerRef} position={null} />
</Map>
<MapControl position={ControlPosition.TOP}>
<div className="autocomplete-control">
<PlaceAutocomplete onPlaceSelect={setSelectedPlace} />
</div>
</MapControl>
<MapHandler place={selectedPlace} marker={marker} />
</APIProvider>

if (place.geometry?.viewport) {
map.fitBounds(place.geometry?.viewport);
useState<google.maps.places.Autocomplete | null>(null);

placeAutocomplete.addListener('place_changed', () => {
onPlaceSelect(placeAutocomplete.getPlace());
<div className="autocomplete-container">
<input ref={inputRef} />
</div>

export default App;index.tsx [https://github.com/googlemaps/js-samples/blob/2683f7366fb27829401945d2a7e27d77ed2df8e5/samples/rgm-autocomplete/index.tsx#L17-L120]

Note: Read the guide [https://developers.google.com/maps/documentation/javascript/using-typescript] on using TypeScript and Google Maps.

JavaScript
import React, { useState, useEffect, useRef } from "react";
import { createRoot } from "react-dom/client";
import {
APIProvider,
ControlPosition,
MapControl,
AdvancedMarker,
Map,
useMap,
useMapsLibrary,
useAdvancedMarkerRef,
const [markerRef, marker] = useAdvancedMarkerRef();
return (
<APIProvider
apiKey={API_KEY}
solutionChannel="GMP_devsite_samples_v3_rgmautocomplete"
>
<Map
mapId={"bf51a910020fa25a"}
defaultZoom={3}
defaultCenter={{ lat: 22.54992, lng: 0 }}
gestureHandling={"greedy"}
disableDefaultUI={true}
>
<AdvancedMarker ref={markerRef} position={null} />
</Map>
<MapControl position={ControlPosition.TOP}>
<div className="autocomplete-control">
<PlaceAutocomplete onPlaceSelect={setSelectedPlace} />
</div>
</MapControl>
<MapHandler place={selectedPlace} marker={marker} />
</APIProvider>

if (place.geometry?.viewport) {
map.fitBounds(place.geometry?.viewport);

placeAutocomplete.addListener("place_changed", () => {
onPlaceSelect(placeAutocomplete.getPlace());
<div className="autocomplete-container">
<input ref={inputRef} />
</div>
export default App;index.jsx [https://github.com/googlemaps/js-samples/blob/2683f7366fb27829401945d2a7e27d77ed2df8e5/dist/samples/rgm-autocomplete/docs/index.jsx#L17-L104]

Note: The JavaScript is compiled from the TypeScript snippet.

CSS
body {
<html>
<head>
<title>React Google Maps - Autocomplete</title>

<link rel="stylesheet" type="text/css" href="./style.css" />
</head>
<body>
<div id="app"></div>
<script type="module" src="./index"></script>
</body>
</html>index.html [https://github.com/googlemaps/js-samples/blob/2683f7366fb27829401945d2a7e27d77ed2df8e5/dist/samples/rgm-autocomplete/docs/index.html#L8-L18]

Try Sample

Google Cloud Shell [https://ssh.cloud.google.com/cloudshell/editor?cloudshell_git_repo=https%3A%2F%2Fgithub.com%2Fgooglemaps%2Fjs-samples&cloudshell_git_branch=sample-rgm-autocomplete&cloudshell_tutorial=cloud_shell_instructions.md&cloudshell_workspace=.]

Clone Sample

Git and Node.js are required to run this sample locally. Follow these instructions [https://docs.npmjs.com/downloading-and-installing-node-js-and-npm] to install Node.js and NPM. The following commands clone, install dependencies and start the sample application.

git clone -b sample-rgm-autocomplete https://github.com/googlemaps/js-samples.git
cd js-samples
npm i
npm start

Other samples can be tried by switching to any branch beginning with sample-SAMPLE_NAME.

git checkout sample-SAMPLE_NAME
npm i
npm start

Send feedback