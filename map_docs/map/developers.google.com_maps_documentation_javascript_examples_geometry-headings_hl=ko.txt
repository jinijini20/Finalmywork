Source URL: https://developers.google.com/maps/documentation/javascript/examples/geometry-headings?hl=ko
Title: Navigation Functions (Heading)

Send feedback

Navigation Functions (Heading)

Stay organized with collections

Save and categorize content based on your preferences.

This example demonstrates computing the heading between two coordinates using
the Geometry library. Drag the markers on the map to see the origin, destination
and heading change accordingly.

Read the documentation [https://developers.google.com/maps/documentation/javascript/geometry#Navigation].

TypeScript

map.controls[google.maps.ControlPosition.TOP_CENTER].push(

marker1 = new google.maps.Marker({
map,
draggable: true,
position: { lat: 40.714, lng: -74.006 },
draggable: true,
position: { lat: 48.857, lng: 2.352 },
marker2.getPosition() as google.maps.LatLng

map.fitBounds(bounds);

google.maps.event.addListener(marker1, "position_changed", update);
google.maps.event.addListener(marker2, "position_changed", update);

poly = new google.maps.Polyline({
strokeColor: "#FF0000",
strokeOpacity: 1.0,
strokeWeight: 3,
map: map,
marker2.getPosition() as google.maps.LatLng,
];

poly.setPath(path);
geodesicPoly.setPath(path);

path[1]

(document.getElementById("heading") as HTMLInputElement).value =
String(heading);
(document.getElementById("origin") as HTMLInputElement).value = String(
path[0]
(document.getElementById("destination") as HTMLInputElement).value = String(
path[1]
marker1 = new google.maps.Marker({
map,
draggable: true,
position: { lat: 40.714, lng: -74.006 },
draggable: true,
position: { lat: 48.857, lng: 2.352 },
marker2.getPosition(),

map.fitBounds(bounds);
google.maps.event.addListener(marker1, "position_changed", update);
google.maps.event.addListener(marker2, "position_changed", update);
poly = new google.maps.Polyline({
strokeColor: "#FF0000",
strokeOpacity: 1.0,
strokeWeight: 3,
map: map,
geodesicPoly.setPath(path);

path[1],

/*
* Always set the map height explicitly to define the size of the div element
* that contains the map.
*/
body {
<html>
<head>
<title>Navigation Functions (Heading)</title>

<link rel="stylesheet" type="text/css" href="./style.css" />
<script type="module" src="./index.js"></script>
</head>
<body>
<div id="map"></div>
<div id="floating-panel">
Origin: <input type="text" readonly id="origin" /> Destination:
<input type="text" readonly id="destination" /><br />
Heading: <input type="text" readonly id="heading" /> degrees
</div>

<!--
The `defer` attribute causes the script to execute after the full HTML
document has been parsed. For non-blocking uses, avoiding race conditions,
and consistent behavior across browsers, consider loading using Promises. See
https://developers.google.com/maps/documentation/javascript/load-maps-js-api
for more information.
-->
<script
src="https://maps.googleapis.com/maps/api/js?key=AIzaSyB41DRUbKWJHPxaFjMAwdrzWzbVKartNGg&callback=initMap&libraries=geometry&v=weekly"
defer
></script>
</body>
</html>index.html [https://github.com/googlemaps/js-samples/blob/2683f7366fb27829401945d2a7e27d77ed2df8e5/dist/samples/geometry-headings/docs/index.html#L8-L35]

Try Sample

JSFiddle.net [https://jsfiddle.net/gh/get/library/pure/googlemaps/js-samples/tree/master/dist/samples/geometry-headings/jsfiddle]

Google Cloud Shell [https://ssh.cloud.google.com/cloudshell/editor?cloudshell_git_repo=https%3A%2F%2Fgithub.com%2Fgooglemaps%2Fjs-samples&cloudshell_git_branch=sample-geometry-headings&cloudshell_tutorial=cloud_shell_instructions.md&cloudshell_workspace=.]

Clone Sample

Git and Node.js are required to run this sample locally. Follow these instructions [https://docs.npmjs.com/downloading-and-installing-node-js-and-npm] to install Node.js and NPM. The following commands clone, install dependencies and start the sample application.

git clone -b sample-geometry-headings https://github.com/googlemaps/js-samples.git
cd js-samples
npm i
npm start

Other samples can be tried by switching to any branch beginning with sample-SAMPLE_NAME.

git checkout sample-SAMPLE_NAME
npm i
npm start

Send feedback