Source URL: https://developers.google.com/maps/documentation/javascript/markers?hl=ko

이 페이지는 Cloud Translation API [https://cloud.google.com/translate/?hl=ko]를 통해 번역되었습니다.
홈 [https://developers.google.com/?hl=ko]
제품 [https://developers.google.com/products?hl=ko]
Google Maps Platform [https://developers.google.com/maps?hl=ko]
문서 [https://developers.google.com/maps/documentation?hl=ko]
Web [https://developers.google.com/maps/web?hl=ko]
Maps JavaScript API [https://developers.google.com/maps/documentation/javascript?hl=ko]
의견 보내기
마커(기존)
플랫폼 선택: Android [https://developers.google.com/maps/documentation/android-sdk/marker?hl=ko] iOS [https://developers.google.com/maps/documentation/ios-sdk/marker?hl=ko] JavaScript [https://developers.google.com/maps/documentation/javascript/markers?hl=ko]
google.maps.Marker(v3.56)는 2024년 2월 21일부터 지원 중단되었습니다. 새 google.maps.marker.AdvancedMarkerElement 클래스로 전환하는 것이 좋습니다. 고급 마커를 사용하면 기존 google.maps.Marker 클래스가 크게 개선됩니다. google.maps.marker.AdvancedMarkerElement가 포함된 Maps JavaScript API의 최소 버전은 3.53.2입니다. 현재로서는 google.maps.Marker가 지원 중단될 예정이 없습니다.
자세히 알아보기 [https://developers.google.com/maps/documentation/javascript/advanced-markers/migration?hl=ko]
소개
마커는 지도에서 위치를 나타냅니다. 기본적으로 마커는 표준 이미지를 사용합니다. 마커는 맞춤 이미지를 표시할 수 있으며 이 경우 일반적으로 마커를 '아이콘'이라고 합니다. 마커와 아이콘은 Marker [https://developers.google.com/maps/documentation/javascript/reference/marker?hl=ko] 유형의 객체입니다. 마커의 생성자 내에서 또는 마커에서 setIcon()을 호출하여 맞춤 아이콘을 설정할 수 있습니다. 마커 이미지 맞춤설정 [https://developers.google.com/maps/documentation/javascript/markers?hl=ko#icons]에 대해 자세히 알아보세요.
넓은 관점에서 마커는 오버레이의 한 유형입니다. 다른 오버레이 유형에 대한 자세한 내용은 지도에서 그리기 [https://developers.google.com/maps/documentation/javascript/overlays?hl=ko]를 참고하세요.
마커는 상호작용이 가능합니다. 예를 들어 마커는 기본적으로 'click' 이벤트를 수신하므로 이벤트 리스너를 추가하여 맞춤 정보가 포함된 정보 창 [https://developers.google.com/maps/documentation/javascript/infowindows?hl=ko#open]을 표시할 수 있습니다. 마커의 draggable 속성을 true로 설정하여 사용자가 지도에서 마커를 이동하도록 허용할 수 있습니다. 드래그 가능한 마커에 대한 자세한 내용은 아래 [https://developers.google.com/maps/documentation/javascript/markers?hl=ko#draggable]를 참고하세요.
마커 추가
google.maps.Marker [https://developers.google.com/maps/documentation/javascript/reference/marker?hl=ko] 생성자는 단일 Marker options 객체 리터럴을 가져오고 마커의 초기 속성을 지정합니다.
다음은 마커를 생성할 때 특히 중요하고 일반적으로 설정되는 필드입니다.
position(필수)은 마커의 초기 위치를 나타내는 LatLng를 지정합니다. LatLng를 가져오는 한 가지 방법은 지오코딩 서비스 [https://developers.google.com/maps/documentation/javascript/geocoding?hl=ko]를 사용하는 것입니다.
map(선택사항)은 마커를 배치할 Map을 지정합니다. 마커를 생성할 때 지도를 지정하지 않으면 마커가 생성되지만 지도에 연결되거나 표시되지 않습니다. 마커의 setMap() 메서드를 호출하여 나중에 마커를 추가할 수도 있습니다.
다음 예에서는 오스트레일리아 중앙의 울루루 지도에 간단한 마커를 추가합니다.
예 보기 [https://developers.google.com/maps/documentation/javascript/examples/marker-simple?hl=ko]
샘플 사용해 보기
JSFiddle.net [https://jsfiddle.net/gh/get/library/pure/googlemaps/js-samples/tree/master/dist/samples/marker-simple/jsfiddle]
Google Cloud Shell [https://ssh.cloud.google.com/cloudshell/editor?cloudshell_git_repo=https%3A%2F%2Fgithub.com%2Fgooglemaps%2Fjs-samples&cloudshell_git_branch=sample-marker-simple&cloudshell_tutorial=cloud_shell_instructions.md&cloudshell_workspace=.&hl=ko]
위 예에서는 마커가 마커 옵션의 map 속성을 사용하여 마커를 생성할 때 지도에 배치됩니다. 또는 아래 예에서처럼 마커의 setMap() 메서드를 사용하여 지도에 직접 마커를 추가할 수도 있습니다.
var myLatlng = new google.maps.LatLng(-25.363882,131.044922);
var mapOptions = {
  zoom: 4,
  center: myLatlng
}
var map = new google.maps.Map(document.getElementById("map"), mapOptions);

var marker = new google.maps.Marker({
    position: myLatlng,
    title:"Hello World!"
});

// To add the marker to the map, call setMap();
marker.setMap(map);
마커의 title은 도움말로 표시됩니다.
마커의 생성자에 Marker options를 전달하지 않으려면 생성자의 마지막 인수에서 빈 객체({})를 대신 전달하세요.
예 보기 [https://developers.google.com/maps/documentation/javascript/examples/marker-simple?hl=ko]
마커 제거
지도에서 마커를 제거하려면 null을 인수로 전달하는 setMap() 메서드를 호출하세요.
marker.setMap(null);
위의 메서드는 마커를 삭제하지 않습니다. 지도에서 마커를 제거할 뿐입니다. 마커를 삭제하려면 지도에서 제거한 다음 마커 자체를 null로 설정해야 합니다.
마커 집합을 관리하려면 마커를 보유하는 배열을 만들어야 합니다. 이 배열을 사용하면 마커를 제거해야 할 때 배열의 각 마커에서 setMap()을 차례로 호출할 수 있습니다. 지도에서 마커를 제거한 후 배열의 length를 0으로 설정하여 마커를 삭제할 수 있습니다. 이렇게 하면 마커에 대한 모든 참조가 제거됩니다.
예 보기 [https://developers.google.com/maps/documentation/javascript/examples/marker-remove?hl=ko]
마커 이미지 맞춤설정
기본 Google 지도 압정 아이콘 대신 표시할 이미지 파일 [https://developers.google.com/maps/documentation/javascript/markers?hl=ko#simple_icons] 또는 벡터 기반 아이콘 [https://developers.google.com/maps/documentation/javascript/markers?hl=ko#symbols]을 지정하여 마커의 시각적 모양을 맞춤설정할 수 있습니다. 마커 라벨 [https://developers.google.com/maps/documentation/javascript/markers?hl=ko#marker_labels]이 있는 텍스트를 추가하고, 복잡한 아이콘 [https://developers.google.com/maps/documentation/javascript/markers?hl=ko#complex_icons]을 사용하여 클릭 가능한 영역을 정의하고 마커의 스택 순서를 설정할 수 있습니다.
이미지 아이콘이 있는 마커
가장 기본적인 경우 아이콘은 기본 Google 지도 압정 아이콘 대신 사용할 이미지를 나타낼 수 있습니다. 이러한 아이콘을 지정하려면 마커의 icon 속성을 이미지의 URL로 설정하세요. Maps JavaScript API는 아이콘의 크기를 자동으로 지정합니다.
예 보기 [https://developers.google.com/maps/documentation/javascript/examples/icon-simple?hl=ko]
샘플 사용해 보기
JSFiddle.net [https://jsfiddle.net/gh/get/library/pure/googlemaps/js-samples/tree/master/dist/samples/icon-simple/jsfiddle]
Google Cloud Shell [https://ssh.cloud.google.com/cloudshell/editor?cloudshell_git_repo=https%3A%2F%2Fgithub.com%2Fgooglemaps%2Fjs-samples&cloudshell_git_branch=sample-icon-simple&cloudshell_tutorial=cloud_shell_instructions.md&cloudshell_workspace=.&hl=ko]
벡터 기반 아이콘이 있는 마커
맞춤 SVG 벡터 경로를 사용하여 마커의 시각적 모양을 정의할 수 있습니다. 이렇게 하려면 Symbol 객체 리터럴을 원하는 경로와 함께 마커의 icon 속성에 전달하세요. SVG 경로 표기법 [http://www.w3.org/TR/SVG/paths.html#PathData]을 사용하여 맞춤 경로를 정의하거나 google.maps.SymbolPath [https://developers.google.com/maps/documentation/javascript/reference?hl=ko#SymbolPath]의 사전 정의된 경로 중 하나를 사용할 수 있습니다. 확대/축소 수준이 변경될 때 마커가 올바르게 렌더링되려면 anchor 속성이 필요합니다. 마커 및 다중선에 대해 기호를 사용하여 벡터 기반 아이콘을 만드는 방법 [https://developers.google.com/maps/documentation/javascript/symbols?hl=ko]에 관해 자세히 알아보세요.
예 보기 [https://developers.google.com/maps/documentation/javascript/examples/marker-symbol-custom?hl=ko]
샘플 사용해 보기
JSFiddle.net [https://jsfiddle.net/gh/get/library/pure/googlemaps/js-samples/tree/master/dist/samples/marker-symbol-custom/jsfiddle]
Google Cloud Shell [https://ssh.cloud.google.com/cloudshell/editor?cloudshell_git_repo=https%3A%2F%2Fgithub.com%2Fgooglemaps%2Fjs-samples&cloudshell_git_branch=sample-marker-symbol-custom&cloudshell_tutorial=cloud_shell_instructions.md&cloudshell_workspace=.&hl=ko]
마커 라벨
마커 라벨은 마커 안에 표시되는 문자 또는 숫자입니다. 이 섹션의 마커 이미지는 문자 'B'가 있는 마커 라벨을 표시합니다. 마커 라벨을 문자열이나 문자열 및 기타 라벨 속성이 포함된 MarkerLabel [https://developers.google.com/maps/documentation/javascript/3.exp/reference?hl=ko#MarkerLabel] 객체로 지정할 수 있습니다.
마커를 만들 때 MarkerOptions [https://developers.google.com/maps/documentation/javascript/3.exp/reference?hl=ko#MarkerOptions] 객체에 label 속성을 지정할 수 있습니다. 또는 마커 [https://developers.google.com/maps/documentation/javascript/3.exp/reference?hl=ko#Marker] 객체의 setLabel()을 호출하여 기존 마커에 라벨을 설정할 수 있습니다.
다음 예에서는 사용자가 지도를 클릭할 때 라벨이 지정된 마커를 표시합니다.
예 보기 [https://developers.google.com/maps/documentation/javascript/examples/marker-labels?hl=ko]
샘플 사용해 보기
JSFiddle.net [https://jsfiddle.net/gh/get/library/pure/googlemaps/js-samples/tree/master/dist/samples/marker-labels/jsfiddle]
Google Cloud Shell [https://ssh.cloud.google.com/cloudshell/editor?cloudshell_git_repo=https%3A%2F%2Fgithub.com%2Fgooglemaps%2Fjs-samples&cloudshell_git_branch=sample-marker-labels&cloudshell_tutorial=cloud_shell_instructions.md&cloudshell_workspace=.&hl=ko]
복잡한 아이콘
복잡한 도형을 지정하여 클릭 가능한 영역을 표시하고 다른 오버레이에 비례하여 아이콘이 표시되는 방식('스택 순서')을 지정할 수 있습니다. 이 방식으로 지정된 아이콘은 icon 속성을 Icon [https://developers.google.com/maps/documentation/javascript/3.exp/reference?hl=ko#Icon] 유형의 객체로 설정해야 합니다.
Icon [https://developers.google.com/maps/documentation/javascript/3.exp/reference?hl=ko#Icon] 객체는 이미지를 정의합니다. 이 객체는 또한 아이콘의 size, 아이콘의 origin(예를 들어 원하는 이미지가 스프라이트에 있는 더 큰 이미지의 일부인 경우), (원점에 기반을 둔) 아이콘의 핫스팟을 배치해야 하는 anchor를 정의합니다.
맞춤 마커와 함께 라벨 [https://developers.google.com/maps/documentation/javascript/markers?hl=ko#marker_labels]을 사용하면 Icon [https://developers.google.com/maps/documentation/javascript/3.exp/reference?hl=ko#Icon] 객체의 labelOrigin 속성을 사용하여 라벨을 배치할 수 있습니다.
참고: 마커 그림자는 Maps JavaScript API 버전 3.14에서 삭제되었습니다. 프로그래매틱 방식으로 지정된 그림자는 무시됩니다.
예 보기 [https://developers.google.com/maps/documentation/javascript/examples/icon-complex?hl=ko]
샘플 사용해 보기
JSFiddle.net [https://jsfiddle.net/gh/get/library/pure/googlemaps/js-samples/tree/master/dist/samples/icon-complex/jsfiddle]
Google Cloud Shell [https://ssh.cloud.google.com/cloudshell/editor?cloudshell_git_repo=https%3A%2F%2Fgithub.com%2Fgooglemaps%2Fjs-samples&cloudshell_git_branch=sample-icon-complex&cloudshell_tutorial=cloud_shell_instructions.md&cloudshell_workspace=.&hl=ko]
MarkerImage 객체를 Icon 유형으로 변환
Maps JavaScript API 버전 3.10까지는 복잡한 아이콘이 MarkerImage 객체로 정의되었습니다. Icon 객체 리터럴은 버전 3.10에 추가되었으며 버전 3.11부터 MarkerImage를 대체합니다. Icon 객체 리터럴은 MarkerImage와 동일한 매개변수를 지원하며, 이 객체를 사용하면 생성자를 삭제하고 {}의 이전 매개변수를 래핑하고 각 매개변수의 이름을 추가하여 MarkerImage를 Icon으로 쉽게 변환할 수 있습니다. 예를 들면 다음과 같습니다.
var image = new google.maps.MarkerImage(
    place.icon,
    new google.maps.Size(71, 71),
    new google.maps.Point(0, 0),
    new google.maps.Point(17, 34),
    new google.maps.Size(25, 25));
위 내용이 다음과 같이 변환됩니다.
var image = {
  url: place.icon,
  size: new google.maps.Size(71, 71),
  origin: new google.maps.Point(0, 0),
  anchor: new google.maps.Point(17, 34),
  scaledSize: new google.maps.Size(25, 25)
};
마커 최적화
최적화하면 다수의 마커를 단일 정적 요소로 렌더링하므로 성능이 향상됩니다. 이는 많은 수의 마커가 필요한 경우에 유용합니다. 기본적으로 Maps JavaScript API가 마커를 최적화할지를 결정합니다. 다수의 마커가 있는 경우 Maps JavaScript API에서는 최적화를 사용하여 마커를 렌더링하려고 시도합니다. 모든 마커를 최적화할 수는 없으며, 경우에 따라 Maps JavaScript API에서 최적화 없이 마커를 렌더링해야 할 수도 있습니다. 애니메이션 GIF나 PNG를 대상으로 하거나, 각 마커를 별도의 DOM 요소로 렌더링해야 할 때에는 최적화된 렌더링을 사용 중지합니다. 다음 예는 최적화된 마커를 만드는 방법을 보여줍니다.
var marker = new google.maps.Marker({
    position: myLatlng,
    title:"Hello World!",
    optimized: true 
});
최적화 및 권장사항 [https://mapsplatform.google.com/resources/blog/google-maps-platform-best-practices-optimization-and-performance-tips?hl=ko]에 대해 자세히 알아보세요.
마커에 접근성 기능 추가
클릭 리스너 이벤트를 추가하고 optimized를 false로 설정하여 마커에 접근성 기능을 추가할 수 있습니다. 클릭 리스너로 인해 마커에는 키보드 탐색, 스크린 리더 등을 사용하여 액세스할 수 있는 버튼 시맨틱이 생성됩니다. title 옵션을 사용하여 마커에 접근성 텍스트를 표시하세요.
다음 예에서 Tab 키를 누르면 첫 번째 마커로 포커스가 이동합니다. 그런 다음 화살표 키를 사용하여 마커 사이를 이동할 수 있습니다. 나머지 지도 컨트롤로 계속 이동하려면 Tab을 다시 누르세요. 마커에 정보 창이 있는 경우 마커를 클릭하거나 마커가 선택되었을 때 Enter 키 또는 스페이스바를 눌러 정보 창을 열 수 있습니다. 정보 창이 닫히면 포커스가 연결된 마커로 돌아갑니다.
예 보기 [https://developers.google.com/maps/documentation/javascript/examples/marker-accessibility?hl=ko]
샘플 사용해 보기
JSFiddle.net [https://jsfiddle.net/gh/get/library/pure/googlemaps/js-samples/tree/master/dist/samples/marker-accessibility/jsfiddle]
Google Cloud Shell [https://ssh.cloud.google.com/cloudshell/editor?cloudshell_git_repo=https%3A%2F%2Fgithub.com%2Fgooglemaps%2Fjs-samples&cloudshell_git_branch=sample-marker-accessibility&cloudshell_tutorial=cloud_shell_instructions.md&cloudshell_workspace=.&hl=ko]
마커에 애니메이션 적용
다양한 상황에서 동적인 움직임을 보이도록 마커에 애니메이션을 적용할 수 있습니다. 마커에 애니메이션이 적용되는 방식을 지정하려면 마커의 animation 속성(google.maps.Animation 유형)을 사용하세요. 다음과 같은 Animation 값이 지원됩니다.
DROP은 마커를 처음 지도에 배치할 때 지도 상단에서 최종 위치로 떨어져야 함을 나타냅니다. 마커가 멈추면 애니메이션이 중지되고 animation이 null로 돌아갑니다. 이 유형의 애니메이션은 일반적으로 Marker를 생성하는 동안 지정됩니다.
BOUNCE는 마커가 제자리에서 튀어야 함을 나타냅니다. 튀는 마커는 animation 속성이 명시적으로 null이 될 때까지 계속 튑니다.
기존 마커의 경우 Marker 객체에서 setAnimation()을 호출하여 애니메이션을 시작할 수 있습니다.
예 보기 [https://developers.google.com/maps/documentation/javascript/examples/marker-animations?hl=ko]
샘플 사용해 보기
JSFiddle.net [https://jsfiddle.net/gh/get/library/pure/googlemaps/js-samples/tree/master/dist/samples/marker-animations/jsfiddle]
Google Cloud Shell [https://ssh.cloud.google.com/cloudshell/editor?cloudshell_git_repo=https%3A%2F%2Fgithub.com%2Fgooglemaps%2Fjs-samples&cloudshell_git_branch=sample-marker-animations&cloudshell_tutorial=cloud_shell_instructions.md&cloudshell_workspace=.&hl=ko]
마커가 여러 개인 경우 모든 마커를 동시에 지도에 배치하고 싶지 않을 수도 있습니다. setTimeout()을 활용하면 아래에 표시된 것과 같은 패턴을 사용하여 마커의 애니메이션 사이에 간격을 둘 수 있습니다.
function drop() {
  for (var i =0; i < markerArray.length; i++) {
    setTimeout(function() {
      addMarkerMethod();
    }, i * 200);
  }
}
예 보기 [https://developers.google.com/maps/documentation/javascript/examples/marker-animations-iteration?hl=ko]
마커를 드래그할 수 있도록 설정
사용자가 마커를 지도의 다른 위치로 드래그할 수 있도록 하려면 도형 옵션에서 draggable을 true로 설정하세요.
var myLatlng = new google.maps.LatLng(-25.363882,131.044922);
var mapOptions = {
  zoom: 4,
  center: myLatlng
}
var map = new google.maps.Map(document.getElementById("map"), mapOptions);

// Place a draggable marker on the map
var marker = new google.maps.Marker({
    position: myLatlng,
    map: map,
    draggable:true,
    title:"Drag me!"
});
마커 추가 맞춤설정
완전히 맞춤설정된 마커는 맞춤설정된 팝업 예 [https://developers.google.com/maps/documentation/javascript/examples/overlay-popup?hl=ko]를 참고하세요.
마커 클래스의 추가 확장, 마커 클러스터링 및 관리, 오버레이 맞춤설정에 대해서는 오픈소스 라이브러리 [https://developers.google.com/maps/documentation/javascript/libraries-open-source?hl=ko#extending_markers_and_overlays]를 참고하세요.
의견 보내기