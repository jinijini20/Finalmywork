{"question": "People API를 사용하여 인증된 사용자의 연락처를 읽고 관리하는 방법은 무엇인가요?", "answer": "People API를 사용하여 인증된 사용자의 연락처를 읽고 관리하려면 `people.connections.list`를 호출하여 연결 목록을 읽고, `people.createContact`를 사용하여 새 연락처를 만들며, `people.updateContact`를 통해 기존 연락처를 업데이트하고, `people.deleteContact`를 사용하여 연락처를 삭제할 수 있습니다.", "sources": ["https://developers.google.com/people?hl=ko"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "특정 사람의 정보를 가져오기 위해 어떤 API를 사용해야 하나요?", "answer": "특정 사람의 정보를 가져오기 위해서는 `people.get` API를 호출하고, 해당 사람의 리소스 이름을 전달하여 그 사람의 person resource를 가져올 수 있습니다.", "sources": ["https://developers.google.com/people/api/rest/v1/people/get?hl=ko"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "Google Workspace 사용자가 디렉터리 도메인 프로필과 연락처를 나열하는 방법은 무엇인가요?", "answer": "Google Workspace 사용자는 `people.listDirectoryPeople` API를 사용하여 디렉터리 도메인 프로필과 도메인 연락처를 나열할 수 있으며, `people.searchDirectoryPeople` API를 사용하여 검색할 수도 있습니다.", "sources": ["https://developers.google.com/people/api/rest/v1/people/listDirectoryPeople?hl=ko"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "People API에서 사용자 정보는 어떻게 병합되나요?", "answer": "People API에서 읽는 사용자 정보는 공개 Google 프로필 데이터, Google Workspace 도메인 프로필 데이터, 인증된 사용자의 비공개 프로필 정보 및 인증된 사용자의 연락처를 기반으로 병합됩니다. 각 소스는 특정 조건을 충족해야 합니다.", "sources": ["https://developers.google.com/people?hl=ko"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "People API를 사용하여 연락처를 삭제하는 방법은 무엇인가요?", "answer": "연락처를 삭제하려면 `people.deleteContact` API를 사용하여 삭제할 연락처의 리소스 이름을 전달하면 됩니다.", "sources": ["https://developers.google.com/people/api/rest/v1/people/deleteContact?hl=ko"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "People API를 사용하여 새 연락처를 생성하는 방법은 무엇인가요?", "answer": "새 연락처를 생성하려면 `POST /v1/people:createContact` 엔드포인트를 사용합니다. 이 요청을 통해 새 연락처를 만들고 해당 연락처의 사람 리소스를 반환받을 수 있습니다.", "sources": ["https://developers.google.com/people/api/rest/v1/people/createContact?hl=ko"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "People API에서 연락처 그룹을 나열하는 방법은 무엇인가요?", "answer": "연락처 그룹을 나열하려면 `GET /v1/contactGroups` 엔드포인트를 사용합니다. 이 요청은 인증된 사용자가 소유한 모든 연락처 그룹을 나열합니다.", "sources": ["https://developers.google.com/people/api/rest/v1/contactGroups/list?hl=ko"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "People API를 통해 특정 사람의 정보를 가져오는 방법은 무엇인가요?", "answer": "특정 사람의 정보를 가져오려면 `GET /v1/{resourceName=people/*}` 엔드포인트를 사용합니다. 이 요청에서 리소스 이름을 지정하여 해당 사람에 대한 정보를 제공합니다.", "sources": ["https://developers.google.com/people/api/rest/v1/people/get?hl=ko"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "People API에서 연락처를 일괄 삭제하는 방법은 무엇인가요?", "answer": "연락처를 일괄 삭제하려면 `POST /v1/people:batchDeleteContacts` 엔드포인트를 사용합니다. 이 요청을 통해 여러 연락처를 동시에 삭제할 수 있습니다.", "sources": ["https://developers.google.com/people/api/rest/v1/people/batchDeleteContacts?hl=ko"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "People API를 사용하여 인증된 사용자의 연락처 목록을 가져오는 방법은 무엇인가요?", "answer": "인증된 사용자의 연락처 목록을 가져오려면 `GET /v1/{resourceName=people/*}/connections` 엔드포인트를 사용합니다. 이 요청은 사용자의 연락처 목록을 제공합니다.", "sources": ["https://developers.google.com/people/api/rest/v1/people.connections/list?hl=ko"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "Google의 CardDAV API를 사용하여 새 연락처를 생성하는 방법은 무엇인가요?", "answer": "클라이언트 애플리케이션은 VCard 3.0 형식의 새 연락처가 포함된 POST 요청을 실행하여 새 연락처를 생성할 수 있습니다. 응답에는 새 연락처의 ID가 포함됩니다.", "sources": ["https://developers.google.com/people/carddav"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "CardDAV API에서 연락처를 업데이트하는 방법은 무엇인가요?", "answer": "클라이언트 애플리케이션은 PUT 요청을 통해 업데이트된 연락처로 VCard 3.0 형식의 연락처를 전송하여 이미 주소록에 있는 연락처를 업데이트할 수 있습니다. 이때 If-Match 헤더에는 연락처의 현재 알려진 ETag가 포함되어야 하며, 서버의 현재 ETag와 클라이언트에서 전송한 ETag가 다를 경우 서버는 PUT 요청을 거부합니다.", "sources": ["https://developers.google.com/people/carddav"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "CardDAV API를 사용하여 연락처를 삭제하는 방법은 무엇인가요?", "answer": "클라이언트 애플리케이션은 DELETE 요청을 실행하여 특정 연락처를 삭제할 수 있습니다. 이 요청은 삭제할 연락처의 URI를 포함해야 합니다.", "sources": ["https://developers.google.com/people/carddav"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "CardDAV API에서 연락처 동기화를 수행하는 방법은 무엇인가요?", "answer": "클라이언트 애플리케이션은 주소록 리소스의 getctag PROPFIND 요청을 사용하여 서버에서 연락처가 변경되었는지 확인하고, sync-token PROPFIND 요청을 통해 현재 상태를 나타내는 sync-token을 가져와야 합니다. 이 값을 저장하고 주기적으로 sync-collection 요청을 실행하여 변경 사항을 확인합니다.", "sources": ["https://developers.google.com/people/carddav"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "CardDAV API를 사용하기 위해 필요한 인증 방법은 무엇인가요?", "answer": "Google의 CardDAV 인터페이스는 OAuth 2.0 인증을 필요로 하며, 클라이언트 애플리케이션은 HTTPS를 통해 Google 계정의 OAuth 2.0 인증을 제공해야 합니다. 기본 인증이나 이메일/비밀번호는 지원되지 않습니다.", "sources": ["https://developers.google.com/people/carddav"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "Google Apps Script에서 People API를 사용하여 사용자의 연결된 연락처의 이름을 가져오는 방법은 무엇인가요?", "answer": "Google Apps Script에서 People API를 사용하여 사용자의 연결된 연락처의 이름을 가져오려면, 다음과 같은 코드를 사용할 수 있습니다. 이 코드는 사용자의 10개의 연결된 연락처의 이름을 출력합니다. ```javascript function listConnectionNames() { try { const connections = People.People.Connections.list('people/me', { pageSize: 10, personFields: 'names,emailAddresses' }); connections.connections.forEach((person) => { if (person.names && person.names.length === 0) { console.log('No display name found for connection.'); return; } console.log(person.names[0].displayName); }); } catch (err) { console.log('Failed with error %s', err.message); } } ```", "sources": ["https://developers.google.com/people/quickstart/apps-script"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "Google Apps Script에서 People API를 사용하기 위해 필요한 기본 요건은 무엇인가요?", "answer": "Google Apps Script에서 People API를 사용하기 위해서는 다음과 같은 기본 요건이 필요합니다: 1. API 액세스가 사용 설정된 Google Workspace 도메인 2. 관리자 권한이 있는 해당 도메인의 Google 계정 3. Google Drive 액세스", "sources": ["https://developers.google.com/people/quickstart/apps-script"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "People API를 사용하기 위해 Google Apps Script 프로젝트에서 어떤 설정을 해야 하나요?", "answer": "People API를 사용하기 위해 Google Apps Script 프로젝트에서 다음과 같은 설정을 해야 합니다: 1. Apps Script 프로젝트를 열고, 편집기에서 '서비스 추가'를 클릭합니다. 2. People API를 선택하고 추가를 클릭합니다.", "sources": ["https://developers.google.com/people/quickstart/apps-script"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "Google Apps Script에서 People API를 처음 실행할 때 어떤 권한을 승인해야 하나요?", "answer": "Google Apps Script에서 People API를 처음 실행할 때, 사용자는 액세스 권한을 승인하라는 메시지를 받습니다. 이때 권한 검토를 클릭하고, 계정을 선택한 후 허용을 클릭해야 합니다.", "sources": ["https://developers.google.com/people/quickstart/apps-script"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "People API 사용 중 발생할 수 있는 인증 및 승인 문제를 해결하는 방법은 무엇인가요?", "answer": "People API 사용 중 발생할 수 있는 인증 및 승인 문제를 해결하기 위해서는 Google Apps Script 고급 서비스 문서와 인증 및 승인 문제 해결 문서를 참조하는 것이 좋습니다. 이 문서들은 문제 해결에 필요한 정보를 제공합니다.", "sources": ["https://developers.google.com/people/quickstart/apps-script,", "https://developers.google.com/people/v1/troubleshoot-authentication-authorization?hl=ko"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "People API를 사용하기 위해 Go 환경을 설정하는 방법은 무엇인가요?", "answer": "People API를 사용하기 위해서는 최신 버전의 Go와 Git을 설치하고, Google Cloud 프로젝트를 생성한 후 API 액세스를 사용 설정해야 합니다. 또한, OAuth 동의 화면을 구성하고, 데스크톱 애플리케이션의 사용자 인증 정보를 승인해야 합니다.", "sources": ["https://developers.google.com/people/quickstart/go"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "People API를 호출하는 Go 애플리케이션의 샘플 코드는 어떻게 작성하나요?", "answer": "샘플 코드는 `quickstart.go` 파일에 작성되며, OAuth2.0을 사용하여 인증을 처리하고, `people.NewService`를 통해 People API 클라이언트를 생성합니다. 이후 `srv.People.Connections.List(\"people/me\")`를 호출하여 사용자의 연결 목록을 가져옵니다.", "sources": ["https://developers.google.com/people/quickstart/go"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "People API를 사용하여 사용자 데이터를 가져오는 방법은 무엇인가요?", "answer": "사용자 데이터를 가져오기 위해서는 `srv.People.Connections.List(\"people/me\").PageSize(10).PersonFields(\"names,emailAddresses\").Do()` 메서드를 사용하여 사용자의 연결 목록을 요청합니다. 이때, `PersonFields` 파라미터를 통해 가져올 필드를 지정할 수 있습니다.", "sources": ["https://developers.google.com/people/quickstart/go"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "People API를 처음 실행할 때 발생할 수 있는 인증 문제를 어떻게 해결하나요?", "answer": "인증 문제를 해결하기 위해서는 OAuth 동의 화면을 올바르게 구성하고, 필요한 범위를 추가해야 합니다. 또한, 이전에 저장된 `token.json` 파일을 삭제하고 새로 인증을 시도하여 문제를 해결할 수 있습니다.", "sources": ["https://developers.google.com/people/quickstart/go"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "People API를 사용하기 위한 OAuth2.0 클라이언트 ID를 생성하는 방법은 무엇인가요?", "answer": "Google Cloud 콘솔에서 클라이언트 메뉴로 이동한 후 '클라이언트 만들기'를 클릭하고, 애플리케이션 유형으로 '데스크톱 앱'을 선택하여 클라이언트 ID를 생성합니다. 생성된 클라이언트 ID는 JSON 파일로 다운로드하여 작업 디렉터리에 저장해야 합니다.", "sources": ["https://developers.google.com/people/quickstart/go"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "People API를 사용하기 위해 필요한 기본 요건은 무엇인가요?", "answer": "People API를 사용하기 위해서는 Java 11 이상, Gradle 7.0 이상, Google Cloud 프로젝트, API 액세스가 사용 설정된 Google Workspace 도메인, 그리고 관리자 권한이 있는 해당 도메인의 Google 계정이 필요합니다.", "sources": ["https://developers.google.com/people/quickstart/java?hl=ko#prerequisites"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "People API를 사용하기 위해 OAuth 동의 화면을 어떻게 구성하나요?", "answer": "OAuth 동의 화면을 구성하려면 Google Cloud 콘솔에서 메뉴 > 브랜딩으로 이동한 후, 앱 이름, 사용자 지원 이메일, 시청자층(내부 선택), 연락처 정보 등을 입력하고 Google API 서비스 사용자 데이터 정책에 동의한 후 완료를 클릭합니다.", "sources": ["https://developers.google.com/people/quickstart/java?hl=ko#configure_the_oauth_consent_screen"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "People API를 호출하는 Java 애플리케이션을 만들기 위한 샘플 코드는 어떻게 되나요?", "answer": "샘플 코드는 다음과 같습니다: ```java public class PeopleQuickstart { // ... (생략) public static void main(String... args) throws IOException, GeneralSecurityException { // Build a new authorized API client service. final NetHttpTransport HTTP_TRANSPORT = GoogleNetHttpTransport.newTrustedTransport(); PeopleService service = new PeopleService.Builder(HTTP_TRANSPORT, JSON_FACTORY, getCredentials(HTTP_TRANSPORT)) .setApplicationName(APPLICATION_NAME) .build(); // Request 10 connections. ListConnectionsResponse response = service.people().connections() .list(\"people/me\") .setPageSize(10) .setPersonFields(\"names,emailAddresses\") .execute(); // ... (생략) } } ```", "sources": ["https://developers.google.com/people/quickstart/java?hl=ko#set_up_the_sample"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "People API를 사용하여 연결된 사람들의 이름을 출력하는 방법은 무엇인가요?", "answer": "연결된 사람들의 이름을 출력하려면 `ListConnectionsResponse` 객체에서 `getConnections()` 메서드를 호출하여 연결된 사람들의 목록을 가져온 후, 각 사람의 이름을 `getNames()` 메서드를 통해 출력합니다.", "sources": ["https://developers.google.com/people/quickstart/java?hl=ko#set_up_the_sample"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "People API를 처음 실행할 때 어떤 인증 절차가 필요한가요?", "answer": "샘플을 처음 실행할 때는 액세스 권한을 승인하라는 메시지가 표시되며, Google 계정에 로그인하고 승인할 계정을 선택한 후 수락을 클릭해야 합니다. 승인 정보는 파일 시스템에 저장되어 다음 실행 시에는 메시지가 표시되지 않습니다.", "sources": ["https://developers.google.com/people/quickstart/java?hl=ko#run_the_sample"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "People API를 사용하기 위해 필요한 기본 요건은 무엇인가요?", "answer": "People API를 사용하기 위해서는 Node.js 및 npm이 설치되어 있어야 하며, Google Cloud 프로젝트가 필요하고, API 액세스가 사용 설정된 Google Workspace 도메인과 관리자 권한이 있는 Google 계정이 필요합니다.", "sources": ["https://developers.google.com/people/quickstart/js#prereqs"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "People API를 호출하는 JavaScript 웹 애플리케이션을 설정하는 방법은 무엇인가요?", "answer": "JavaScript 웹 애플리케이션을 설정하려면, Google Cloud 콘솔에서 People API를 사용 설정하고, OAuth 동의 화면을 구성한 후, 웹 애플리케이션의 사용자 인증 정보를 승인해야 합니다. 이후 API 키를 생성하고 샘플 코드를 작성하여 실행합니다.", "sources": ["https://developers.google.com/people/quickstart/js#setting_up_the_sample"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "People API를 호출하기 위한 샘플 코드에서 클라이언트 ID와 API 키는 어떻게 설정하나요?", "answer": "샘플 코드에서 클라이언트 ID는 웹 애플리케이션의 사용자 인증 정보를 승인할 때 만든 클라이언트 ID로 설정하고, API 키는 사전 요구사항으로 만든 API 키로 설정해야 합니다. 이 두 값은 각각 `const CLIENT_ID = '<YOUR_CLIENT_ID>';`와 `const API_KEY = '<YOUR_API_KEY>';`에 입력합니다.", "sources": ["https://developers.google.com/people/quickstart/js#replace_your_client_id_and_api_key"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "샘플 애플리케이션을 실행하기 위해 어떤 명령어를 사용해야 하나요?", "answer": "샘플 애플리케이션을 실행하기 위해서는 먼저 `http-server` 패키지를 설치한 후, 작업 디렉터리에서 `npx http-server -p 8000` 명령어를 사용하여 웹 서버를 시작합니다. 이후 브라우저에서 `http://localhost:8000`으로 이동하여 애플리케이션을 실행할 수 있습니다.", "sources": ["https://developers.google.com/people/quickstart/js#run_the_sample"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "People API 사용 중 인증 및 승인 문제를 해결하기 위한 리소스는 어디에서 찾을 수 있나요?", "answer": "People API 사용 중 인증 및 승인 문제를 해결하기 위한 리소스는 Google의 인증 및 승인 문제 해결 문서에서 찾을 수 있습니다. 이 문서는 다양한 인증 및 승인 관련 문제를 다루고 있습니다.", "sources": ["https://developers.google.com/people/v1/troubleshoot-authentication-authorization?hl=ko"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "People API를 사용하기 위해 Node.js 환경을 설정하는 방법은 무엇인가요?", "answer": "People API를 사용하기 위해서는 Node.js 및 npm이 설치되어 있어야 하며, Google Cloud 프로젝트를 생성하고 API 액세스를 사용 설정해야 합니다. 또한, 관리자 권한이 있는 Google 계정이 필요합니다.", "sources": ["https://developers.google.com/people/quickstart/nodejs"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "People API에 요청을 보내기 위한 Node.js 샘플 코드는 어떻게 작성하나요?", "answer": "샘플 코드는 다음과 같습니다: ```javascript const fs = require('fs').promises; const path = require('path'); const process = require('process'); const {authenticate} = require('@google-cloud/local-auth'); const {google} = require('googleapis'); const SCOPES = ['https://www.googleapis.com/auth/contacts.readonly']; const TOKEN_PATH = path.join(process.cwd(), 'token.json'); const CREDENTIALS_PATH = path.join(process.cwd(), 'credentials.json'); async function authorize() { // 인증 및 권한 부여 로직 } async function listConnectionNames(auth) { const service = google.people({version: 'v1', auth}); const res = await service.people.connections.list({ resourceName: 'people/me', pageSize: 10, personFields: 'names,emailAddresses', }); // 연결된 사람의 이름 출력 } authorize().then(listConnectionNames).catch(console.error); ```", "sources": ["https://developers.google.com/people/quickstart/nodejs"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "People API를 사용하기 위해 OAuth 2.0 클라이언트 ID를 생성하는 방법은 무엇인가요?", "answer": "Google Cloud 콘솔에서 메뉴 > 클라이언트로 이동한 후 '클라이언트 만들기'를 클릭하고 애플리케이션 유형으로 '데스크톱 앱'을 선택합니다. 이름을 입력하고 만들기를 클릭하면 OAuth 2.0 클라이언트 ID가 생성됩니다.", "sources": ["https://developers.google.com/people/quickstart/nodejs"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "People API를 처음 실행할 때 어떤 인증 절차가 필요한가요?", "answer": "샘플을 처음 실행하면 액세스 권한을 승인하라는 메시지가 표시됩니다. Google 계정에 로그인하고 승인할 계정을 선택한 후 수락을 클릭해야 합니다. 이후 승인 정보는 파일 시스템에 저장됩니다.", "sources": ["https://developers.google.com/people/quickstart/nodejs"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "People API 사용 중 인증 및 승인 문제를 해결하는 방법은 무엇인가요?", "answer": "인증 및 승인 문제를 해결하기 위해서는 Google의 인증 및 승인 문제 해결 가이드를 참조해야 합니다. 이 가이드는 일반적인 문제와 해결책을 제공합니다.", "sources": ["https://developers.google.com/people/v1/troubleshoot-authentication-authorization?hl=ko"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "People API를 사용하기 위해 필요한 기본 요건은 무엇인가요?", "answer": "People API를 사용하기 위해서는 Python 3.10.7 이상, pip 패키지 관리 도구, Google Cloud 프로젝트, API 액세스가 사용 설정된 Google Workspace 도메인, 관리자 권한이 있는 Google 계정이 필요합니다.", "sources": ["https://developers.google.com/people/quickstart/python"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "People API를 호출하는 Python 애플리케이션을 설정하는 방법은 무엇인가요?", "answer": "Python 애플리케이션을 설정하려면 Google Cloud 콘솔에서 People API를 사용 설정하고, OAuth 동의 화면을 구성한 후, OAuth 2.0 클라이언트 ID를 생성해야 합니다. 이후 Python용 Google 클라이언트 라이브러리를 설치하고, 샘플 코드를 작성하여 실행하면 됩니다.", "sources": ["https://developers.google.com/people/quickstart/python"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "People API를 호출하는 샘플 코드의 주요 기능은 무엇인가요?", "answer": "샘플 코드는 사용자의 첫 10개의 연결 이름을 출력하는 기능을 가지고 있습니다. 이를 위해 사용자의 인증 정보를 확인하고, People API를 통해 연결 목록을 요청하여 이름을 출력합니다.", "sources": ["https://developers.google.com/people/quickstart/python"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "People API를 사용하기 위해 OAuth 2.0 클라이언트 ID를 생성하는 방법은 무엇인가요?", "answer": "Google Cloud 콘솔에서 클라이언트 메뉴로 이동한 후, '클라이언트 만들기'를 클릭하고 애플리케이션 유형으로 '데스크톱 앱'을 선택합니다. 이름을 입력하고 클라이언트를 생성한 후, JSON 파일을 다운로드하여 작업 디렉터리에 'credentials.json'으로 저장합니다.", "sources": ["https://developers.google.com/people/quickstart/python"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "People API 사용 중 발생할 수 있는 인증 및 승인 문제를 해결하는 방법은 무엇인가요?", "answer": "인증 및 승인 문제를 해결하기 위해서는 Google Cloud 콘솔에서 OAuth 동의 화면을 올바르게 구성하고, 필요한 범위를 추가해야 합니다. 또한, 인증 정보가 올바르게 저장되었는지 확인하고, 필요한 경우 새로 고침을 시도해야 합니다.", "sources": ["https://developers.google.com/people/quickstart/python"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "People API에서 일괄 요청을 사용하는 이유는 무엇인가요?", "answer": "People API는 일괄 처리를 지원하여 클라이언트가 단일 HTTP 요청에 여러 개의 API 호출을 포함시킬 수 있습니다. 이를 통해 HTTP 연결 수를 줄이고, 많은 데이터를 한 번에 업로드하거나 동기화할 수 있습니다.", "sources": ["https://developers.google.com/people/v1/batch"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "일괄 요청의 형식은 어떻게 되나요?", "answer": "일괄 요청은 여러 개의 People API 호출이 포함된 단일 표준 HTTP 요청으로, multipart/mixed 콘텐츠 유형을 사용합니다. 각 부분은 자체 Content-Type 헤더로 시작하며, 중첩된 HTTP 요청이 포함됩니다.", "sources": ["https://developers.google.com/people/v1/batch"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "일괄 요청을 보낼 때의 HTTP 헤더는 어떻게 설정하나요?", "answer": "외부 일괄 요청의 HTTP 헤더는 모든 개별 요청에 적용되며, 특정 HTTP 헤더를 개별 호출에 지정할 경우 해당 호출에만 적용됩니다. 예를 들어, 승인 헤더를 외부 요청에 제공하면 모든 개별 호출에 적용되지만, 개별 호출에서 다른 승인 헤더를 제공하면 그 값이 재정의됩니다.", "sources": ["https://developers.google.com/people/v1/batch"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "일괄 요청의 응답 형식은 어떻게 되나요?", "answer": "서버의 응답은 multipart/mixed 콘텐츠 유형의 단일 HTTP 응답으로, 각 부분은 일괄 요청에 포함된 요청 중 하나에 대한 응답입니다. 각 응답 부분은 상태 코드, 헤더, 본문을 포함하며 요청 순서와 동일한 순서로 표시됩니다.", "sources": ["https://developers.google.com/people/v1/batch"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "일괄 요청의 예시는 어떻게 되나요?", "answer": "일괄 요청의 예시는 다음과 같습니다: ``` POST /batch HTTP/1.1 Authorization: Bearer your_auth_token Content-Type: multipart/mixed; boundary=\"batch_people\" --batch_people Content-Type: application/http Content-ID: 1 POST /v1/people:createContact HTTP/1.1 Content-Type: application/json { \"names\": [{ \"givenName\": \"John\", \"familyName\": \"Doe\" }] } --batch_people Content-Type: application/http Content-ID: 2 GET /v1/people/c123456789012345?personFields=emailAddresses HTTP/1.1 --batch_people-- ```", "sources": ["https://developers.google.com/people/v1/batch"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "사용자의 연락처를 표시하기 위한 API 요청은 어떻게 하나요?", "answer": "사용자의 연락처에 있는 사용자 목록을 가져오려면 다음과 같은 GET 요청을 사용합니다: ``` GET /v1/people/me/connections?personFields=names,emailAddresses ``` 자바 코드 예시는 다음과 같습니다: ```java ListConnectionsResponse response = peopleService.people().connections().list(\"people/me\") .setPersonFields(\"names,emailAddresses\") .execute(); List<Person> people = response.getConnections(); ```", "sources": ["https://developers.google.com/people/v1/contacts"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "새 연락처를 생성하는 방법은 무엇인가요?", "answer": "새 연락처를 만들기 위해서는 POST 요청을 사용하고, 요청 본문에 연락처 정보를 포함해야 합니다. 예를 들어: ``` POST /v1/people:createContact Body: { \"names\": [{ \"givenName\": \"John\", \"familyName\": \"Doe\" }] } ``` 자바 코드 예시는 다음과 같습니다: ```java Person contactToCreate = new Person(); List<Name> names = new ArrayList<>(); names.add(new Name().setGivenName(\"John\").setFamilyName(\"Doe\")); contactToCreate.setNames(names); Person createdContact = peopleService.people().createContact(contactToCreate).execute(); ```", "sources": ["https://developers.google.com/people/v1/contacts"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "기존 연락처를 업데이트하는 방법은 무엇인가요?", "answer": "기존 연락처를 업데이트하려면 PATCH 요청을 사용하고, 요청 본문에 업데이트할 필드와 함께 `etag`를 포함해야 합니다. 예를 들어: ``` PATCH /v1/resource_name:updateContact?updatePersonFields=emailAddresses Body: { \"resourceName\": \"resource_name\", \"etag\": \"etag\", \"emailAddresses\": [{ \"value\": \"john.doe@gmail.com\" }] } ```", "sources": ["https://developers.google.com/people/v1/contacts"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "연락처를 일괄 생성하는 방법은 무엇인가요?", "answer": "여러 연락처를 일괄 생성하기 위해 POST 요청을 사용하고, 요청 본문에 연락처 목록을 포함해야 합니다. 예를 들어: ``` POST /v1/people:batchCreateContacts?readMask=names Body: { \"contacts\": [ { \"contactPerson\": { \"names\": [ { \"givenName\": \"John\", \"familyName\": \"Doe\" } ] } } ] } ``` 자바 코드 예시는 다음과 같습니다: ```java Person person1 = new Person(); person1.setNames(ImmutableList.of(new Name().setGivenName(\"John\").setFamilyName(\"Doe\"))); ContactToCreate contactToCreate1 = new ContactToCreate(); contactToCreate1.setContactPerson(person1); BatchCreateContactsRequest request = new BatchCreateContactsRequest(); request.setContacts(ImmutableList.of(contactToCreate1)).setReadMask(\"names\"); BatchCreateContactsResponse response = peopleService.people().batchCreateContacts(request).execute(); ```", "sources": ["https://developers.google.com/people/v1/contacts"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "연락처를 삭제하는 방법은 무엇인가요?", "answer": "기존 연락처를 삭제하려면 DELETE 요청을 사용해야 합니다. 예를 들어: ``` DELETE /v1/resource_name:deleteContact ```", "sources": ["https://developers.google.com/people/v1/contacts"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "People API를 사용하여 도메인 디렉터리에서 연락처 및 프로필 목록을 가져오는 방법은 무엇인가요?", "answer": "도메인 디렉터리에서 연락처 및 프로필 목록을 가져오려면 다음과 같은 GET 요청을 사용합니다: ``` GET /v1/people:listDirectoryPeople?sources=DIRECTORY_SOURCE_TYPE_DOMAIN_CONTACT&sources=DIRECTORY_SOURCE_TYPE_DOMAIN_PROFILE&readMask=names,emailAddresses ``` 자바 코드 예시는 다음과 같습니다: ```java List<String> sources = new ArrayList<>(); sources.add(\"DIRECTORY_SOURCE_TYPE_DOMAIN_CONTACT\"); sources.add(\"DIRECTORY_SOURCE_TYPE_DOMAIN_PROFILE\"); ListDirectoryPeopleResponse response = peopleService.people().listDirectoryPeople() .setSources(sources) .setReadMask(\"metadata,names,emailAddresses\") .execute(); List<Person> people = response.getPeople(); ```", "sources": ["https://developers.google.com/people/v1/directory"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "People API를 사용하여 변경된 디렉터리 사용자를 나열하는 방법은 무엇인가요?", "answer": "변경된 디렉터리 사용자를 나열하려면 초기 요청을 보내고, 다음 페이지가 있을 경우 반복적으로 요청을 보내야 합니다. 자바 코드 예시는 다음과 같습니다: ```java List<String> sources = new ArrayList<>(); sources.add(\"DIRECTORY_SOURCE_TYPE_DOMAIN_CONTACT\"); sources.add(\"DIRECTORY_SOURCE_TYPE_DOMAIN_PROFILE\"); ListDirectoryPeopleResponse fullSyncResponse = peopleService.people().listDirectoryPeople() .setSources(sources) .setReadMask(\"metadata,names,emailAddresses\") .setRequestSyncToken(true) .execute(); while (fullSyncResponse.getNextPageToken() != null) { fullSyncResponse = peopleService.people().listDirectoryPeople() .setSources(sources) .setReadMask(\"metadata,names,emailAddresses\") .setRequestSyncToken(true) .setPageToken(fullSyncResponse.getNextPageToken()) .execute(); } ```", "sources": ["https://developers.google.com/people/v1/directory"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "People API에서 증분 동기화를 수행하는 방법은 무엇인가요?", "answer": "증분 동기화를 수행하려면 마지막 전체 동기화 응답에서 반환된 동기화 토큰을 사용하여 요청을 보내야 합니다. 자바 코드 예시는 다음과 같습니다: ```java try { ListDirectoryPeopleResponse incrementalSyncResponse = peopleService.people().listDirectoryPeople() .setSources(sources) .setReadMask(\"metadata,names,emailAddresses\") .setSyncToken(fullSyncResponse.getNextSyncToken()) .execute(); for (Person person : incrementalSyncResponse.getDirectoryPeople()) { handlePerson(person); } } catch (GoogleJsonResponseException e) { if (e.getStatusCode() == 410) { // Sync token expired. Make full sync request. } } ```", "sources": ["https://developers.google.com/people/v1/directory"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "People API를 사용하여 특정 쿼리와 일치하는 디렉터리 사용자를 검색하는 방법은 무엇인가요?", "answer": "특정 쿼리와 일치하는 디렉터리 사용자를 검색하려면 POST 요청을 사용합니다. 요청 예시는 다음과 같습니다: ``` POST /v1/people:searchDirectoryPeople?query=John&sources=DIRECTORY_SOURCE_TYPE_DOMAIN_CONTACT&sources=DIRECTORY_SOURCE_TYPE_DOMAIN_PROFILE&readMask=names,emailAddresses ``` 자바 코드 예시는 다음과 같습니다: ```java List<String> sources = new ArrayList<>(); sources.add(\"DIRECTORY_SOURCE_TYPE_DOMAIN_CONTACT\"); sources.add(\"DIRECTORY_SOURCE_TYPE_DOMAIN_PROFILE\"); SearchDirectoryPeopleResponse response = peopleService.people().searchDirectoryPeople() .setQuery(\"John\") .setSources(sources) .setReadMask(\"metadata,names,emailAddresses\") .execute(); List<Person> people = response.getPeople(); ```", "sources": ["https://developers.google.com/people/v1/directory"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "People API에서 동기화 요청의 전파 지연에 대해 알아야 할 점은 무엇인가요?", "answer": "동기화 요청의 경우 쓰기에 몇 분의 전파 지연이 발생할 수 있습니다. 따라서 증분 동기화는 쓰기 후 읽기 사용 사례에 적합하지 않습니다.", "sources": ["https://developers.google.com/people/v1/directory"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "People API를 사용하기 위해 필요한 첫 번째 단계는 무엇인가요?", "answer": "People API를 사용하기 위해서는 먼저 Google 계정을 만들어야 합니다. 이후 Google API 콘솔에서 프로젝트를 생성하고 API에 대한 액세스를 활성화해야 합니다.", "sources": ["https://developers.google.com/people/v1/getting-started"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "People API를 사용하기 위해 클라이언트 프로젝트를 어떻게 만들 수 있나요?", "answer": "People API에 요청을 보내기 위해서는 Google API 콘솔을 사용하여 프로젝트를 만들고, API를 사용 설정하며, 사용자 인증 정보를 생성해야 합니다. 이 과정은 설정 도구를 통해 안내받을 수 있습니다.", "sources": ["https://developers.google.com/people/v1/getting-started"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "People API를 호출하기 위해 어떤 클라이언트 라이브러리를 사용하는 것이 좋나요?", "answer": "지원되는 언어 중 하나를 사용하는 경우, People API에 요청을 수행하기 위해 클라이언트 라이브러리를 사용하는 것이 좋습니다. 다양한 언어의 클라이언트 라이브러리는 문서에서 확인할 수 있습니다.", "sources": ["https://developers.google.com/people/v1/getting-started"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "People API를 통해 연락처 목록을 가져오는 방법은 무엇인가요?", "answer": "다양한 언어로 연락처 목록을 가져오는 방법은 빠른 시작 샘플 코드를 통해 확인할 수 있습니다. 이 샘플 코드는 API를 호출하는 방법을 보여줍니다.", "sources": ["https://developers.google.com/people/v1/getting-started"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "People API를 사용하기 전에 어떤 인증 절차를 설정해야 하나요?", "answer": "People API를 사용하기 위해서는 먼저 승인 절차를 설정해야 합니다. 이 과정은 API를 호출하기 전에 필수적으로 수행해야 합니다.", "sources": ["https://developers.google.com/people/v1/getting-started"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "People API를 Java에서 사용하기 위해 클라이언트 라이브러리를 어떻게 설치하나요?", "answer": "Java에서 People API를 사용하기 위해서는 Maven 또는 Gradle을 사용하여 클라이언트 라이브러리를 설치할 수 있습니다. Maven을 사용하는 경우, `pom.xml` 파일에 필요한 의존성을 추가해야 하며, Gradle을 사용하는 경우 `build.gradle` 파일에 의존성을 추가해야 합니다.", "sources": ["https://developers.google.com/people/v1/libraries?hl=ko#%EC%9E%90%EB%B0%94"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "Python에서 People API 클라이언트 라이브러리를 어떻게 설치하나요?", "answer": "Python에서 People API 클라이언트 라이브러리를 설치하려면 `pip` 또는 `setuptools`를 사용하여 설치할 수 있습니다. `pip install --upgrade google-api-python-client` 명령어를 사용하여 설치할 수 있습니다.", "sources": ["https://developers.google.com/people/v1/libraries?hl=ko#python"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "Node.js에서 People API 클라이언트 라이브러리를 어떻게 가져오나요?", "answer": "Node.js에서 People API 클라이언트 라이브러리를 가져오려면 최신 라이브러리를 [GitHub](https://github.com/google/google-api-nodejs-client/)에서 다운로드하면 됩니다. 또한, 클라이언트 라이브러리의 개발자 가이드를 참조하여 사용법을 익힐 수 있습니다.", "sources": ["https://developers.google.com/people/v1/libraries?hl=ko#tabpanel-node.js"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "People API를 사용하기 위한 JavaScript 클라이언트 라이브러리의 개발자 가이드는 어디에서 찾을 수 있나요?", "answer": "JavaScript 클라이언트 라이브러리의 개발자 가이드는 [여기](https://developers.google.com/api-client-library/javascript/start/start-js?hl=ko)에서 찾을 수 있습니다.", "sources": ["https://developers.google.com/people/v1/libraries?hl=ko#%EC%9E%90%EB%B0%94%EC%8A%A4%ED%81%AC%EB%A6%BD%ED%8A%B8"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "People API에 액세스하는 다른 방법은 무엇이 있나요?", "answer": "People API에 액세스하는 다른 방법으로는 API 탐색기와 Apps Script가 있습니다. API 탐색기를 사용하면 브라우저에서 직접 Google API를 사용해 볼 수 있으며, Apps Script는 Google 제품 및 서드 파티 서비스 전반에서 작업을 자동화하는 JavaScript 클라우드 스크립팅 언어입니다.", "sources": ["https://developers.google.com/people/v1/libraries?hl=ko#other"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "사용자의 '기타 연락처'를 가져오는 방법은 무엇인가요?", "answer": "사용자의 '기타 연락처'에 있는 사용자 목록을 가져오려면 다음과 같은 GET 요청을 사용합니다: ``` GET /v1/otherContacts?readMask=names,emailAddresses HTTP/1.1 Host: people.googleapis.com ``` 또는 자바 코드로는 다음과 같이 사용할 수 있습니다: ```java ListOtherContactsResponse response = peopleService.otherContacts().list() .setReadMask(\"metadata,names,emailAddresses\") .execute(); List<Person> otherContacts = response.getOtherContacts(); ```", "sources": ["https://developers.google.com/people/v1/other-contacts"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "'기타 연락처'의 변경된 내용을 나열하는 방법은 무엇인가요?", "answer": "변경된 사용자의 '기타 연락처'를 나열하려면 초기 요청을 통해 전체 동기화를 수행한 후, 다음과 같은 코드를 사용하여 증분 동기화를 할 수 있습니다: ```java ListOtherContactsResponse fullSyncResponse = peopleService.otherContacts().list() .setReadMask(\"metadata,names,emailAddresses\") .setRequestSyncToken(true) .execute(); while (fullSyncResponse.getNextPageToken() != null) { fullSyncResponse = peopleService.otherContacts().list() .setReadMask(\"metadata,names,emailAddresses\") .setRequestSyncToken(true) .setPageToken(fullSyncResponse.getNextPageToken()) .execute(); } ```", "sources": ["https://developers.google.com/people/v1/other-contacts"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "'기타 연락처'를 'myContacts' 그룹에 복사하는 방법은 무엇인가요?", "answer": "'기타 연락처'를 'myContacts' 그룹에 복사하려면 다음과 같은 POST 요청을 사용합니다: ``` POST /v1/resource_name:copyOtherContactToMyContactsGroup?copyMask=names,emailAddresses,phoneNumbers HTTP/1.1 Host: people.googleapis.com ```", "sources": ["https://developers.google.com/people/v1/other-contacts"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "사용자의 '기타 연락처'를 검색하는 방법은 무엇인가요?", "answer": "사용자의 모든 '기타 연락처'를 검색하려면 다음과 같은 GET 요청을 사용합니다: ``` GET /v1/otherContacts:search?query=&readMask=names,emailAddresses HTTP/1.1 Host: people.googleapis.com ``` 또한, 검색 요청을 보내기 전에 빈 쿼리를 포함한 준비 검색 요청을 전송하여 캐시에 최신 데이터가 있는지 확인해야 합니다.", "sources": ["https://developers.google.com/people/v1/other-contacts"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "'기타 연락처' 검색 시 주의해야 할 점은 무엇인가요?", "answer": "검색은 요청 후에 업데이트되는 지연 캐시를 사용하므로, 클라이언트는 먼저 빈 쿼리가 포함된 준비 검색 요청을 전송하여 캐시에 최신 데이터가 있는지 확인해야 합니다. 또한, 검색은 쿼리의 접두사를 사용자의 필드와 일치시킵니다.", "sources": ["https://developers.google.com/people/v1/other-contacts"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "인증된 사용자의 프로필을 가져오는 방법은 무엇인가요?", "answer": "인증된 사용자의 프로필을 가져오려면 다음과 같은 GET 요청을 사용합니다: `GET /v1/people/me?personFields=names,emailAddresses`. 이 요청은 사용자의 이름과 이메일 주소를 포함한 프로필 정보를 반환합니다.", "sources": ["https://developers.google.com/people/v1/profiles?hl=ko#get_the_person_for_the_authenticated_user"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "Java에서 인증된 사용자의 프로필을 가져오는 코드 예시는 무엇인가요?", "answer": "Java에서 인증된 사용자의 프로필을 가져오는 코드는 다음과 같습니다: ```java Person profile = peopleService.people().get(\"people/me\") .setPersonFields(\"names,emailAddresses\") .execute(); ```", "sources": ["https://developers.google.com/people/v1/profiles?hl=ko#%EC%9E%90%EB%B0%94"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "Python에서 Google 계정 ID의 사용자 정보를 가져오는 방법은 무엇인가요?", "answer": "Python에서 Google 계정 ID의 사용자 정보를 가져오려면 다음과 같은 코드를 사용합니다: ```python profile = people_service.people().get('people/account_id', personFields='names,emailAddresses') ```", "sources": ["https://developers.google.com/people/v1/profiles?hl=ko#python"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "PHP에서 인증된 사용자의 프로필을 가져오는 방법은 무엇인가요?", "answer": "PHP에서 인증된 사용자의 프로필을 가져오는 코드는 다음과 같습니다: ```php $profile = $people_service->people->get( 'people/me', array('personFields' => 'names,emailAddresses')); ```", "sources": ["https://developers.google.com/people/v1/profiles?hl=ko#php"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "People API를 사용하기 위해 필요한 준비 단계는 무엇인가요?", "answer": "People API를 사용하기 위해서는 [People API 사용 준비하기](https://developers.google.com/people/v1/getting-started?hl=ko) 문서의 단계를 완료해야 합니다. 이 단계에서는 API 인증 및 설정을 포함한 초기 준비 작업이 필요합니다.", "sources": ["https://developers.google.com/people/v1/getting-started?hl=ko"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "\"이 앱은 인증되지 않았습니다\" 경고가 표시될 때 어떻게 해결하나요?", "answer": "이 경고는 앱이 민감한 사용자 데이터에 대한 액세스 권한을 요청하고 있을 때 발생합니다. 이 문제를 해결하려면 앱이 인증 절차를 거쳐야 합니다. 개발 단계에서는 고급 > {프로젝트 이름}(안전하지 않음)으로 이동하여 이 경고를 무시할 수 있습니다.", "sources": ["https://developers.google.com/people/v1/troubleshoot-authentication-authorization?hl=ko#this_app_isnt_verified"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "credentials.json 파일을 찾을 수 없다는 오류를 어떻게 해결하나요?", "answer": "이 오류는 데스크톱 애플리케이션 사용자 인증 정보를 승인하지 않은 경우 발생합니다. 사용자 인증 정보를 만들고 다운로드한 JSON 파일이 credentials.json으로 저장되었는지 확인한 후, 해당 파일을 작업 디렉터리로 이동해야 합니다.", "sources": ["https://developers.google.com/people/v1/troubleshoot-authentication-authorization?hl=ko#file_not_found_error_for_credentialsjson"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "\"토큰이 만료되었습니다\" 오류는 어떻게 해결하나요?", "answer": "이 오류는 Google 승인 서버의 액세스 토큰이 만료되었거나 취소된 경우 발생합니다. 해결 방법에 대한 자세한 내용은 갱신 토큰 만료에 대한 문서를 참고해야 합니다.", "sources": ["https://developers.google.com/people/v1/troubleshoot-authentication-authorization?hl=ko#%60token-expired"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "\"Error: origin_mismatch\" 오류는 무엇이며 어떻게 해결하나요?", "answer": "이 오류는 웹페이지를 제공하는 호스트와 포트가 Google Cloud 콘솔 프로젝트의 허용된 JavaScript 출처와 일치하지 않을 때 발생합니다. 승인된 JavaScript 원본을 설정하고 브라우저의 URL이 원본 URL과 일치하는지 확인해야 합니다.", "sources": ["https://developers.google.com/people/v1/troubleshoot-authentication-authorization?hl=ko#error_origin_mismatch"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "\"idpiframe_initialization_failed: Failed to read the 'localStorage' property from 'Window'\" 오류는 어떻게 해결하나요?", "answer": "이 오류는 브라우저에서 서드 파티 쿠키 및 데이터 스토리지가 사용 설정되지 않은 경우 발생합니다. Google 로그인 라이브러리에 필요하므로, 사용자에게 서드 파티 쿠키 및 데이터 저장소를 사용 설정하거나 accounts.google.com에 대한 예외를 추가하도록 안내해야 합니다.", "sources": ["https://developers.google.com/people/v1/troubleshoot-authentication-authorization?hl=ko#idpiframe_initialization_failed_failed_to_read_the_localstorage_property_from_window"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "People API를 사용하여 인증된 사용자의 연락처를 읽고 관리하는 방법은 무엇인가요?", "answer": "People API를 사용하여 인증된 사용자의 연락처를 읽고 관리하려면 `people.connections.list` 메서드를 호출하여 연결 목록을 읽고, `people.createContact`를 사용하여 새 연락처를 만들며, `people.updateContact`로 기존 연락처를 업데이트하고, `people.deleteContact`로 연락처를 삭제할 수 있습니다.", "sources": ["https://developers.google.com/people?hl=ko"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "특정 사람의 정보를 가져오기 위해 어떤 API 메서드를 사용해야 하나요?", "answer": "특정 사람의 정보를 가져오기 위해 `people.get` 메서드를 호출하고, 해당 사람의 리소스 이름을 전달하여 그 사람의 person resource를 가져올 수 있습니다.", "sources": ["https://developers.google.com/people?hl=ko"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "Google Workspace 사용자가 디렉터리 도메인 프로필과 도메인 연락처를 나열하는 방법은 무엇인가요?", "answer": "Google Workspace 사용자는 `people.listDirectoryPeople` 메서드를 사용하여 디렉터리 도메인 프로필과 도메인 연락처를 나열할 수 있으며, `people.searchDirectoryPeople` 메서드를 사용하여 검색할 수도 있습니다.", "sources": ["https://developers.google.com/people?hl=ko"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "People API에서 사용자 정보는 어떻게 병합되나요?", "answer": "People API에서 읽는 사용자 정보는 공개 Google 프로필 데이터, Google Workspace 도메인 프로필 데이터, 인증된 사용자의 비공개 프로필 정보 및 인증된 사용자의 연락처를 기반으로 병합됩니다. 이 데이터는 인증된 이메일 주소, 전화번호 또는 프로필 URL을 통해 연결된 경우 다른 소스의 데이터와 병합됩니다.", "sources": ["https://developers.google.com/people?hl=ko"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "People API를 사용하여 연락처를 삭제하는 방법은 무엇인가요?", "answer": "연락처를 삭제하려면 `people.deleteContact` 메서드를 사용하여 삭제할 연락처의 리소스 이름을 전달하면 됩니다.", "sources": ["https://developers.google.com/people?hl=ko"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "People API를 사용하여 새로운 연락처를 생성하는 방법은 무엇인가요?", "answer": "새로운 연락처를 생성하려면 `POST /v1/people:createContact` 엔드포인트를 사용합니다. 이 요청은 새 연락처를 만들고 해당 연락처의 사람 리소스를 반환합니다.", "sources": ["출처를 찾을 수 없음"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "People API에서 연락처 그룹을 나열하는 방법은 무엇인가요?", "answer": "연락처 그룹을 나열하려면 `GET /v1/contactGroups` 엔드포인트를 사용합니다. 이 요청은 인증된 사용자가 소유한 모든 연락처 그룹을 나열합니다.", "sources": ["출처를 찾을 수 없음"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "People API를 통해 특정 사람의 정보를 가져오는 방법은 무엇인가요?", "answer": "특정 사람의 정보를 가져오려면 `GET /v1/{resourceName=people/*}` 엔드포인트를 사용합니다. 이 요청은 리소스 이름을 지정하여 사람에 대한 정보를 제공합니다.", "sources": ["출처를 찾을 수 없음"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "People API에서 연락처를 일괄 삭제하는 방법은 무엇인가요?", "answer": "연락처를 일괄 삭제하려면 `POST /v1/people:batchDeleteContacts` 엔드포인트를 사용합니다. 이 요청은 여러 연락처를 한 번에 삭제합니다.", "sources": ["출처를 찾을 수 없음"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "People API를 사용하여 인증된 사용자의 연락처 목록을 가져오는 방법은 무엇인가요?", "answer": "인증된 사용자의 연락처 목록을 가져오려면 `GET /v1/{resourceName=people/*}/connections` 엔드포인트를 사용합니다. 이 요청은 사용자의 연락처 목록을 제공합니다.", "sources": ["출처를 찾을 수 없음"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "`People API`의 `contactGroups.members.modify` 메서드를 사용하여 연락처 그룹의 구성원을 수정하는 방법은 무엇인가요?", "answer": "`contactGroups.members.modify` 메서드는 POST 요청을 사용하여 연락처 그룹의 구성원을 수정합니다. 요청 URL은 `https://people.googleapis.com/v1/{resourceName=contactGroups/*}/members:modify` 형식입니다. 요청 본문에는 `resourceNamesToAdd`와 `resourceNamesToRemove` 필드를 포함하여 추가하거나 삭제할 연락처의 리소스 이름을 지정해야 합니다.", "sources": ["https://developers.google.com/people/api/rest/v1/contactGroups.members/modify?hl=ko#http-request"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "`contactGroups.members.modify` 메서드의 요청 본문에서 사용해야 하는 JSON 구조는 어떻게 되나요?", "answer": "요청 본문은 다음과 같은 JSON 구조를 가져야 합니다: ```json { \"resourceNamesToAdd\": [ string ], \"resourceNamesToRemove\": [ string ] } ``` 여기서 `resourceNamesToAdd`는 추가할 연락처의 리소스 이름을, `resourceNamesToRemove`는 삭제할 연락처의 리소스 이름을 포함합니다. 두 배열의 총 개수는 1,000개 이하여야 합니다.", "sources": ["https://developers.google.com/people/api/rest/v1/contactGroups.members/modify?hl=ko#request-body"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "`contactGroups.members.modify` 메서드를 호출할 때 필요한 OAuth 승인 범위는 무엇인가요?", "answer": "이 메서드를 호출하기 위해서는 `https://www.googleapis.com/auth/contacts` OAuth 범위가 필요합니다. 추가적인 승인 가이드는 관련 문서를 참조해야 합니다.", "sources": ["https://developers.google.com/people/api/rest/v1/contactGroups.members/modify?hl=ko#authorization-scopes"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "`contactGroups.members.modify` 메서드의 응답 본문에서 어떤 정보를 받을 수 있나요?", "answer": "성공적인 요청에 대한 응답 본문은 다음과 같은 구조를 가집니다: ```json { \"notFoundResourceNames\": [ string ], \"canNotRemoveLastContactGroupResourceNames\": [ string ] } ``` 여기서 `notFoundResourceNames`는 찾을 수 없는 연락처 리소스 이름을, `canNotRemoveLastContactGroupResourceNames`는 마지막 연락처 그룹에서 삭제할 수 없는 연락처 리소스 이름을 포함합니다.", "sources": ["https://developers.google.com/people/api/rest/v1/contactGroups.members/modify?hl=ko#response-body"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "`contactGroups.members.modify` 메서드를 사용할 때 주의해야 할 점은 무엇인가요?", "answer": "이 메서드는 시스템 연락처 그룹인 `contactGroups/myContacts` 및 `contactGroups/starred`에 대해서만 구성원을 추가할 수 있으며, 다른 시스템 주소록 그룹은 지원되지 않으므로 연락처만 삭제할 수 있습니다.", "sources": ["https://developers.google.com/people/api/rest/v1/contactGroups.members/modify?hl=ko"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "People API에서 연락처 그룹을 생성하는 방법은 무엇인가요?", "answer": "연락처 그룹을 생성하려면 `contactGroups.create` 메서드를 사용합니다. 이 메서드는 인증된 사용자가 소유한 새 연락처 그룹을 만듭니다. 요청 본문에는 그룹의 이름을 포함해야 하며, 이름은 사용자 연락처 그룹별로 고유해야 합니다.", "sources": ["https://developers.google.com/people/api/rest/v1/contactGroups/create?hl=ko"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "연락처 그룹의 정보를 가져오는 방법은 무엇인가요?", "answer": "연락처 그룹의 정보를 가져오려면 `contactGroups.get` 메서드를 사용합니다. 이 메서드는 연락처 그룹 리소스 이름을 지정하여 인증된 사용자가 소유한 특정 연락처 그룹을 가져옵니다.", "sources": ["https://developers.google.com/people/api/rest/v1/contactGroups/get?hl=ko"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "연락처 그룹을 삭제하는 방법은 무엇인가요?", "answer": "연락처 그룹을 삭제하려면 `contactGroups.delete` 메서드를 사용합니다. 이 메서드는 연락처 그룹 리소스 이름을 지정하여 인증된 사용자가 소유한 기존 연락처 그룹을 삭제합니다.", "sources": ["https://developers.google.com/people/api/rest/v1/contactGroups/delete?hl=ko"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "여러 연락처 그룹을 한 번에 가져오는 방법은 무엇인가요?", "answer": "여러 연락처 그룹을 한 번에 가져오려면 `contactGroups.batchGet` 메서드를 사용합니다. 이 메서드는 연락처 그룹 리소스 이름 목록을 지정하여 인증된 사용자가 소유한 연락처 그룹 목록을 가져옵니다.", "sources": ["https://developers.google.com/people/api/rest/v1/contactGroups/batchGet?hl=ko"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "연락처 그룹의 이름을 업데이트하는 방법은 무엇인가요?", "answer": "연락처 그룹의 이름을 업데이트하려면 `contactGroups.update` 메서드를 사용합니다. 이 메서드는 인증된 사용자가 소유한 기존 연락처 그룹의 이름을 업데이트합니다. 요청 본문에 새로운 이름을 포함해야 합니다.", "sources": ["https://developers.google.com/people/api/rest/v1/contactGroups/update?hl=ko"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "`contactGroups.batchGet` 메서드를 사용하여 연락처 그룹을 가져오는 방법은 무엇인가요?", "answer": "`contactGroups.batchGet` 메서드는 인증된 사용자가 소유한 연락처 그룹 목록을 가져오는 데 사용됩니다. HTTP 요청은 `GET https://people.googleapis.com/v1/contactGroups:batchGet` 형식으로 이루어지며, 필수 쿼리 매개변수로 `resourceNames[]`를 포함해야 합니다. 이 매개변수는 가져올 연락처 그룹의 리소스 이름을 지정합니다.", "sources": ["https://developers.google.com/people/api/rest/v1/contactGroups/batchGet?hl=ko#http-request"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "`contactGroups.batchGet` 메서드의 쿼리 매개변수에는 어떤 것들이 있나요?", "answer": "`contactGroups.batchGet` 메서드의 쿼리 매개변수에는 `resourceNames[]`, `maxMembers`, `groupFields`가 있습니다. `resourceNames[]`는 필수로, 가져올 연락처 그룹의 리소스 이름을 최대 200개까지 지정할 수 있습니다. `maxMembers`는 선택사항으로, 각 그룹에서 반환할 최대 구성원 수를 설정합니다. `groupFields`는 반환되는 그룹의 필드를 제한하는 필드 마스크로, 설정하지 않으면 기본값은 `metadata`, `groupType`, `memberCount`, `name`입니다.", "sources": ["https://developers.google.com/people/api/rest/v1/contactGroups/batchGet?hl=ko#query-parameters"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "`contactGroups.batchGet` 메서드의 요청 본문은 어떻게 구성되나요?", "answer": "`contactGroups.batchGet` 메서드의 요청 본문은 비어 있어야 합니다. 즉, 요청을 보낼 때 본문에 추가적인 데이터는 포함하지 않아야 합니다.", "sources": ["https://developers.google.com/people/api/rest/v1/contactGroups/batchGet?hl=ko#request-body"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "`contactGroups.batchGet` 메서드의 응답 본문은 어떤 구조로 되어 있나요?", "answer": "`contactGroups.batchGet` 메서드의 응답 본문은 JSON 형식으로, `responses` 배열을 포함합니다. 이 배열은 요청된 각 연락처 그룹 리소스에 대한 응답 목록을 포함하며, 각 응답은 `ContactGroupResponse` 객체로 구성됩니다.", "sources": ["https://developers.google.com/people/api/rest/v1/contactGroups/batchGet?hl=ko#response-body"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "`contactGroups.batchGet` 메서드를 사용하기 위해 필요한 OAuth 범위는 무엇인가요?", "answer": "`contactGroups.batchGet` 메서드를 사용하기 위해서는 다음 OAuth 범위 중 하나가 필요합니다: `https://www.googleapis.com/auth/contacts` 또는 `https://www.googleapis.com/auth/contacts.readonly`. 이 범위는 사용자의 연락처 데이터에 접근하기 위한 권한을 제공합니다.", "sources": ["https://developers.google.com/people/api/rest/v1/contactGroups/batchGet?hl=ko#authorization-scopes"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "People API를 사용하여 새로운 연락처 그룹을 생성하는 방법은 무엇인가요?", "answer": "새로운 연락처 그룹을 생성하려면 `POST https://people.googleapis.com/v1/contactGroups` 요청을 사용해야 합니다. 요청 본문에는 `contactGroup` 객체가 포함되어야 하며, 이 객체는 생성할 연락처 그룹의 정보를 담고 있어야 합니다.", "sources": ["https://developers.google.com/people/api/rest/v1/contactGroups/create?hl=ko"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "연락처 그룹을 생성할 때 요청 본문에 포함해야 하는 필드는 무엇인가요?", "answer": "요청 본문에는 `contactGroup` 필드가 필수로 포함되어야 하며, 선택적으로 `readGroupFields` 필드를 사용할 수 있습니다. `readGroupFields`는 반환되는 그룹의 필드를 제한하는 필드 마스크입니다.", "sources": ["https://developers.google.com/people/api/rest/v1/contactGroups/create?hl=ko"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "연락처 그룹 이름이 중복될 경우 어떤 오류가 발생하나요?", "answer": "연락처 그룹 이름이 중복될 경우 HTTP 409 오류가 반환됩니다. 이는 생성하려는 그룹의 이름이 이미 존재할 때 발생합니다.", "sources": ["https://developers.google.com/people/api/rest/v1/contactGroups/create?hl=ko"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "동일한 사용자에 대해 변형 요청을 전송할 때 주의해야 할 점은 무엇인가요?", "answer": "동일한 사용자에 대한 변형 요청을 전송할 때는 지연 시간 및 실패 증가를 방지하기 위해 요청을 순차적으로 전송해야 합니다.", "sources": ["https://developers.google.com/people/api/rest/v1/contactGroups/create?hl=ko"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "연락처 그룹을 생성하기 위해 필요한 OAuth 범위는 무엇인가요?", "answer": "연락처 그룹을 생성하기 위해서는 `https://www.googleapis.com/auth/contacts` OAuth 범위가 필요합니다.", "sources": ["https://developers.google.com/people/api/rest/v1/contactGroups/create?hl=ko"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "People API에서 연락처 그룹을 삭제하는 방법은 무엇인가요?", "answer": "연락처 그룹을 삭제하려면 `DELETE` HTTP 요청을 사용하여 `https://people.googleapis.com/v1/{resourceName=contactGroups/*}` 엔드포인트에 요청을 보내야 합니다. 여기서 `resourceName`은 삭제할 연락처 그룹의 리소스 이름입니다.", "sources": ["https://developers.google.com/people/api/rest/v1/contactGroups/delete?hl=ko"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "연락처 그룹을 삭제할 때 선택적으로 연락처도 삭제할 수 있나요?", "answer": "네, 연락처 그룹을 삭제할 때 `deleteContacts` 쿼리 매개변수를 사용하여 지정된 그룹에서 연락처도 삭제할 수 있습니다. 이 매개변수를 `true`로 설정하면 됩니다.", "sources": ["https://developers.google.com/people/api/rest/v1/contactGroups/delete?hl=ko"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "연락처 그룹 삭제 요청의 본문은 어떻게 구성되나요?", "answer": "연락처 그룹 삭제 요청의 본문은 비어 있어야 합니다. 즉, 요청 본문에 아무런 데이터도 포함하지 않아야 합니다.", "sources": ["https://developers.google.com/people/api/rest/v1/contactGroups/delete?hl=ko"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "연락처 그룹 삭제 요청을 보낼 때 필요한 승인 범위는 무엇인가요?", "answer": "연락처 그룹을 삭제하기 위해서는 `https://www.googleapis.com/auth/contacts` OAuth 범위가 필요합니다.", "sources": ["https://developers.google.com/people/api/rest/v1/contactGroups/delete?hl=ko"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "동일한 사용자에 대한 변형 요청을 보낼 때 주의해야 할 점은 무엇인가요?", "answer": "동일한 사용자에 대한 변형 요청을 순차적으로 전송해야 지연 시간 증가 및 실패를 방지할 수 있습니다.", "sources": ["https://developers.google.com/people/api/rest/v1/contactGroups/delete?hl=ko"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "`contactGroups.get` 메서드를 사용하여 특정 연락처 그룹을 가져오는 방법은 무엇인가요?", "answer": "`contactGroups.get` 메서드를 사용하려면 HTTP GET 요청을 다음과 같이 보냅니다: `GET https://people.googleapis.com/v1/{resourceName=contactGroups/*}`. 여기서 `resourceName`은 가져올 연락처 그룹의 리소스 이름입니다.", "sources": ["https://developers.google.com/people/api/rest/v1/contactGroups/get?hl=ko"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "`contactGroups.get` 메서드에서 사용할 수 있는 쿼리 매개변수는 무엇인가요?", "answer": "`contactGroups.get` 메서드에서 사용할 수 있는 쿼리 매개변수는 `maxMembers`와 `groupFields`입니다. `maxMembers`는 반환할 최대 구성원 수를 지정하며, `groupFields`는 그룹에서 반환되는 필드를 제한하는 필드 마스크입니다.", "sources": ["https://developers.google.com/people/api/rest/v1/contactGroups/get?hl=ko"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "`contactGroups.get` 메서드의 요청 본문은 어떻게 구성되나요?", "answer": "`contactGroups.get` 메서드의 요청 본문은 비어 있어야 합니다. 즉, 요청 본문을 포함할 필요가 없습니다.", "sources": ["https://developers.google.com/people/api/rest/v1/contactGroups/get?hl=ko"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "`contactGroups.get` 메서드를 호출하기 위해 필요한 OAuth 범위는 무엇인가요?", "answer": "`contactGroups.get` 메서드를 호출하기 위해서는 다음 OAuth 범위 중 하나가 필요합니다: `https://www.googleapis.com/auth/contacts` 또는 `https://www.googleapis.com/auth/contacts.readonly`.", "sources": ["https://developers.google.com/people/api/rest/v1/contactGroups/get?hl=ko"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "`contactGroups.get` 메서드의 성공적인 응답 본문에는 어떤 정보가 포함되나요?", "answer": "`contactGroups.get` 메서드의 성공적인 응답 본문에는 `ContactGroup`의 인스턴스가 포함됩니다.", "sources": ["https://developers.google.com/people/api/rest/v1/contactGroups/get?hl=ko"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "`contactGroups.list` 메서드를 사용하여 연락처 그룹을 나열하는 방법은 무엇인가요?", "answer": "`contactGroups.list` 메서드는 HTTP GET 요청을 사용하여 연락처 그룹을 나열합니다. 요청 URL은 `https://people.googleapis.com/v1/contactGroups`입니다. 요청 본문은 비어 있어야 하며, 쿼리 매개변수로 `pageToken`, `pageSize`, `syncToken`, `groupFields`를 사용할 수 있습니다.", "sources": ["https://developers.google.com/people/api/rest/v1/contactGroups/list?hl=ko"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "`contactGroups.list` 메서드에서 사용할 수 있는 쿼리 매개변수는 무엇인가요?", "answer": "`contactGroups.list` 메서드에서 사용할 수 있는 쿼리 매개변수는 다음과 같습니다: - `pageToken`: 이전 호출에서 반환된 `nextPageToken` 값. - `pageSize`: 반환할 최대 리소스 수 (1 이상 1000 이하). - `syncToken`: 이전 호출에서 반환된 동기화 토큰. - `groupFields`: 반환되는 그룹의 필드를 제한하는 필드 마스크.", "sources": ["https://developers.google.com/people/api/rest/v1/contactGroups/list?hl=ko"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "`contactGroups.list` 메서드의 응답 본문 구조는 어떻게 되나요?", "answer": "`contactGroups.list` 메서드의 응답 본문은 다음과 같은 구조를 가집니다: ```json { \"contactGroups\": [ { // ContactGroup object } ], \"totalItems\": integer, \"nextPageToken\": string, \"nextSyncToken\": string } ``` 여기서 `contactGroups`는 연락처 그룹의 목록, `totalItems`는 총 항목 수, `nextPageToken`은 다음 페이지를 요청하는 데 사용할 수 있는 토큰, `nextSyncToken`은 마지막 요청 이후 변경된 사항을 가져오는 데 사용할 수 있는 토큰입니다.", "sources": ["https://developers.google.com/people/api/rest/v1/contactGroups/list?hl=ko"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "`contactGroups.list` 메서드를 호출하기 위해 필요한 OAuth 범위는 무엇인가요?", "answer": "`contactGroups.list` 메서드를 호출하기 위해 필요한 OAuth 범위는 다음과 같습니다: - `https://www.googleapis.com/auth/contacts` - `https://www.googleapis.com/auth/contacts.readonly`", "sources": ["https://developers.google.com/people/api/rest/v1/contactGroups/list?hl=ko"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "`contactGroups.list` 메서드에서 `pageSize`의 기본값은 무엇인가요?", "answer": "`contactGroups.list` 메서드에서 `pageSize`의 기본값은 30입니다. 만약 `pageSize`를 설정하지 않거나 0으로 설정하면 기본값이 적용됩니다.", "sources": ["https://developers.google.com/people/api/rest/v1/contactGroups/list?hl=ko"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "`People API`의 `contactGroups.update` 메서드를 사용하여 연락처 그룹의 이름을 업데이트하는 방법은 무엇인가요?", "answer": "`contactGroups.update` 메서드를 사용하여 연락처 그룹의 이름을 업데이트하려면, PUT 요청을 사용하여 `https://people.googleapis.com/v1/{contactGroup.resourceName=contactGroups/*}` URL에 요청을 보내야 합니다. 요청 본문에는 업데이트할 연락처 그룹의 정보를 포함해야 하며, 그룹 이름은 사용자 연락처 그룹별로 고유해야 합니다.", "sources": ["https://developers.google.com/people/api/rest/v1/contactGroups/update?hl=ko"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "`contactGroups.update` 메서드의 요청 본문에 포함해야 하는 JSON 구조는 어떻게 되나요?", "answer": "요청 본문에는 다음과 같은 JSON 구조가 포함되어야 합니다: ```json { \"contactGroup\": { \"resourceName\": string, \"etag\": string, \"metadata\": { \"updateTime\": string, \"deleted\": boolean }, \"groupType\": enum, \"name\": string, \"formattedName\": string, \"memberResourceNames\": [string], \"memberCount\": integer, \"clientData\": [ { \"key\": string, \"value\": string } ] }, \"updateGroupFields\": string, \"readGroupFields\": string } ```", "sources": ["https://developers.google.com/people/api/rest/v1/contactGroups/update?hl=ko"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "`contactGroups.update` 메서드를 호출할 때 발생할 수 있는 오류는 무엇이며, 이를 어떻게 해결할 수 있나요?", "answer": "`contactGroups.update` 메서드를 호출할 때 중복된 이름으로 그룹을 만들려고 하면 HTTP 409 오류가 반환됩니다. 이를 방지하기 위해서는 업데이트할 그룹의 이름이 사용자 연락처 그룹별로 고유해야 하며, 동일한 사용자에 대한 변형 요청은 순차적으로 전송해야 합니다.", "sources": ["https://developers.google.com/people/api/rest/v1/contactGroups/update?hl=ko"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "`contactGroups.update` 메서드에서 사용할 수 있는 선택적 필드 마스크는 무엇인가요?", "answer": "`contactGroups.update` 메서드에서 사용할 수 있는 선택적 필드 마스크는 `updateGroupFields`와 `readGroupFields`입니다. `updateGroupFields`는 업데이트되는 필드를 제한하며, 기본값은 `name`입니다. `readGroupFields`는 반환되는 그룹의 필드를 제한하며, 기본값은 `metadata`, `groupType`, `name`입니다.", "sources": ["https://developers.google.com/people/api/rest/v1/contactGroups/update?hl=ko"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "`contactGroups.update` 메서드를 사용하기 위해 필요한 OAuth 범위는 무엇인가요?", "answer": "`contactGroups.update` 메서드를 사용하기 위해 필요한 OAuth 범위는 `https://www.googleapis.com/auth/contacts`입니다. 이 범위는 사용자의 연락처에 대한 접근을 허용합니다.", "sources": ["https://developers.google.com/people/api/rest/v1/contactGroups/update?hl=ko"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "'기타 연락처'를 사용자의 'myContacts' 그룹에 복사하는 방법은 무엇인가요?", "answer": "'기타 연락처'를 사용자의 'myContacts' 그룹에 복사하려면 `copyOtherContactToMyContactsGroup` 메서드를 사용합니다. 이 메서드는 사용자의 'myContacts' 그룹에 있는 새 연락처로 '기타 연락처'를 복사합니다. 요청을 순차적으로 전송하여 지연 시간 증가 및 실패를 방지해야 합니다.", "sources": ["https://developers.google.com/people/api/rest/v1/otherContacts/copyOtherContactToMyContactsGroup?hl=ko"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "'기타 연락처'를 나열하는 방법은 무엇인가요?", "answer": "'기타 연락처'를 나열하려면 `list` 메서드를 사용합니다. 이 메서드는 연락처 그룹에 없는 모든 '기타 연락처'를 나열합니다.", "sources": ["https://developers.google.com/people/api/rest/v1/otherContacts/list?hl=ko"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "특정 검색어와 일치하는 '기타 연락처'를 찾는 방법은 무엇인가요?", "answer": "특정 검색어와 일치하는 '기타 연락처'를 찾으려면 `search` 메서드를 사용합니다. 이 메서드는 인증된 사용자의 다른 연락처에서 검색어와 일치하는 연락처 목록을 제공합니다.", "sources": ["https://developers.google.com/people/api/rest/v1/otherContacts/search?hl=ko"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "'기타 연락처' API를 사용할 때 주의해야 할 점은 무엇인가요?", "answer": "'기타 연락처' API를 사용할 때는 동일한 사용자에 대한 변형 요청을 순차적으로 전송해야 지연 시간 증가 및 실패를 방지할 수 있습니다.", "sources": ["https://developers.google.com/people/api/rest/v1/otherContacts/copyOtherContactToMyContactsGroup?hl=ko"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "'기타 연락처' API의 리소스에 대한 설명은 무엇인가요?", "answer": "'기타 연락처' 리소스는 영구 데이터가 연결되어 있지 않으며, 사용자가 관리하는 연락처 그룹에 포함되지 않은 연락처를 다룹니다.", "sources": ["https://developers.google.com/people/api/rest/v1/otherContacts?hl=ko"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "`otherContacts.copyOtherContactToMyContactsGroup` 메서드를 사용하여 '기타 연락처'를 '내 연락처 그룹'으로 복사하는 방법은 무엇인가요?", "answer": "이 메서드는 POST 요청을 사용하여 '기타 연락처'의 리소스 이름을 포함한 URL에 요청을 보냅니다. 요청 본문에는 `copyMask`, `readMask`, `sources` 필드를 포함하는 JSON 구조가 필요합니다. 예를 들어, `copyMask`에는 복사할 필드를 제한하는 값이 포함되어야 합니다.", "sources": ["https://developers.google.com/people/api/rest/v1/otherContacts/copyOtherContactToMyContactsGroup?hl=ko#http-request"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "`copyMask`와 `readMask`의 역할은 무엇인가요?", "answer": "`copyMask`는 새 연락처로 복사할 필드를 제한하는 필드 마스크로, 유효한 값으로는 `emailAddresses`, `이름`, `phoneNumbers`가 있습니다. `readMask`는 반환되는 사람의 필드를 제한하는 선택적 필드 마스크로, 여러 필드는 쉼표로 구분하여 지정할 수 있습니다.", "sources": ["https://developers.google.com/people/api/rest/v1/otherContacts/copyOtherContactToMyContactsGroup?hl=ko#request-body"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "이 API를 호출할 때 필요한 OAuth 승인 범위는 무엇인가요?", "answer": "이 API를 사용하기 위해서는 `https://www.googleapis.com/auth/contacts.other.readonly` 또는 `https://www.googleapis.com/auth/contacts` 중 하나의 OAuth 범위가 필요합니다.", "sources": ["https://developers.google.com/people/api/rest/v1/otherContacts/copyOtherContactToMyContactsGroup?hl=ko#authorization-scopes"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "요청을 보낼 때 지연 시간 및 실패를 방지하기 위한 권장 사항은 무엇인가요?", "answer": "동일한 사용자에 대한 변형 요청을 순차적으로 전송하여 지연 시간 및 실패를 증가시키지 않도록 하는 것이 권장됩니다.", "sources": ["https://developers.google.com/people/api/rest/v1/otherContacts/copyOtherContactToMyContactsGroup?hl=ko"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "API 호출이 성공했을 때의 응답 본문은 어떤 형식을 가지나요?", "answer": "API 호출이 성공하면 응답 본문에는 `Person`의 인스턴스가 포함됩니다.", "sources": ["https://developers.google.com/people/api/rest/v1/otherContacts/copyOtherContactToMyContactsGroup?hl=ko#response-body"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "`People API`의 `otherContacts.list` 메서드를 사용하여 '기타 연락처'를 나열하는 방법은 무엇인가요?", "answer": "`otherContacts.list` 메서드를 사용하여 '기타 연락처'를 나열하려면 HTTP GET 요청을 `https://people.googleapis.com/v1/otherContacts`로 보내야 합니다. 요청 본문은 비어 있어야 하며, 쿼리 매개변수로 `pageToken`, `pageSize`, `requestSyncToken`, `syncToken`, `readMask` 등을 사용할 수 있습니다.", "sources": ["https://developers.google.com/people/api/rest/v1/otherContacts/list?hl=ko#http-request"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "`otherContacts.list` 메서드에서 `pageSize` 매개변수의 유효한 값은 무엇인가요?", "answer": "`pageSize` 매개변수는 '기타 연락처'의 수를 선택하며, 유효한 값은 1 이상 1000 이하입니다. 설정하지 않으면 기본값은 100입니다.", "sources": ["https://developers.google.com/people/api/rest/v1/otherContacts/list?hl=ko#query-parameters"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "`syncToken`이 만료되었을 때 발생하는 오류는 무엇이며, 이를 해결하기 위한 방법은 무엇인가요?", "answer": "`syncToken`이 만료되면 요청에서 'EXPIRED_SYNC_TOKEN' 오류가 발생합니다. 이 오류가 발생하면 클라이언트는 `syncToken` 없이 전체 동기화 요청을 다시 수행해야 합니다.", "sources": ["https://developers.google.com/people/api/rest/v1/otherContacts/list?hl=ko#http-request"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "`otherContacts.list` 메서드의 응답 본문에는 어떤 데이터가 포함되나요?", "answer": "성공적인 응답 본문에는 `otherContacts` 배열, `nextPageToken`, `nextSyncToken`, `totalSize` 필드가 포함됩니다. `otherContacts` 배열은 '기타 연락처' 목록을 포함하며, 각 연락처는 `Person` 리소스로 반환됩니다.", "sources": ["https://developers.google.com/people/api/rest/v1/otherContacts/list?hl=ko#response-body"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "`otherContacts.list` 메서드를 사용하기 위해 필요한 OAuth 범위는 무엇인가요?", "answer": "`otherContacts.list` 메서드를 사용하기 위해 필요한 OAuth 범위는 `https://www.googleapis.com/auth/contacts.other.readonly`입니다.", "sources": ["https://developers.google.com/people/api/rest/v1/otherContacts/list?hl=ko#authorization-scopes"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "People API의 `otherContacts.search` 메서드를 사용하여 다른 연락처를 검색하는 방법은 무엇인가요?", "answer": "`otherContacts.search` 메서드는 인증된 사용자의 다른 연락처 목록을 제공하며, HTTP GET 요청을 사용하여 `https://people.googleapis.com/v1/otherContacts:search`에 쿼리를 전송합니다. 필수 쿼리 매개변수로는 `query`가 있으며, 선택적으로 `pageSize`와 `readMask`를 설정할 수 있습니다.", "sources": ["https://developers.google.com/people/api/rest/v1/otherContacts/search?hl=ko"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "`otherContacts.search` 메서드에서 사용할 수 있는 쿼리 매개변수는 무엇인가요?", "answer": "`otherContacts.search` 메서드에서 사용할 수 있는 쿼리 매개변수는 `query` (필수), `pageSize` (선택적), `readMask` (필수)입니다. `query`는 일반 텍스트 쿼리로, `pageSize`는 반환할 결과 수를 설정하며, `readMask`는 반환되는 필드를 제한하는 데 사용됩니다.", "sources": ["https://developers.google.com/people/api/rest/v1/otherContacts/search?hl=ko#query-parameters"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "`otherContacts.search` 메서드를 호출하기 전에 어떤 준비 요청을 보내야 하나요?", "answer": "`otherContacts.search` 메서드를 호출하기 전에 클라이언트는 빈 쿼리와 함께 준비 요청을 보내 캐시를 업데이트해야 합니다. 이를 통해 검색 결과의 정확성을 높일 수 있습니다.", "sources": ["https://developers.google.com/people/v1/other-contacts#search_the_users_other_contacts"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "`otherContacts.search` 메서드의 응답 본문은 어떤 형식을 가지나요?", "answer": "`otherContacts.search` 메서드의 응답 본문은 성공 시 `SearchResponse`의 인스턴스를 포함합니다. 이 응답은 검색된 연락처의 정보를 담고 있습니다.", "sources": ["https://developers.google.com/people/api/rest/v1/otherContacts/search?hl=ko#response-body"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "`otherContacts.search` 메서드를 사용하기 위해 필요한 OAuth 승인 범위는 무엇인가요?", "answer": "`otherContacts.search` 메서드를 사용하기 위해 필요한 OAuth 승인 범위는 `https://www.googleapis.com/auth/contacts.other.readonly`입니다. 이 범위는 사용자의 다른 연락처를 읽기 전용으로 접근할 수 있도록 허용합니다.", "sources": ["https://developers.google.com/people/api/rest/v1/otherContacts/search?hl=ko#authorization-scopes"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "People API를 사용하여 인증된 사용자의 연락처 목록을 가져오는 방법은 무엇인가요?", "answer": "People API의 `people.connections.list` 메서드를 사용하여 인증된 사용자의 연락처 목록을 가져올 수 있습니다. 이 메서드는 사용자의 연락처를 반환하며, 다양한 파라미터를 통해 결과를 필터링할 수 있습니다.", "sources": ["https://developers.google.com/people/api/rest/v1/people.connections/list?hl=ko"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "`people.connections.list` 메서드에서 사용할 수 있는 주요 파라미터는 무엇인가요?", "answer": "`people.connections.list` 메서드에서 사용할 수 있는 주요 파라미터로는 `resourceName`, `pageSize`, `pageToken`, `personFields` 등이 있습니다. `resourceName`은 요청할 사람의 리소스 이름을 지정하고, `pageSize`는 반환할 최대 연결 수를 설정하며, `personFields`는 반환할 필드의 목록을 지정합니다.", "sources": ["https://developers.google.com/people/api/rest/v1/people.connections/list?hl=ko"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "People API에서 연락처의 이메일 주소를 가져오는 방법은 무엇인가요?", "answer": "연락처의 이메일 주소는 `emailAddresses` 필드를 통해 가져올 수 있습니다. `people.connections.list` 메서드를 호출할 때 `personFields` 파라미터에 `emailAddresses`를 포함시켜야 합니다.", "sources": ["https://developers.google.com/people/api/rest/v1/people.connections/list?hl=ko"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "People API를 사용할 때 발생할 수 있는 오류는 무엇이며, 이를 해결하는 방법은 무엇인가요?", "answer": "People API를 사용할 때 발생할 수 있는 오류로는 인증 오류, 권한 부족 오류 등이 있습니다. 이러한 오류를 해결하기 위해서는 OAuth 2.0 인증을 올바르게 설정하고, 필요한 권한을 요청해야 합니다.", "sources": ["https://developers.google.com/people/api/rest/v1/people.connections/list?hl=ko"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "People API에서 연락처의 전화번호를 가져오는 방법은 무엇인가요?", "answer": "연락처의 전화번호는 `phoneNumbers` 필드를 통해 가져올 수 있습니다. `people.connections.list` 메서드를 호출할 때 `personFields` 파라미터에 `phoneNumbers`를 포함시켜야 하며, 전화번호 수는 최대 100개로 제한됩니다.", "sources": ["https://developers.google.com/people/api/rest/v1/people.connections/list?hl=ko"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "`People API`의 `people.connections.list` 메서드를 사용하여 인증된 사용자의 연락처 목록을 가져오는 방법은 무엇인가요?", "answer": "`people.connections.list` 메서드를 사용하여 인증된 사용자의 연락처 목록을 가져오려면, HTTP GET 요청을 다음과 같이 보냅니다: `GET https://people.googleapis.com/v1/{resourceName=people/*}/connections`. 여기서 `resourceName`은 `people/me`로 설정해야 합니다.", "sources": ["https://developers.google.com/people/api/rest/v1/people.connections/list?hl=ko#http-request"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "`people.connections.list` 메서드에서 사용할 수 있는 쿼리 매개변수는 무엇이 있나요?", "answer": "`people.connections.list` 메서드에서 사용할 수 있는 쿼리 매개변수는 `pageToken`, `pageSize`, `sortOrder`, `requestSyncToken`, `syncToken`, `personFields` 등이 있습니다. 예를 들어, `pageSize`는 응답에 포함할 연결 수를 설정하며, 유효한 값은 1 이상 1000 이하입니다.", "sources": ["https://developers.google.com/people/api/rest/v1/people.connections/list?hl=ko#query-parameters"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "`people.connections.list` 메서드에서 `syncToken`을 사용하는 경우의 동작은 어떻게 되나요?", "answer": "`syncToken`을 사용하면 마지막 요청 이후 변경된 리소스만 가져올 수 있습니다. 이 경우, 요청에 포함된 다른 모든 매개변수는 `syncToken`을 제공한 첫 번째 호출과 일치해야 합니다. 만약 `syncToken`이 만료되면, 'EXPIRED_SYNC_TOKEN' 오류가 발생합니다.", "sources": ["https://developers.google.com/people/api/rest/v1/people.connections/list?hl=ko#sync-token"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "`people.connections.list` 메서드에서 발생할 수 있는 오류는 무엇이 있으며, 어떻게 해결하나요?", "answer": "`people.connections.list` 메서드에서 할당량 초과 시 429 오류가 반환됩니다. 이 경우, 요청을 다시 시도해야 하며, 할당량은 고정되어 있어 늘릴 수 없습니다. 또한, 동기화 토큰이 만료된 경우에는 전체 동기화 요청을 실행해야 합니다.", "sources": ["https://developers.google.com/people/api/rest/v1/people.connections/list?hl=ko#errors"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "`people.connections.list` 메서드의 응답 본문 구조는 어떻게 되나요?", "answer": "`people.connections.list` 메서드의 응답 본문은 `connections`, `nextPageToken`, `nextSyncToken`, `totalItems` 필드를 포함합니다. `connections`는 요청자가 연결된 사용자 목록을 포함하며, `nextPageToken`은 다음 페이지를 검색하기 위한 토큰입니다.", "sources": ["https://developers.google.com/people/api/rest/v1/people.connections/list?hl=ko#response-body"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "People API를 사용하여 새로운 연락처를 생성하는 방법은 무엇인가요?", "answer": "새로운 연락처를 생성하려면 `createContact` 메서드를 사용합니다. 이 메서드는 새 연락처를 만들고 해당 연락처의 사람 리소스를 반환합니다.", "sources": ["https://developers.google.com/people/api/rest/v1/people/createContact?hl=ko"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "People API에서 연락처를 일괄적으로 삭제하는 방법은 무엇인가요?", "answer": "연락처를 일괄적으로 삭제하려면 `batchDeleteContacts` 메서드를 사용합니다. 이 메서드는 여러 연락처를 한 번에 삭제할 수 있습니다.", "sources": ["https://developers.google.com/people/api/rest/v1/people/batchDeleteContacts?hl=ko"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "특정 사용자의 연락처 정보를 가져오는 방법은 무엇인가요?", "answer": "특정 사용자의 연락처 정보를 가져오려면 `get` 메서드를 사용하여 리소스 이름을 지정해야 합니다. 이 메서드는 해당 사람에 대한 정보를 제공합니다.", "sources": ["https://developers.google.com/people/api/rest/v1/people/get?hl=ko"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "People API에서 연락처를 업데이트하는 방법은 무엇인가요?", "answer": "기존 연락처의 데이터를 업데이트하려면 `updateContact` 메서드를 사용합니다. 이 메서드는 지정된 연락처의 정보를 수정할 수 있습니다.", "sources": ["https://developers.google.com/people/api/rest/v1/people/updateContact?hl=ko"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "People API를 사용하여 인증된 사용자의 그룹화된 연락처 중에서 특정 검색어와 일치하는 연락처를 찾는 방법은 무엇인가요?", "answer": "인증된 사용자의 그룹화된 연락처 중에서 검색어와 일치하는 연락처를 찾으려면 `searchContacts` 메서드를 사용합니다. 이 메서드는 검색어에 맞는 연락처 목록을 제공합니다.", "sources": ["https://developers.google.com/people/api/rest/v1/people/searchContacts?hl=ko"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "`People API`의 `batchCreateContacts` 메서드를 사용하여 여러 연락처를 일괄적으로 생성하는 방법은 무엇인가요?", "answer": "`batchCreateContacts` 메서드는 POST 요청을 통해 여러 연락처를 일괄적으로 생성할 수 있습니다. 요청 본문에는 `contacts` 배열에 생성할 연락처 정보를 포함해야 하며, 최대 200개의 연락처를 한 번에 요청할 수 있습니다. 요청 URL은 `https://people.googleapis.com/v1/people:batchCreateContacts`입니다.", "sources": ["https://developers.google.com/people/api/rest/v1/people/batchCreateContacts?hl=ko"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "`batchCreateContacts` 요청 본문에서 `readMask` 필드는 어떤 역할을 하나요?", "answer": "`readMask` 필드는 응답에서 반환되는 각 사용자의 필드를 제한하는 역할을 합니다. 여러 필드는 쉼표로 구분하여 지정할 수 있으며, 이 필드가 비어 있으면 응답에 데이터가 반환되지 않습니다.", "sources": ["https://developers.google.com/people/api/rest/v1/people/batchCreateContacts?hl=ko#request-body"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "`batchCreateContacts` 메서드의 성공적인 응답 본문 구조는 어떻게 되나요?", "answer": "성공적인 응답 본문은 `createdPeople` 배열을 포함하며, 이 배열에는 생성된 연락처에 대한 `PersonResponse` 객체가 포함됩니다. 요청이 비어 있는 경우를 제외하고 생성된 연락처의 정보가 반환됩니다.", "sources": ["https://developers.google.com/people/api/rest/v1/people/batchCreateContacts?hl=ko#response-body"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "`batchCreateContacts` 메서드를 사용하기 위해 필요한 OAuth 승인 범위는 무엇인가요?", "answer": "`batchCreateContacts` 메서드를 사용하기 위해서는 `https://www.googleapis.com/auth/contacts` OAuth 범위가 필요합니다. 이 범위는 연락처에 대한 접근 권한을 부여합니다.", "sources": ["https://developers.google.com/people/api/rest/v1/people/batchCreateContacts?hl=ko#authorization-scopes"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "`batchCreateContacts` 요청에서 `sources` 필드는 어떤 용도로 사용되나요?", "answer": "`sources` 필드는 사후 Variant 읽기에서 반환할 소스 유형의 마스크를 설정하는 선택적 필드입니다. 설정하지 않으면 기본값으로 `READ_SOURCE_TYPE_CONTACT` 및 `READ_SOURCE_TYPE_PROFILE`이 사용됩니다.", "sources": ["https://developers.google.com/people/api/rest/v1/people/batchCreateContacts?hl=ko#request-body"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "People API에서 연락처를 일괄 삭제하는 방법은 무엇인가요?", "answer": "연락처를 일괄 삭제하려면 `POST` 요청을 `https://people.googleapis.com/v1/people:batchDeleteContacts`에 보내야 합니다. 요청 본문에는 삭제할 연락처의 리소스 이름을 포함하는 JSON 구조가 필요합니다. 최대 500개의 리소스 이름을 한 번에 삭제할 수 있습니다.", "sources": ["https://developers.google.com/people/api/rest/v1/people/batchDeleteContacts?hl=ko"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "연락처 삭제 요청의 본문 구조는 어떻게 되나요?", "answer": "요청 본문은 다음과 같은 JSON 구조를 가져야 합니다: ```json { \"resourceNames\": [ \"string\" ] } ``` 여기서 `resourceNames`는 삭제할 연락처의 리소스 이름을 포함하는 필수 항목입니다.", "sources": ["https://developers.google.com/people/api/rest/v1/people/batchDeleteContacts?hl=ko"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "People API에서 연락처를 삭제할 때 필요한 OAuth 범위는 무엇인가요?", "answer": "연락처를 삭제하기 위해서는 `https://www.googleapis.com/auth/contacts` OAuth 범위가 필요합니다. 추가적인 정보는 승인 가이드를 참조하세요.", "sources": ["https://developers.google.com/people/api/rest/v1/people/batchDeleteContacts?hl=ko"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "동일한 사용자에 대한 변형 요청을 전송할 때 주의해야 할 점은 무엇인가요?", "answer": "동일한 사용자에 대한 변형 요청을 순차적으로 전송해야 지연 시간 및 실패 증가를 방지할 수 있습니다.", "sources": ["https://developers.google.com/people/api/rest/v1/people/batchDeleteContacts?hl=ko"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "연락처 삭제 요청이 성공했을 때의 응답 본문은 어떻게 되나요?", "answer": "요청이 성공하면 응답 본문은 비어 있습니다.", "sources": ["https://developers.google.com/people/api/rest/v1/people/batchDeleteContacts?hl=ko"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "`people.batchUpdateContacts` 메서드를 사용하여 연락처를 일괄 업데이트하는 방법은 무엇인가요?", "answer": "`people.batchUpdateContacts` 메서드는 POST 요청을 통해 연락처를 일괄적으로 업데이트합니다. 요청 본문에는 업데이트할 연락처의 리소스 이름을 포함하는 `contacts` 필드와 업데이트할 필드를 지정하는 `updateMask` 필드가 필요합니다. 최대 200개의 연락처를 한 번에 업데이트할 수 있습니다.", "sources": ["https://developers.google.com/people/api/rest/v1/people/batchUpdateContacts?hl=ko"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "`updateMask` 필드는 어떤 형식으로 작성해야 하나요?", "answer": "`updateMask` 필드는 업데이트되는 사람의 필드를 제한하는 필드 마스크로, 여러 필드는 쉼표로 구분하여 지정할 수 있습니다. 유효한 값으로는 `addresses`, `emailAddresses`, `names` 등이 있으며, 각 사용자에 대해 지정된 모든 입력란이 대체되거나 비어 있는 경우 지워집니다.", "sources": ["https://developers.google.com/people/api/rest/v1/people/batchUpdateContacts?hl=ko"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "`readMask` 필드는 어떤 용도로 사용되며, 어떻게 설정하나요?", "answer": "`readMask` 필드는 각 사용자의 어떤 필드가 반환되는지를 제한하는 필드 마스크입니다. 여러 필드는 쉼표로 구분하여 지정할 수 있으며, 읽기 마스크가 비어 있으면 응답에 데이터가 반환되지 않습니다. 유효한 값으로는 `addresses`, `emailAddresses`, `photos` 등이 있습니다.", "sources": ["https://developers.google.com/people/api/rest/v1/people/batchUpdateContacts?hl=ko"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "`people.batchUpdateContacts` 메서드 호출 시 발생할 수 있는 오류는 무엇인가요?", "answer": "메서드 호출 시 실패하면 각 연락처에 해당하는 오류 목록인 `BatchUpdateContactsErrorDetails`가 반환됩니다. 이 오류는 요청이 잘못되었거나, 업데이트할 수 없는 필드가 포함된 경우 발생할 수 있습니다.", "sources": ["https://developers.google.com/people/api/rest/v1/people/batchUpdateContacts?hl=ko"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "`people.batchUpdateContacts` 메서드를 사용하기 위해 필요한 OAuth 범위는 무엇인가요?", "answer": "`people.batchUpdateContacts` 메서드를 사용하기 위해서는 `https://www.googleapis.com/auth/contacts` OAuth 범위가 필요합니다. 이 범위는 연락처에 대한 읽기 및 쓰기 권한을 부여합니다.", "sources": ["https://developers.google.com/people/api/rest/v1/people/batchUpdateContacts?hl=ko"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "`people.createContact` 메서드를 사용하여 새 연락처를 만드는 방법은 무엇인가요?", "answer": "`people.createContact` 메서드를 사용하여 새 연락처를 만들려면 HTTP POST 요청을 `https://people.googleapis.com/v1/people:createContact`로 전송해야 합니다. 요청 본문에는 `Person`의 인스턴스가 포함되어야 하며, 필수 쿼리 매개변수인 `personFields`를 사용하여 반환할 필드를 지정해야 합니다.", "sources": ["https://developers.google.com/people/api/rest/v1/people/createContact?hl=ko"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "`personFields` 쿼리 매개변수의 역할은 무엇인가요?", "answer": "`personFields` 쿼리 매개변수는 각 개인에서 반환되는 필드를 제한하는 필드 마스크입니다. 여러 입력란은 쉼표로 구분하여 지정할 수 있으며, 설정하지 않으면 모든 필드가 기본값으로 반환됩니다. 유효한 값으로는 `names`, `emailAddresses`, `phoneNumbers` 등이 있습니다.", "sources": ["https://developers.google.com/people/api/rest/v1/people/createContact?hl=ko#query-parameters"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "`people.createContact` 메서드 호출 시 발생할 수 있는 오류는 무엇인가요?", "answer": "요청에서 연락처 소스의 싱글톤인 필드에 둘 이상의 필드가 지정되면 400 오류가 발생합니다. 또한, 동일한 사용자에 대한 변형 요청을 순차적으로 전송하지 않으면 지연 시간 증가 및 실패가 발생할 수 있습니다.", "sources": ["https://developers.google.com/people/api/rest/v1/people/createContact?hl=ko"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "`people.createContact` 메서드의 응답 본문에는 어떤 정보가 포함되나요?", "answer": "`people.createContact` 메서드가 성공적으로 호출되면 응답 본문에 `Person`의 인스턴스가 포함됩니다. 이 인스턴스는 생성된 연락처의 정보를 담고 있습니다.", "sources": ["https://developers.google.com/people/api/rest/v1/people/createContact?hl=ko#response-body"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "`people.createContact` 메서드를 사용하기 위한 OAuth 승인 범위는 무엇인가요?", "answer": "`people.createContact` 메서드를 사용하기 위해서는 `https://www.googleapis.com/auth/contacts` OAuth 범위가 필요합니다. 이 범위는 사용자의 연락처에 대한 접근을 허용합니다.", "sources": ["https://developers.google.com/people/api/rest/v1/people/createContact?hl=ko#authorization-scopes"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "People API에서 연락처를 삭제하는 방법은 무엇인가요?", "answer": "연락처를 삭제하려면 `DELETE` HTTP 요청을 사용하여 `https://people.googleapis.com/v1/{resourceName=people/*}:deleteContact` 엔드포인트에 요청을 보내야 합니다. 여기서 `resourceName`은 삭제할 연락처의 리소스 이름입니다. 요청 본문은 비어 있어야 합니다.", "sources": ["https://developers.google.com/people/api/rest/v1/people/deleteContact?hl=ko"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "연락처 삭제 요청 시 필요한 OAuth 범위는 무엇인가요?", "answer": "연락처 삭제 요청을 위해서는 `https://www.googleapis.com/auth/contacts` OAuth 범위가 필요합니다. 자세한 내용은 승인 가이드를 참조해야 합니다.", "sources": ["https://developers.google.com/people/api/rest/v1/people/deleteContact?hl=ko"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "동일한 사용자에 대한 변형 요청을 보낼 때 주의해야 할 점은 무엇인가요?", "answer": "동일한 사용자에 대한 변형 요청을 순차적으로 전송해야 지연 시간 증가 및 실패를 방지할 수 있습니다.", "sources": ["https://developers.google.com/people/api/rest/v1/people/deleteContact?hl=ko"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "연락처 삭제 요청의 응답 본문은 어떻게 되나요?", "answer": "연락처 삭제 요청이 성공하면 응답 본문은 비어 있습니다.", "sources": ["https://developers.google.com/people/api/rest/v1/people/deleteContact?hl=ko"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "연락처 삭제를 위한 HTTP 요청의 형식은 어떻게 되나요?", "answer": "연락처 삭제를 위한 HTTP 요청은 `DELETE` 메서드를 사용하며, 요청 URL은 `https://people.googleapis.com/v1/{resourceName=people/*}:deleteContact` 형식을 따라야 합니다.", "sources": ["https://developers.google.com/people/api/rest/v1/people/deleteContact?hl=ko"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "`people.deleteContactPhoto` 메서드를 사용하여 연락처 사진을 삭제하는 방법은 무엇인가요?", "answer": "`people.deleteContactPhoto` 메서드는 HTTP DELETE 요청을 사용하여 연락처 사진을 삭제합니다. 요청 URL은 `https://people.googleapis.com/v1/{resourceName=people/*}:deleteContactPhoto` 형식이며, `resourceName`은 삭제할 사진이 있는 연락처의 리소스 이름입니다. 요청 본문은 비어 있어야 합니다.", "sources": ["https://developers.google.com/people/api/rest/v1/people/deleteContactPhoto?hl=ko"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "`people.deleteContactPhoto` 메서드에서 사용할 수 있는 경로 매개변수는 무엇인가요?", "answer": "`people.deleteContactPhoto` 메서드에서 사용할 수 있는 경로 매개변수는 `resourceName`입니다. 이 매개변수는 필수이며, 사진이 삭제될 연락처의 리소스 이름을 지정해야 합니다.", "sources": ["https://developers.google.com/people/api/rest/v1/people/deleteContactPhoto?hl=ko"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "`people.deleteContactPhoto` 메서드의 쿼리 매개변수로 어떤 것들을 사용할 수 있나요?", "answer": "`people.deleteContactPhoto` 메서드의 쿼리 매개변수로는 `personFields`가 있습니다. 이 매개변수는 선택사항이며, 반환할 필드를 제한하는 필드 마스크를 지정할 수 있습니다. 여러 필드를 쉼표로 구분하여 지정할 수 있습니다.", "sources": ["https://developers.google.com/people/api/rest/v1/people/deleteContactPhoto?hl=ko"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "`people.deleteContactPhoto` 메서드를 호출할 때 필요한 OAuth 범위는 무엇인가요?", "answer": "`people.deleteContactPhoto` 메서드를 호출하기 위해서는 `https://www.googleapis.com/auth/contacts` OAuth 범위가 필요합니다. 이 범위는 연락처에 대한 접근 권한을 부여합니다.", "sources": ["https://developers.google.com/people/api/rest/v1/people/deleteContactPhoto?hl=ko"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "`people.deleteContactPhoto` 메서드의 성공적인 응답은 어떤 구조를 가지고 있나요?", "answer": "`people.deleteContactPhoto` 메서드의 성공적인 응답은 JSON 형식으로, `person` 객체를 포함합니다. 만약 `personFields`가 설정되어 있다면 업데이트된 사용자 정보가 포함되며, 그렇지 않으면 설정되지 않습니다.", "sources": ["https://developers.google.com/people/api/rest/v1/people/deleteContactPhoto?hl=ko"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "`People API`의 `people.get` 메서드를 사용하여 인증된 사용자의 정보를 가져오는 방법은 무엇인가요?", "answer": "`people.get` 메서드를 사용하여 인증된 사용자의 정보를 가져오려면, HTTP GET 요청을 다음과 같이 수행합니다: `GET https://people.googleapis.com/v1/people/me`. 이 요청은 인증된 사용자의 정보를 반환합니다.", "sources": ["https://developers.google.com/people/api/rest/v1/people/get?hl=ko"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "`people.get` 메서드에서 필드 마스크를 사용하여 반환할 필드를 제한하는 방법은 무엇인가요?", "answer": "`people.get` 메서드에서 반환할 필드를 제한하려면 `personFields` 쿼리 매개변수를 사용해야 합니다. 이 매개변수에 쉼표로 구분된 필드 이름을 지정하여 원하는 필드만 반환받을 수 있습니다. 예를 들어, `personFields=names,emailAddresses`와 같이 설정할 수 있습니다.", "sources": ["https://developers.google.com/people/api/rest/v1/people/get?hl=ko"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "`people.get` 메서드에서 요청 시 발생할 수 있는 오류는 무엇이며, 그 중 하나는 무엇인가요?", "answer": "`people.get` 메서드에서 `personFields`가 지정되지 않은 경우 요청에서 400 오류를 반환합니다. 이는 필수 매개변수인 `personFields`가 누락되었음을 의미합니다.", "sources": ["https://developers.google.com/people/api/rest/v1/people/get?hl=ko"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "`people.get` 메서드의 요청 본문은 어떻게 구성되나요?", "answer": "`people.get` 메서드의 요청 본문은 비어 있어야 합니다. 즉, 요청을 보낼 때 본문에 아무런 데이터를 포함하지 않아야 합니다.", "sources": ["https://developers.google.com/people/api/rest/v1/people/get?hl=ko"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "`people.get` 메서드를 사용하여 비공식 데이터에 접근하기 위해 필요한 OAuth 범위는 무엇인가요?", "answer": "비공식 데이터에 접근하기 위해서는 다음과 같은 OAuth 범위 중 하나가 필요합니다: `https://www.googleapis.com/auth/contacts`, `https://www.googleapis.com/auth/userinfo.profile` 등. 이 범위는 요청하는 데이터의 종류에 따라 다릅니다.", "sources": ["https://developers.google.com/people/api/rest/v1/people/get?hl=ko"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "`people.getBatchGet` 메서드를 사용하여 여러 사용자의 정보를 어떻게 요청하나요?", "answer": "`people.getBatchGet` 메서드를 사용하여 여러 사용자의 정보를 요청하려면, HTTP GET 요청을 `https://people.googleapis.com/v1/people:batchGet`로 보내고, 쿼리 매개변수로 `resourceNames[]`에 사용자 리소스 이름을 지정해야 합니다. 예를 들어, `resourceNames=people/me&resourceNames=people/{account_id}`와 같이 설정할 수 있습니다.", "sources": ["https://developers.google.com/people/api/rest/v1/people/getBatchGet?hl=ko"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "`personFields` 매개변수는 무엇이며, 어떻게 사용하나요?", "answer": "`personFields` 매개변수는 요청에서 반환할 사용자 필드를 제한하는 필드 마스크입니다. 필드를 쉼표로 구분하여 지정할 수 있으며, 유효한 값으로는 `addresses`, `emailAddresses`, `names` 등이 있습니다. 이 매개변수는 필수 항목입니다.", "sources": ["https://developers.google.com/people/api/rest/v1/people/getBatchGet?hl=ko"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "`people.getBatchGet` 메서드에서 요청 본문은 어떻게 구성되나요?", "answer": "`people.getBatchGet` 메서드의 요청 본문은 비어 있어야 합니다. 즉, 요청을 보낼 때 본문에 어떤 데이터도 포함하지 않아야 합니다.", "sources": ["https://developers.google.com/people/api/rest/v1/people/getBatchGet?hl=ko"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "`people.getBatchGet` 메서드를 사용할 때 발생할 수 있는 오류는 무엇인가요?", "answer": "`personFields`가 지정되지 않은 경우 요청에서 400 오류가 반환됩니다. 따라서 이 매개변수를 반드시 포함해야 합니다.", "sources": ["https://developers.google.com/people/api/rest/v1/people/getBatchGet?hl=ko"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "`people.getBatchGet` 메서드를 사용하기 위해 필요한 OAuth 범위는 무엇인가요?", "answer": "비공식 데이터에 접근하기 위해서는 승인 범위가 필요하지 않지만, 비공식 데이터에 접근하기 위해서는 다음 중 하나의 OAuth 범위가 필요합니다: `https://www.googleapis.com/auth/contacts`, `https://www.googleapis.com/auth/userinfo.profile` 등.", "sources": ["https://developers.google.com/people/api/rest/v1/people/getBatchGet?hl=ko"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "`people.listDirectoryPeople` API를 사용하여 도메인 디렉터리의 사용자 목록을 가져오는 방법은 무엇인가요?", "answer": "`people.listDirectoryPeople` API를 사용하려면 HTTP GET 요청을 `https://people.googleapis.com/v1/people:listDirectoryPeople`로 보내야 합니다. 이 요청에는 필수 쿼리 매개변수인 `readMask`와 `sources`가 포함되어야 하며, `readMask`는 반환할 사용자 필드를 제한하는 필드 마스크입니다.", "sources": ["https://developers.google.com/people/api/rest/v1/people/listDirectoryPeople?hl=ko"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "`people.listDirectoryPeople` API의 `readMask` 매개변수는 어떤 형식으로 지정해야 하나요?", "answer": "`readMask` 매개변수는 쉼표로 구분된 필드 이름의 문자열 형식으로 지정해야 하며, 유효한 값으로는 `addresses`, `emailAddresses`, `names` 등이 있습니다. 이 매개변수는 각 사용자의 어떤 필드가 반환되는지를 제한합니다.", "sources": ["https://developers.google.com/people/api/rest/v1/people/listDirectoryPeople?hl=ko"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "`people.listDirectoryPeople` API에서 페이지네이션을 처리하는 방법은 무엇인가요?", "answer": "페이지네이션을 처리하기 위해 `pageToken` 매개변수를 사용할 수 있습니다. 이전 응답에서 받은 `nextPageToken` 값을 `pageToken`으로 설정하여 후속 페이지를 검색할 수 있습니다. 모든 다른 매개변수는 첫 번째 호출과 일치해야 합니다.", "sources": ["https://developers.google.com/people/api/rest/v1/people/listDirectoryPeople?hl=ko"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "`people.listDirectoryPeople` API를 통해 동기화 요청을 할 때 주의해야 할 점은 무엇인가요?", "answer": "동기화 요청을 할 때는 `syncToken` 매개변수를 제공해야 하며, 이 요청은 마지막 요청 이후 변경된 리소스만 가져옵니다. 또한, 동기화 요청의 경우 쓰기에 몇 분의 적용 지연이 있을 수 있으므로, 증분 동기화는 쓰기 후 읽기 사용 사례에 적합하지 않습니다.", "sources": ["https://developers.google.com/people/api/rest/v1/people/listDirectoryPeople?hl=ko"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "`people.listDirectoryPeople` API의 응답 본문 구조는 어떻게 되나요?", "answer": "성공적인 응답 본문은 `people` 배열, `nextPageToken`, `nextSyncToken` 필드를 포함합니다. `people` 배열은 도메인 디렉터리의 사용자 목록을 포함하며, `nextPageToken`은 다음 페이지를 검색하기 위한 토큰입니다. `nextSyncToken`은 마지막 요청 이후 변경사항을 가져오기 위한 동기화 토큰입니다.", "sources": ["https://developers.google.com/people/api/rest/v1/people/listDirectoryPeople?hl=ko"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "`people.searchContacts` 메서드를 사용하여 연락처를 검색하는 방법은 무엇인가요?", "answer": "`people.searchContacts` 메서드는 인증된 사용자의 그룹화된 연락처에서 검색어와 일치하는 연락처 목록을 제공합니다. 이 메서드는 GET 요청을 사용하며, URL은 `https://people.googleapis.com/v1/people:searchContacts`입니다. 요청 시 필수 쿼리 매개변수로 `query`를 포함해야 하며, `readMask`를 사용하여 반환할 필드를 제한할 수 있습니다.", "sources": ["https://developers.google.com/people/api/rest/v1/people/searchContacts?hl=ko"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "`people.searchContacts` 메서드의 쿼리 매개변수에 대해 설명해 주세요.", "answer": "`people.searchContacts` 메서드의 쿼리 매개변수는 다음과 같습니다: - `query`: 필수 항목으로, 일반 텍스트 쿼리입니다. - `pageSize`: 선택 사항으로, 반환할 결과 수를 지정합니다. 기본값은 10이며, 최대 30으로 제한됩니다. - `readMask`: 필수 항목으로, 반환되는 필드를 제한하는 필드 마스크입니다. 여러 필드는 쉼표로 구분하여 지정할 수 있습니다.", "sources": ["https://developers.google.com/people/api/rest/v1/people/searchContacts?hl=ko#query-parameters"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "`people.searchContacts` 메서드를 호출하기 전에 어떤 준비 요청을 보내야 하나요?", "answer": "`people.searchContacts` 메서드를 호출하기 전에 클라이언트는 빈 쿼리와 함께 준비 요청을 보내 캐시를 업데이트해야 합니다. 이를 통해 최신 연락처 정보를 확보할 수 있습니다.", "sources": ["https://developers.google.com/people/api/rest/v1/people/searchContacts?hl=ko"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "`people.searchContacts` 메서드의 응답 본문은 어떤 형식을 가지나요?", "answer": "`people.searchContacts` 메서드의 성공적인 응답 본문은 `SearchResponse`의 인스턴스를 포함합니다. 이 응답은 검색된 연락처 목록과 관련된 정보를 담고 있습니다.", "sources": ["https://developers.google.com/people/api/rest/v1/people/searchContacts?hl=ko#response-body"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "`people.searchContacts` 메서드를 사용하기 위한 승인 범위는 무엇인가요?", "answer": "`people.searchContacts` 메서드를 사용하기 위해서는 다음 OAuth 범위 중 하나가 필요합니다: - `https://www.googleapis.com/auth/contacts` - `https://www.googleapis.com/auth/contacts.readonly`", "sources": ["https://developers.google.com/people/api/rest/v1/people/searchContacts?hl=ko#authorization-scopes"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "`people.searchDirectoryPeople` API를 사용하여 도메인 디렉터리에서 사람을 검색하는 방법은 무엇인가요?", "answer": "`people.searchDirectoryPeople` API를 사용하려면 HTTP GET 요청을 `https://people.googleapis.com/v1/people:searchDirectoryPeople`로 보내야 합니다. 이 요청에는 필수 쿼리 매개변수로 `query`와 `readMask`가 포함되어야 하며, `query`는 검색할 사람의 필드와 일치하는 프리픽스 쿼리입니다. `readMask`는 반환할 필드를 제한하는 필드 마스크입니다.", "sources": ["https://developers.google.com/people/api/rest/v1/people/searchDirectoryPeople?hl=ko"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "`people.searchDirectoryPeople` API의 쿼리 매개변수 중 `readMask`의 사용법은 무엇인가요?", "answer": "`readMask`는 반환할 사용자 필드를 제한하는 데 사용됩니다. 여러 필드를 쉼표로 구분하여 지정할 수 있으며, 유효한 값으로는 `addresses`, `emailAddresses`, `names` 등이 있습니다. 이 매개변수는 필수 항목입니다.", "sources": ["https://developers.google.com/people/api/rest/v1/people/searchDirectoryPeople?hl=ko"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "`people.searchDirectoryPeople` API의 응답 본문 구조는 어떻게 되나요?", "answer": "성공적인 응답 본문은 JSON 형식으로, `people` 배열에는 쿼리와 일치하는 사용자 목록이 포함됩니다. 또한 `nextPageToken` 필드가 포함되어 있어 후속 페이지를 검색할 수 있으며, `totalSize` 필드는 페이지로 나누지 않은 목록의 총 항목 수를 나타냅니다.", "sources": ["https://developers.google.com/people/api/rest/v1/people/searchDirectoryPeople?hl=ko"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "`people.searchDirectoryPeople` API를 호출할 때 필요한 OAuth 범위는 무엇인가요?", "answer": "`people.searchDirectoryPeople` API를 호출하기 위해서는 `https://www.googleapis.com/auth/directory.readonly` OAuth 범위가 필요합니다. 이 범위는 인증된 사용자의 도메인 디렉터리 정보를 읽기 위해 필요합니다.", "sources": ["https://developers.google.com/people/api/rest/v1/people/searchDirectoryPeople?hl=ko"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "`people.searchDirectoryPeople` API에서 페이지네이션을 처리하는 방법은 무엇인가요?", "answer": "페이지네이션을 처리하기 위해 `pageSize`와 `pageToken` 쿼리 매개변수를 사용할 수 있습니다. `pageSize`는 응답에 포함할 사용자 수를 지정하며, 기본값은 100입니다. `pageToken`은 이전 응답에서 받은 `nextPageToken`을 사용하여 후속 페이지를 검색할 때 필요합니다.", "sources": ["https://developers.google.com/people/api/rest/v1/people/searchDirectoryPeople?hl=ko"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "`people.updateContact` 메서드를 사용하여 연락처를 업데이트하는 방법은 무엇인가요?", "answer": "`people.updateContact` 메서드는 PATCH 요청을 사용하여 특정 사용자의 연락처 데이터를 업데이트합니다. 요청 URL은 `https://people.googleapis.com/v1/{person.resourceName=people/*}:updateContact` 형식이며, `person.resourceName`은 업데이트할 사용자의 리소스 이름입니다. 요청 본문에는 업데이트할 연락처의 `Person` 인스턴스가 포함되어야 합니다.", "sources": ["https://developers.google.com/people/api/rest/v1/people/updateContact?hl=ko"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "`updatePersonFields` 파라미터는 어떤 역할을 하나요?", "answer": "`updatePersonFields` 파라미터는 필수 항목으로, 사용자의 업데이트되는 필드를 제한하는 필드 마스크입니다. 여러 필드를 쉼표로 구분하여 지정할 수 있으며, 업데이트된 모든 필드가 대체됩니다. 유효한 값으로는 `addresses`, `emailAddresses`, `names` 등이 있습니다.", "sources": ["https://developers.google.com/people/api/rest/v1/people/updateContact?hl=ko"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "`people.updateContact` 메서드에서 발생할 수 있는 오류는 무엇인가요?", "answer": "이 메서드에서 발생할 수 있는 오류로는 400 오류가 있으며, 이는 다음과 같은 경우에 발생합니다: `person.metadata.sources`가 지정되지 않았거나 연락처 소스가 없는 경우, `person.metadata.sources.etag`가 연락처의 etag와 다른 경우, 그리고 `memberships`가 업데이트되었지만 사용자에 지정된 연락처 그룹 멤버십이 없는 경우입니다.", "sources": ["https://developers.google.com/people/api/rest/v1/people/updateContact?hl=ko"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "`personFields` 파라미터는 무엇이며, 어떻게 사용하나요?", "answer": "`personFields` 파라미터는 선택사항으로, 각 사용자의 어떤 필드가 반환되는지를 제한하는 필드 마스크입니다. 여러 필드를 쉼표로 구분하여 지정할 수 있으며, 설정하지 않으면 기본값은 모든 필드가 반환됩니다. 유효한 값으로는 `addresses`, `emailAddresses`, `names` 등이 있습니다.", "sources": ["https://developers.google.com/people/api/rest/v1/people/updateContact?hl=ko"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "`people.updateContact` 메서드를 사용할 때, 동일한 사용자의 변형 요청을 어떻게 처리해야 하나요?", "answer": "동일한 사용자의 변형 요청을 순차적으로 전송하여 지연 시간 증가와 오류를 방지해야 합니다. 또한, 동일한 사용자를 연속으로 업데이트하는 경우, `updateContact` 응답의 etag를 사용하여 실패를 방지해야 합니다.", "sources": ["https://developers.google.com/people/api/rest/v1/people/updateContact?hl=ko"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "`people.updateContactPhoto` 메서드를 사용하여 연락처 사진을 업데이트하는 방법은 무엇인가요?", "answer": "`people.updateContactPhoto` 메서드는 PATCH 요청을 사용하여 연락처 사진을 업데이트합니다. 요청 URL은 `https://people.googleapis.com/v1/{resourceName=people/*}:updateContactPhoto` 형식이며, `resourceName`은 필수 매개변수입니다. 요청 본문에는 `photoBytes` (base64 인코딩된 사진 바이트), 선택적으로 `personFields` (반환할 필드를 제한하는 필드 마스크), 그리고 `sources` (반환할 소스 유형의 마스크)를 포함해야 합니다.", "sources": ["https://developers.google.com/people/api/rest/v1/people/updateContactPhoto?hl=ko"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "`photoBytes` 필드의 형식은 무엇인가요?", "answer": "`photoBytes` 필드는 string 형식으로, base64 인코딩된 사진 바이트를 포함해야 합니다. 이는 요청 본문에서 필수 항목입니다.", "sources": ["https://developers.google.com/people/api/rest/v1/people/updateContactPhoto?hl=ko"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "`personFields` 필드는 어떤 용도로 사용되며, 어떻게 설정하나요?", "answer": "`personFields` 필드는 선택 사항으로, 개인에서 반환되는 필드를 제한하는 필드 마스크입니다. 여러 입력란은 쉼표로 구분하여 지정할 수 있으며, 설정하지 않으면 기본값은 비어 있습니다. 유효한 값으로는 `addresses`, `emailAddresses`, `names` 등이 있습니다.", "sources": ["https://developers.google.com/people/api/rest/v1/people/updateContactPhoto?hl=ko"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "`sources` 필드는 무엇이며, 어떻게 사용하나요?", "answer": "`sources` 필드는 선택 사항으로, 반환할 소스 유형의 마스크를 지정합니다. 설정하지 않으면 기본값은 `READ_SOURCE_TYPE_CONTACT` 및 `READ_SOURCE_TYPE_PROFILE`입니다. 이 필드는 배열 형식으로 여러 소스 유형을 포함할 수 있습니다.", "sources": ["https://developers.google.com/people/api/rest/v1/people/updateContactPhoto?hl=ko"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "`people.updateContactPhoto` 메서드를 사용할 때 필요한 OAuth 범위는 무엇인가요?", "answer": "`people.updateContactPhoto` 메서드를 사용하기 위해서는 `https://www.googleapis.com/auth/contacts` OAuth 범위가 필요합니다. 이 범위는 사용자의 연락처에 대한 접근 권한을 부여합니다.", "sources": ["https://developers.google.com/people/api/rest/v1/people/updateContactPhoto?hl=ko"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "Google의 CardDAV 프로토콜을 사용하여 연락처를 삽입하는 방법은 무엇인가요?", "answer": "클라이언트 애플리케이션은 VCard 3.0 형식의 새 연락처가 포함된 POST 요청을 실행하여 연락처를 삽입할 수 있습니다. 응답에는 새 연락처의 ID가 포함됩니다.", "sources": ["https://developers.google.com/people/carddav?hl=ko#synchronizing_contacts"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "CardDAV 서버에 연결하기 위해 필요한 인증 방법은 무엇인가요?", "answer": "Google의 CardDAV 인터페이스에는 OAuth 2.0 인증이 필요합니다. 클라이언트 애플리케이션은 사용자의 Google 계정에 OAuth 2.0 인증을 제공해야 하며, HTTPS를 통해 연결해야 합니다.", "sources": ["https://developers.google.com/people/carddav?hl=ko#google%E2%80%99s_carddav_requires_oauth_20"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "연락처를 업데이트할 때 필요한 HTTP 요청은 무엇인가요?", "answer": "클라이언트 애플리케이션은 PUT 요청을 통해 업데이트된 연락처로 VCard 3.0 형식의 연락처를 전송해야 합니다. 이 요청에는 연락처의 현재 알려진 ETag를 포함한 If-Match 헤더가 포함되어야 합니다.", "sources": ["https://developers.google.com/people/carddav?hl=ko#synchronizing_contacts"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "CardDAV를 사용하여 연락처 동기화를 수행하는 방법은 무엇인가요?", "answer": "클라이언트 프로그램은 주소록 리소스의 getctag PROPFIND 요청을 사용하여 서버에서 연락처가 변경되었는지 확인하고, sync-token PROPFIND 요청을 통해 현재 상태를 나타내는 sync-token을 가져와야 합니다. 이 값을 저장하고 주기적으로 sync-collection 요청을 실행해야 합니다.", "sources": ["https://developers.google.com/people/carddav?hl=ko#synchronizing_contacts"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "CardDAV 프로토콜에서 지원하는 HTTP 메서드는 무엇인가요?", "answer": "CardDAV 프로토콜은 HTTP 메서드 GET, PUT, DELETE, OPTIONS, PROPFIND를 지원합니다. 그러나 LOCK, UNLOCK, COPY, MOVE 또는 MKCOL 메서드는 지원하지 않습니다.", "sources": ["https://developers.google.com/people/carddav?hl=ko#specifications"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "Google Apps Script에서 People API를 사용하여 사용자의 연결된 연락처의 이름을 어떻게 나열하나요?", "answer": "Google Apps Script에서 사용자의 연결된 연락처의 이름을 나열하려면 `listConnectionNames` 함수를 사용합니다. 이 함수는 `People.People.Connections.list` 메서드를 호출하여 최대 10개의 연결된 사람의 이름을 가져옵니다. 예제 코드는 다음과 같습니다: ```javascript function listConnectionNames() { try { const connections = People.People.Connections.list('people/me', { pageSize: 10, personFields: 'names,emailAddresses' }); connections.connections.forEach((person) => { if (person.names && person.names.length === 0) { console.log('No display name found for connection.'); return; } console.log(person.names[0].displayName); }); } catch (err) { console.log('Failed with error %s', err.message); } } ```", "sources": ["https://developers.google.com/people/quickstart/apps-script?hl=ko"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "People API를 사용하기 위해 Google Apps Script에서 어떤 기본 요건이 필요한가요?", "answer": "People API를 사용하기 위해서는 다음과 같은 기본 요건이 필요합니다: API 액세스가 사용 설정된 Google Workspace 도메인, 관리자 권한이 있는 해당 도메인의 Google 계정, Google Drive 액세스가 필요합니다.", "sources": ["https://developers.google.com/people/quickstart/apps-script?hl=ko#prerequisites"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "Google Apps Script에서 People API를 사용하기 위해 스크립트를 어떻게 구성하나요?", "answer": "Google Apps Script에서 People API를 사용하기 위해 스크립트를 구성하려면, Apps Script 프로젝트를 열고, 편집기에서 '서비스 추가'를 클릭한 후 People API를 선택하여 추가합니다.", "sources": ["https://developers.google.com/people/quickstart/apps-script?hl=ko#configure_the_script"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "People API를 처음 실행할 때 어떤 권한을 승인해야 하나요?", "answer": "People API를 처음 실행할 때는 액세스 권한을 승인하라는 메시지가 표시됩니다. 사용자는 권한 검토를 클릭하고 계정을 선택한 후 허용을 클릭하여 권한을 승인해야 합니다.", "sources": ["https://developers.google.com/people/quickstart/apps-script?hl=ko#run_the_sample"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "People API 사용 중 발생할 수 있는 인증 및 승인 문제를 어떻게 해결하나요?", "answer": "People API 사용 중 인증 및 승인 문제를 해결하기 위해서는 Google Apps Script 고급 서비스 문서와 인증 및 승인 문제 해결 가이드를 참조하는 것이 좋습니다. 이 문서들은 문제 해결에 필요한 정보를 제공합니다.", "sources": ["https://developers.google.com/people/quickstart/apps-script?hl=ko#next_steps,", "https://developers.google.com/people/v1/troubleshoot-authentication-authorization?hl=ko"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "People API를 사용하기 위해 필요한 기본 요건은 무엇인가요?", "answer": "People API를 사용하기 위해서는 최신 버전의 Go, 최신 버전의 Git, Google Cloud 프로젝트, API 액세스가 사용 설정된 Google Workspace 도메인, 그리고 관리자 권한이 있는 해당 도메인의 Google 계정이 필요합니다.", "sources": ["https://developers.google.com/people/quickstart/go?hl=ko#prerequisites"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "People API를 사용하기 위해 Google Cloud 프로젝트에서 API를 어떻게 사용 설정하나요?", "answer": "Google Cloud 콘솔에서 People API를 사용 설정하려면, 콘솔에 로그인한 후 API 사용 설정 페이지로 이동하여 People API를 선택하고 사용 설정하면 됩니다.", "sources": ["https://developers.google.com/people/quickstart/go?hl=ko#enable_the_api"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "Go 언어로 People API를 호출하는 샘플 코드는 어떻게 작성하나요?", "answer": "Go 언어로 People API를 호출하는 샘플 코드는 다음과 같습니다: ```go package main import ( \"context\" \"encoding/json\" \"fmt\" \"log\" \"net/http\" \"os\" \"golang.org/x/oauth2\" \"golang.org/x/oauth2/google\" \"google.golang.org/api/option\" \"google.golang.org/api/people/v1\" } // Retrieve a token, saves the token, then returns the generated client. func getClient(config *oauth2.Config) *http.Client { // ... } // Request a token from the web, then returns the retrieved token. func getTokenFromWeb(config *oauth2.Config) *oauth2.Token { // ... } // Retrieves a token from a local file. func tokenFromFile(file string) (*oauth2.Token, error) { // ... } // Saves a token to a file path. func saveToken(path string, token *oauth2.Token) { // ... } func main() { ctx := context.Background() b, err := os.ReadFile(\"credentials.json\") if err != nil { log.Fatalf(\"Unable to read client secret file: %v\", err) } config, err := google.ConfigFromJSON(b, people.ContactsReadonlyScope) if err != nil { log.Fatalf(\"Unable to parse client secret file to config: %v\", err) } client := getClient(config) srv, err := people.NewService(ctx, option.WithHTTPClient(client)) if err != nil { log.Fatalf(\"Unable to create people Client %v\", err) } r, err := srv.People.Connections.List(\"people/me\").PageSize(10). PersonFields(\"names,emailAddresses\").Do() if err != nil { log.Fatalf(\"Unable to retrieve people. %v\", err) } // ... } ```", "sources": ["https://developers.google.com/people/quickstart/go?hl=ko#set_up_the_sample"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "샘플 코드를 실행할 때 어떤 절차를 따라야 하나요?", "answer": "샘플 코드를 실행하기 위해서는 작업 디렉터리에서 `go run quickstart.go` 명령을 실행해야 합니다. 처음 실행할 때는 액세스 권한을 승인하라는 메시지가 표시되며, Google 계정에 로그인하고 승인하면 됩니다.", "sources": ["https://developers.google.com/people/quickstart/go?hl=ko#run_the_sample"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "People API 사용 중 인증 및 승인 문제를 해결하려면 어디에서 정보를 찾을 수 있나요?", "answer": "People API 사용 중 인증 및 승인 문제를 해결하려면 Google의 인증 및 승인 문제 해결 문서를 참조하면 됩니다.", "sources": ["https://developers.google.com/people/v1/troubleshoot-authentication-authorization?hl=ko"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "People API를 사용하기 위해 필요한 기본 요건은 무엇인가요?", "answer": "People API를 사용하기 위해서는 Java 11 이상, Gradle 7.0 이상, Google Cloud 프로젝트, API 액세스가 사용 설정된 Google Workspace 도메인, 관리자 권한이 있는 Google 계정이 필요합니다.", "sources": ["https://developers.google.com/people/quickstart/java?hl=ko#prerequisites"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "People API를 사용하기 위해 OAuth 동의 화면을 어떻게 구성하나요?", "answer": "OAuth 동의 화면을 구성하려면 Google Cloud 콘솔에서 메뉴 > 브랜딩으로 이동하여 앱 이름, 사용자 지원 이메일, 시청자층(내부 선택), 연락처 정보를 입력하고 Google API 서비스 사용자 데이터 정책에 동의한 후 만들기를 클릭합니다.", "sources": ["https://developers.google.com/people/quickstart/java?hl=ko#configure_the_oauth_consent_screen"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "People API를 호출하는 Java 애플리케이션을 설정하는 방법은 무엇인가요?", "answer": "Java 애플리케이션을 설정하려면 Gradle을 사용하여 프로젝트 구조를 만들고, build.gradle 파일을 설정한 후, src/main/java 디렉터리에 PeopleQuickstart.java 파일을 생성하여 필요한 코드를 포함시킵니다.", "sources": ["https://developers.google.com/people/quickstart/java?hl=ko#set_up_the_sample"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "People API를 호출하여 사용자의 연결 목록을 가져오는 Java 코드 예시는 무엇인가요?", "answer": "사용자의 연결 목록을 가져오는 Java 코드 예시는 다음과 같습니다: ```java ListConnectionsResponse response = service.people().connections() .list(\"people/me\") .setPageSize(10) .setPersonFields(\"names,emailAddresses\") .execute(); ```", "sources": ["https://developers.google.com/people/quickstart/java?hl=ko#sample_code"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "People API 사용 중 인증 및 승인 문제를 해결하려면 어떻게 해야 하나요?", "answer": "인증 및 승인 문제를 해결하려면 Google의 인증 및 승인 문제 해결 가이드를 참조하면 됩니다. 이 가이드는 일반적인 문제와 해결책을 제공합니다.", "sources": ["https://developers.google.com/people/v1/troubleshoot-authentication-authorization?hl=ko"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "People API를 사용하기 위해 필요한 기본 요건은 무엇인가요?", "answer": "People API를 사용하기 위해서는 Node.js 및 npm이 설치되어 있어야 하며, Google Cloud 프로젝트가 필요하고, API 액세스가 사용 설정된 Google Workspace 도메인과 관리자 권한이 있는 Google 계정이 필요합니다.", "sources": ["https://developers.google.com/people/quickstart/js?hl=ko#prereqs"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "People API를 사용하기 위해 OAuth 동의 화면을 어떻게 구성하나요?", "answer": "OAuth 동의 화면을 구성하려면 Google Cloud 콘솔에서 메뉴 > 브랜딩으로 이동하여 앱 이름, 사용자 지원 이메일, 시청자층을 설정하고, 연락처 정보를 입력한 후 Google API 서비스 사용자 데이터 정책에 동의해야 합니다.", "sources": ["https://developers.google.com/people/quickstart/js?hl=ko#configure_the_oauth_consent_screen"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "People API에 요청을 보내는 JavaScript 샘플 코드는 어떻게 되나요?", "answer": "People API에 요청을 보내는 JavaScript 샘플 코드는 다음과 같습니다: ```javascript async function listConnectionNames() { let response; try { response = await gapi.client.people.people.connections.list({ 'resourceName': 'people/me', 'pageSize': 10, 'personFields': 'names,emailAddresses', }); } catch (err) { document.getElementById('content').innerText = err.message; return; } // ... (이하 생략) } ``` 이 코드는 사용자의 연결된 사람들의 이름과 이메일 주소를 가져옵니다.", "sources": ["https://developers.google.com/people/quickstart/js?hl=ko"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "API 키를 만드는 방법은 무엇인가요?", "answer": "API 키를 만들려면 Google Cloud 콘솔에서 메뉴 > API 및 서비스 > 사용자 인증 정보로 이동한 후 '사용자 인증 정보 만들기'를 클릭하고 'API 키'를 선택하면 새 API 키가 생성됩니다.", "sources": ["https://developers.google.com/people/quickstart/js?hl=ko#create_an_api_key"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "People API를 호출하는 JavaScript 애플리케이션을 실행하는 방법은 무엇인가요?", "answer": "JavaScript 애플리케이션을 실행하려면 작업 디렉터리에서 `http-server` 패키지를 설치하고, `npx http-server -p 8000` 명령어로 웹 서버를 시작한 후 브라우저에서 `http://localhost:8000`으로 이동하여 액세스 권한을 승인하면 됩니다.", "sources": ["https://developers.google.com/people/quickstart/js?hl=ko#set_up_the_sample"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "Node.js에서 People API를 사용하기 위한 기본 요건은 무엇인가요?", "answer": "Node.js 및 npm이 설치되어 있어야 하며, Google Cloud 프로젝트가 필요하고, API 액세스가 사용 설정된 Google Workspace 도메인과 관리자 권한이 있는 Google 계정이 필요합니다.", "sources": ["https://developers.google.com/people/quickstart/nodejs?hl=ko#prerequisites"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "People API를 사용하기 위해 OAuth 동의 화면을 어떻게 구성하나요?", "answer": "Google Cloud 콘솔에서 메뉴 > 브랜딩으로 이동하여 앱 이름, 사용자 지원 이메일, 시청자층을 설정하고, 연락처 정보를 입력한 후 Google API 서비스 사용자 데이터 정책에 동의하여 OAuth 동의 화면을 구성합니다.", "sources": ["https://developers.google.com/people/quickstart/nodejs?hl=ko#configure_the_oauth_consent_screen"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "Node.js에서 People API를 호출하기 위한 샘플 코드는 어떻게 작성하나요?", "answer": "샘플 코드는 다음과 같이 작성됩니다: ```javascript const {google} = require('googleapis'); const SCOPES = ['https://www.googleapis.com/auth/contacts.readonly']; // ... (기타 코드 생략) async function listConnectionNames(auth) { const service = google.people({version: 'v1', auth}); const res = await service.people.connections.list({ resourceName: 'people/me', pageSize: 10, personFields: 'names,emailAddresses', }); // ... (기타 코드 생략) } ```", "sources": ["https://developers.google.com/people/quickstart/nodejs?hl=ko#set_up_the_sample"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "People API를 사용하기 위해 클라이언트 라이브러리를 어떻게 설치하나요?", "answer": "npm을 사용하여 다음 명령어로 클라이언트 라이브러리를 설치합니다: `npm install googleapis@105 @google-cloud/local-auth@2.1.0 --save`.", "sources": ["https://developers.google.com/people/quickstart/nodejs?hl=ko#install_the_client_library"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "샘플 코드를 실행할 때 어떤 절차를 따라야 하나요?", "answer": "작업 디렉터리에서 `node .` 명령어를 실행하여 샘플을 실행합니다. 처음 실행 시 액세스 권한을 승인하라는 메시지가 표시되며, Google 계정에 로그인하고 승인하면 됩니다.", "sources": ["https://developers.google.com/people/quickstart/nodejs?hl=ko#set_up_the_sample"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "People API를 사용하기 위해 필요한 기본 요건은 무엇인가요?", "answer": "People API를 사용하기 위해서는 Python 3.10.7 이상, pip 패키지 관리 도구, Google Cloud 프로젝트, API 액세스가 사용 설정된 Google Workspace 도메인, 관리자 권한이 있는 Google 계정이 필요합니다.", "sources": ["https://developers.google.com/people/quickstart/python?hl=ko#prerequisites"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "People API를 사용하기 위해 OAuth 동의 화면을 어떻게 구성하나요?", "answer": "OAuth 동의 화면을 구성하려면 Google Cloud 콘솔에서 메뉴 > 브랜딩으로 이동한 후, 앱 이름, 사용자 지원 이메일, 시청자층(내부 선택), 연락처 정보를 입력하고 Google API 서비스 사용자 데이터 정책에 동의한 후 완료를 클릭합니다.", "sources": ["https://developers.google.com/people/quickstart/python?hl=ko#configure_the_oauth_consent_screen"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "Python에서 People API를 호출하기 위한 샘플 코드는 어떻게 작성하나요?", "answer": "샘플 코드는 다음과 같이 작성합니다: ```python import os.path from google.auth.transport.requests import Request from google.oauth2.credentials import Credentials from google_auth_oauthlib.flow import InstalledAppFlow from googleapiclient.discovery import build from googleapiclient.errors import HttpError SCOPES = [\"https://www.googleapis.com/auth/contacts.readonly\"] def main(): creds = None if os.path.exists(\"token.json\"): creds = Credentials.from_authorized_user_file(\"token.json\", SCOPES) if not creds or not creds.valid: if creds and creds.expired and creds.refresh_token: creds.refresh(Request()) else: flow = InstalledAppFlow.from_client_secrets_file(\"credentials.json\", SCOPES) creds = flow.run_local_server(port=0) with open(\"token.json\", \"w\") as token: token.write(creds.to_json()) try: service = build(\"people\", \"v1\", credentials=creds) results = service.people().connections().list( resourceName=\"people/me\", pageSize=10, personFields=\"names,emailAddresses\" ).execute() connections = results.get(\"connections\", []) for person in connections: names = person.get(\"names\", []) if names: name = names[0].get(\"displayName\") print(name) except HttpError as err: print(err) if __name__ == \"__main__\": main() ```", "sources": ["https://developers.google.com/people/quickstart/python?hl=ko#샘플_구성"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "People API를 호출하기 위해 Google 클라이언트 라이브러리를 어떻게 설치하나요?", "answer": "Google 클라이언트 라이브러리는 다음 명령어를 사용하여 설치합니다: `pip install --upgrade google-api-python-client google-auth-httplib2 google-auth-oauthlib`", "sources": ["https://developers.google.com/people/quickstart/python?hl=ko#install_the_google_client_library"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "샘플 코드를 실행할 때 어떤 절차를 따라야 하나요?", "answer": "샘플 코드를 실행하려면 작업 디렉터리에서 `python3 quickstart.py` 명령어를 입력합니다. 처음 실행할 때 액세스 권한을 승인하라는 메시지가 표시되며, Google 계정에 로그인하고 승인할 계정을 선택한 후 수락을 클릭합니다.", "sources": ["https://developers.google.com/people/quickstart/python?hl=ko#샘플_실행"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "People API에서 일괄 요청을 사용하는 이유는 무엇인가요?", "answer": "People API는 일괄 처리를 지원하여 클라이언트가 단일 HTTP 요청에 여러 개의 API 호출을 포함시킬 수 있습니다. 이를 통해 HTTP 연결 수를 줄이고, 많은 데이터를 한 번에 업로드하거나 동기화할 수 있습니다.", "sources": ["https://developers.google.com/people/v1/batch?hl=ko#overview"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "일괄 요청의 형식은 어떻게 되나요?", "answer": "일괄 요청은 여러 개의 People API 호출이 포함된 단일 표준 HTTP 요청으로, multipart/mixed 콘텐츠 유형을 사용합니다. 각 부분은 자체 Content-Type: application/http 헤더로 시작하며, 각 부분의 본문은 자체 동사와 URL, 헤더, 본문을 포함하는 완전한 HTTP 요청입니다.", "sources": ["https://developers.google.com/people/v1/batch?hl=ko#format-of-a-batch-request"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "일괄 요청을 보낼 때의 HTTP 헤더는 어떻게 설정하나요?", "answer": "외부 일괄 요청의 HTTP 헤더는 일괄 처리되는 각 요청에 모두 적용됩니다. 특정 HTTP 헤더를 개별 호출에 지정할 경우, 해당 호출에만 적용되며 외부 요청 헤더의 값을 재정의할 수 있습니다.", "sources": ["https://developers.google.com/people/v1/batch?hl=ko#format-of-a-batch-request"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "일괄 요청의 응답 형식은 어떻게 되나요?", "answer": "서버의 응답은 multipart/mixed 콘텐츠 유형의 단일 표준 HTTP 응답으로, 각 부분은 일괄 요청에 포함된 요청 중 하나에 대한 응답입니다. 각 응답 부분에는 상태 코드, 헤더, 본문이 포함되며 요청 순서와 동일한 순서로 표시됩니다.", "sources": ["https://developers.google.com/people/v1/batch?hl=ko#response-to-a-batch-request"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "일괄 요청의 예시는 어떻게 되나요?", "answer": "일괄 요청의 예시는 다음과 같습니다: ``` POST /batch HTTP/1.1 Authorization: Bearer your_auth_token Content-Type: multipart/mixed; boundary=\"batch_people\" --batch_people Content-Type: application/http Content-Transfer-Encoding: binary Content-ID: 1 POST /v1/people:createContact HTTP/1.1 Content-Type: application/json { \"names\": [{ \"givenName\": \"John\", \"familyName\": \"Doe\" }] } --batch_people Content-Type: application/http Content-Transfer-Encoding: binary Content-ID: 2 GET /v1/people/c123456789012345?personFields=emailAddresses HTTP/1.1 --batch_people-- ```", "sources": ["https://developers.google.com/people/v1/batch?hl=ko#batch-example-request"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "사용자의 연락처를 표시하기 위한 API 요청은 어떻게 하나요?", "answer": "사용자의 연락처를 표시하기 위해 다음과 같은 GET 요청을 사용합니다: ``` GET /v1/people/me/connections?personFields=names,emailAddresses HTTP/1.1 Host: people.googleapis.com ``` 또는 자바 코드로는 다음과 같이 작성할 수 있습니다: ```java ListConnectionsResponse response = peopleService.people().connections().list(\"people/me\") .setPersonFields(\"names,emailAddresses\") .execute(); List<Person> people = response.getConnections(); ```", "sources": ["https://developers.google.com/people/v1/contacts?hl=ko#list_the_users_contacts"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "변경된 사용자의 연락처를 나열하는 방법은 무엇인가요?", "answer": "변경된 사용자의 연락처를 나열하기 위해서는 다음과 같은 코드를 사용합니다. 초기 요청 후, 다음 페이지를 가져오는 방법은 다음과 같습니다: ```java ListConnectionsResponse fullSyncResponse = peopleService.people().connections().list(\"people/me\") .setPersonFields(\"metadata,names,emailAddresses\") .setRequestSyncToken(true) .execute(); while (fullSyncResponse.getNextPageToken() != null) { fullSyncResponse = peopleService.people().connections().list(\"people/me\") .setPersonFields(\"metadata,names,emailAddresses\") .setRequestSyncToken(true) .setPageToken(fullSyncResponse.getNextPageToken()) .execute(); } ```", "sources": ["https://developers.google.com/people/v1/contacts?hl=ko#list_the_users_contacts_that_have_changed"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "새 연락처를 만들기 위한 API 요청은 어떻게 하나요?", "answer": "새 연락처를 만들기 위해서는 다음과 같은 POST 요청을 사용합니다: ``` POST /v1/people:createContact HTTP/1.1 Body: { \"names\": [{ \"givenName\": \"John\", \"familyName\": \"Doe\" }] } Host: people.googleapis.com ``` 자바 코드로는 다음과 같이 작성할 수 있습니다: ```java Person contactToCreate = new Person(); List<Name> names = new ArrayList<>(); names.add(new Name().setGivenName(\"John\").setFamilyName(\"Doe\")); contactToCreate.setNames(names); Person createdContact = peopleService.people().createContact(contactToCreate).execute(); ```", "sources": ["https://developers.google.com/people/v1/contacts?hl=ko#create_a_new_contact"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "기존 연락처를 업데이트하는 방법은 무엇인가요?", "answer": "기존 연락처를 업데이트하기 위해서는 다음과 같은 PATCH 요청을 사용합니다: ``` PATCH /v1/resource_name:updateContact?updatePersonFields=emailAddresses HTTP/1.1 Body: { \"resourceName\": \"resource_name\", \"etag\": \"etag\", \"emailAddresses\": [{ \"value\": \"john.doe@gmail.com\" }], } Host: people.googleapis.com ``` 자바 코드로는 다음과 같이 작성할 수 있습니다: ```java Person contactToUpdate = peopleService.people().get(\"resource_name\").execute(); List<EmailAddress> emailAddresses = new ArrayList<>(); emailAddresses.add(new EmailAddress().setValue(\"john.doe@gmail.com\")); contactToUpdate.setEmailAddresses(emailAddresses); Person updatedContact = peopleService.people() .updateContact(contactToUpdate.getResourceName(), contactToUpdate) .setUpdatePersonFields(\"emailAddresses\") .execute(); ```", "sources": ["https://developers.google.com/people/v1/contacts?hl=ko#%EA%B8%B0%EC%A4%80_%EC%9E%90%EB%A6%AC_%EC%9E%90%EB%B0%94"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "기존 연락처를 삭제하는 방법은 무엇인가요?", "answer": "기존 연락처를 삭제하기 위해서는 다음과 같은 DELETE 요청을 사용합니다: ``` DELETE /v1/resource_name:deleteContact HTTP/1.1 Host: people.googleapis.com ``` 자바 코드로는 다음과 같이 작성할 수 있습니다: ```java peopleService.people().deleteContact(\"resource_name\").execute(); ```", "sources": ["https://developers.google.com/people/v1/contacts?hl=ko#%EA%B8%B0%EC%A4%80_%EC%9E%90%EB%A6%AC_%EC%9E%90%EB%B0%94"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "People API를 사용하여 도메인 디렉터리에서 연락처 및 프로필 목록을 가져오는 방법은 무엇인가요?", "answer": "도메인 디렉터리에서 연락처 및 프로필 목록을 가져오려면 다음과 같은 GET 요청을 사용합니다: ``` GET /v1/people:listDirectoryPeople?sources=DIRECTORY_SOURCE_TYPE_DOMAIN_CONTACT&sources=DIRECTORY_SOURCE_TYPE_DOMAIN_PROFILE&readMask=names,emailAddresses ``` 자바 코드 예시는 다음과 같습니다: ```java List<String> sources = new ArrayList<>(); sources.add(\"DIRECTORY_SOURCE_TYPE_DOMAIN_CONTACT\"); sources.add(\"DIRECTORY_SOURCE_TYPE_DOMAIN_PROFILE\"); ListDirectoryPeopleResponse response = peopleService.people().listDirectoryPeople() .setSources(sources) .setReadMask(\"metadata,names,emailAddresses\") .execute(); List<Person> people = response.getPeople(); ```", "sources": ["https://developers.google.com/people/v1/directory?hl=ko"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "People API를 사용하여 변경된 디렉터리 사용자를 나열하는 방법은 무엇인가요?", "answer": "변경된 디렉터리 사용자를 나열하려면 초기 요청을 보내고, 다음 페이지를 가져오는 방법을 사용합니다. 자바 코드 예시는 다음과 같습니다: ```java List<String> sources = new ArrayList<>(); sources.add(\"DIRECTORY_SOURCE_TYPE_DOMAIN_CONTACT\"); sources.add(\"DIRECTORY_SOURCE_TYPE_DOMAIN_PROFILE\"); ListDirectoryPeopleResponse fullSyncResponse = peopleService.people().listDirectoryPeople() .setSources(sources) .setReadMask(\"metadata,names,emailAddresses\") .setRequestSyncToken(true) .execute(); while (fullSyncResponse.getNextPageToken() != null) { fullSyncResponse = peopleService.people().listDirectoryPeople() .setSources(sources) .setReadMask(\"metadata,names,emailAddresses\") .setRequestSyncToken(true) .setPageToken(fullSyncResponse.getNextPageToken()) .execute(); } ```", "sources": ["https://developers.google.com/people/v1/directory?hl=ko"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "증분 동기화를 사용하여 변경된 디렉터리 사용자를 가져오는 방법은 무엇인가요?", "answer": "증분 동기화를 사용하려면 마지막 전체 동기화 응답에서 반환된 동기화 토큰을 사용하여 요청을 보냅니다. 자바 코드 예시는 다음과 같습니다: ```java try { ListDirectoryPeopleResponse incrementalSyncResponse = peopleService.people().listDirectoryPeople() .setSources(sources) .setReadMask(\"metadata,names,emailAddresses\") .setSyncToken(fullSyncResponse.getNextSyncToken()) .execute(); for (Person person : incrementalSyncResponse.getDirectoryPeople()) { handlePerson(person); } } catch (GoogleJsonResponseException e) { if (e.getStatusCode() == 410) { // Sync token expired. Make full sync request. } } ```", "sources": ["https://developers.google.com/people/v1/directory?hl=ko"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "People API에서 사용자 검색을 수행하는 방법은 무엇인가요?", "answer": "사용자의 도메인 디렉터리에서 접두사 쿼리와 일치하는 연락처 및 프로필 목록을 가져오려면 POST 요청을 사용합니다. 자바 코드 예시는 다음과 같습니다: ```java List<String> sources = new ArrayList<>(); sources.add(\"DIRECTORY_SOURCE_TYPE_DOMAIN_CONTACT\"); sources.add(\"DIRECTORY_SOURCE_TYPE_DOMAIN_PROFILE\"); SearchDirectoryPeopleResponse response = peopleService.people().searchDirectoryPeople() .setQuery(\"John\") .setSources(sources) .setReadMask(\"metadata,names,emailAddresses\") .execute(); List<Person> people = response.getPeople(); ```", "sources": ["https://developers.google.com/people/v1/directory?hl=ko"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "People API를 사용하기 위해 필요한 사전 준비 단계는 무엇인가요?", "answer": "People API를 사용하기 위해서는 먼저 [People API 사용 준비하기](https://developers.google.com/people/v1/getting-started?hl=ko) 문서의 단계를 완료해야 합니다. 또한, 도메인 데이터를 읽으려면 도메인 관리자가 도메인에 대해 외부 연락처 및 프로필 공유를 사용 설정해야 합니다.", "sources": ["https://developers.google.com/people/v1/directory?hl=ko"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "People API를 사용하기 위해 필요한 첫 번째 단계는 무엇인가요?", "answer": "People API를 사용하기 위해서는 먼저 Google 계정을 만들어야 합니다. 이미 계정이 있다면 준비가 된 것입니다. 테스트 목적으로 별도의 Google 계정을 만들 수도 있습니다.", "sources": ["https://developers.google.com/people/v1/getting-started?hl=ko#1_get_a_google_account"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "People API를 사용하기 위해 클라이언트용 프로젝트를 어떻게 만들 수 있나요?", "answer": "People API에 요청을 보내기 위해서는 Google API 콘솔을 사용하여 프로젝트를 생성하고 API에 대한 액세스를 활성화해야 합니다. 이 과정에서 프로젝트에 이름을 붙이고 애플리케이션을 등록해야 합니다.", "sources": ["https://developers.google.com/people/v1/getting-started?hl=ko#2_create_a_project_for_your_client"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "People API를 사용하기 위해 앱을 설정하는 방법은 무엇인가요?", "answer": "앱을 설정하기 위해서는 지원되는 언어 중 하나를 사용하는 클라이언트 라이브러리를 사용하는 것이 좋습니다. 또한, API에 요청을 수행하기 위해서는 먼저 승인 절차를 설정해야 합니다.", "sources": ["https://developers.google.com/people/v1/getting-started?hl=ko#3_set_up_your_app"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "People API를 통해 연락처 목록을 가져오는 방법에 대한 예시 코드는 어디에서 찾을 수 있나요?", "answer": "다양한 언어로 연락처 목록을 가져오는 방법을 보여주는 빠른 시작 샘플 코드는 People API의 공식 문서에서 확인할 수 있습니다.", "sources": ["https://developers.google.com/people/quickstart/js?hl=ko"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "People API를 사용하기 위해 필요한 승인 설정은 어떻게 하나요?", "answer": "People API를 사용하기 위해서는 먼저 승인 절차를 설정해야 합니다. 이 과정은 API 문서에서 제공하는 가이드를 따라 진행할 수 있습니다.", "sources": ["https://developers.google.com/people/v1/how-tos/authorizing?hl=ko"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "People API를 Java에서 사용하기 위해 클라이언트 라이브러리를 어떻게 설치하나요?", "answer": "Java에서 People API를 사용하기 위해서는 Maven 또는 Gradle을 사용하여 클라이언트 라이브러리를 설치할 수 있습니다. Maven을 사용하는 경우, `pom.xml` 파일에 필요한 의존성을 추가해야 하며, Gradle을 사용하는 경우 `build.gradle` 파일에 의존성을 추가해야 합니다.", "sources": ["https://developers.google.com/people/v1/libraries?hl=ko"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "Python에서 People API 클라이언트 라이브러리를 설치하는 방법은 무엇인가요?", "answer": "Python에서 People API 클라이언트 라이브러리를 설치하려면 `pip` 또는 `setuptools`를 사용하여 설치할 수 있습니다. 예를 들어, `pip install --upgrade google-api-python-client` 명령어를 사용하여 설치할 수 있습니다.", "sources": ["https://developers.google.com/people/v1/libraries?hl=ko"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "Node.js에서 People API 클라이언트 라이브러리를 어떻게 가져오나요?", "answer": "Node.js에서 People API 클라이언트 라이브러리를 가져오려면 [GitHub](https://github.com/google/google-api-nodejs-client/)에서 최신 라이브러리를 다운로드하면 됩니다. 또한, 클라이언트 라이브러리의 개발자 가이드를 참조하여 사용법을 익힐 수 있습니다.", "sources": ["https://developers.google.com/people/v1/libraries?hl=ko"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "People API를 사용하여 API 탐색기를 통해 어떻게 상호작용할 수 있나요?", "answer": "People API를 사용하여 API 탐색기를 통해 상호작용하려면 [API 탐색기](https://developers.google.com/apis-explorer/?hl=ko#p/people/v1/)를 사용하면 됩니다. 이 도구를 통해 브라우저에서 직접 API를 사용해 볼 수 있습니다.", "sources": ["https://developers.google.com/people/v1/libraries?hl=ko"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "Ruby에서 Google API 클라이언트 라이브러리를 설치하는 방법은 무엇인가요?", "answer": "Ruby에서 Google API 클라이언트 라이브러리를 설치하려면 `gem install google-api-client` 명령어를 사용하여 설치할 수 있습니다. 이미 설치된 경우에는 `gem update -y google-api-client` 명령어로 최신 버전으로 업데이트할 수 있습니다.", "sources": ["https://developers.google.com/people/v1/libraries?hl=ko"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "사용자의 '기타 연락처'를 가져오는 방법은 무엇인가요?", "answer": "사용자의 '기타 연락처'를 가져오려면 다음과 같은 GET 요청을 사용합니다: ``` GET /v1/otherContacts?readMask=names,emailAddresses HTTP/1.1 Host: people.googleapis.com ``` 자바 코드 예시는 다음과 같습니다: ```java ListOtherContactsResponse response = peopleService.otherContacts().list() .setReadMask(\"metadata,names,emailAddresses\") .execute(); List<Person> otherContacts = response.getOtherContacts(); ```", "sources": ["https://developers.google.com/people/v1/other-contacts?hl=ko"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "'기타 연락처'의 변경된 내용을 나열하는 방법은 무엇인가요?", "answer": "변경된 '기타 연락처'를 나열하려면 초기 요청을 통해 전체 동기화를 수행한 후, 다음과 같은 코드를 사용하여 증분 동기화를 진행합니다: ```java ListOtherContactsResponse fullSyncResponse = peopleService.otherContacts().list() .setReadMask(\"metadata,names,emailAddresses\") .setRequestSyncToken(true) .execute(); ``` 그 후, 다음 페이지를 가져오고 증분 동기화를 수행합니다.", "sources": ["https://developers.google.com/people/v1/other-contacts?hl=ko"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "'기타 연락처'를 'myContacts' 그룹에 복사하는 방법은 무엇인가요?", "answer": "'기타 연락처'를 'myContacts' 그룹에 복사하려면 다음과 같은 POST 요청을 사용합니다: ``` POST /v1/resource_name:copyOtherContactToMyContactsGroup?copyMask=names,emailAddresses,phoneNumbers HTTP/1.1 Host: people.googleapis.com ``` 자바 코드 예시는 다음과 같습니다: ```java Person copiedContact = peopleService .otherContacts() .copyOtherContactToMyContactsGroup( \"resource_name\", new CopyOtherContactToMyContactsGroupRequest() .setCopyMask(\"names,emailAddresses,phoneNumbers\")) .execute(); ```", "sources": ["https://developers.google.com/people/v1/other-contacts?hl=ko"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "사용자의 '기타 연락처'를 검색하는 방법은 무엇인가요?", "answer": "사용자의 '기타 연락처'를 검색하려면 먼저 빈 쿼리로 캐시를 준비한 후, 다음과 같은 GET 요청을 사용합니다: ``` GET /v1/otherContacts:search?query=&readMask=names,emailAddresses HTTP/1.1 Host: people.googleapis.com ``` 자바 코드 예시는 다음과 같습니다: ```java SearchResponse response = peopleService.otherContacts().search() .setQuery(\"\") .setReadMask(\"names,emailAddresses\") .execute(); Thread.sleep(5); // 몇 초 대기 후 response = peopleService.otherContacts().search() .setQuery(\"query\") .setReadMask(\"names,emailAddresses\") .execute(); ```", "sources": ["https://developers.google.com/people/v1/other-contacts?hl=ko"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "동기화 요청에서 발생할 수 있는 오류는 무엇인가요?", "answer": "동기화 요청에서 410 상태 코드가 발생하면, 이는 동기화 토큰이 만료되었음을 의미합니다. 이 경우 전체 동기화 요청을 다시 수행해야 합니다.", "sources": ["https://developers.google.com/people/v1/other-contacts?hl=ko"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "People API를 사용하여 인증된 사용자의 프로필을 가져오는 방법은 무엇인가요?", "answer": "인증된 사용자의 프로필을 가져오려면 다음과 같은 GET 요청을 사용합니다: `GET /v1/people/me?personFields=names,emailAddresses`. 자바에서는 다음과 같이 사용할 수 있습니다: `Person profile = peopleService.people().get(\"people/me\").setPersonFields(\"names,emailAddresses\").execute();`", "sources": ["https://developers.google.com/people/v1/profiles?hl=ko"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "Google 계정 ID의 사용자 정보를 가져오는 방법은 무엇인가요?", "answer": "Google 계정 ID의 사용자 정보를 가져오려면 다음과 같은 GET 요청을 사용합니다: `GET /v1/people/account_id?personFields=names,emailAddresses`. 자바에서는 다음과 같이 사용할 수 있습니다: `Person profile = peopleService.people().get(\"people/account_id\").setPersonFields(\"names,emailAddresses\").execute();`", "sources": ["https://developers.google.com/people/v1/profiles?hl=ko"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "People API에서 프로필을 가져올 때 사용할 수 있는 파라미터는 무엇인가요?", "answer": "프로필을 가져올 때 사용할 수 있는 파라미터는 `personFields`입니다. 이 파라미터를 통해 요청할 필드를 지정할 수 있으며, 예를 들어 `names,emailAddresses`와 같이 사용할 수 있습니다.", "sources": ["https://developers.google.com/people/v1/profiles?hl=ko"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "People API를 사용하기 위해 필요한 초기 설정은 무엇인가요?", "answer": "People API를 사용하기 위해서는 먼저 [People API 사용 준비하기](https://developers.google.com/people/v1/getting-started?hl=ko) 문서의 단계를 완료해야 합니다. 이 단계에서는 API 키 생성 및 인증 설정이 포함됩니다.", "sources": ["https://developers.google.com/people/v1/profiles?hl=ko"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "People API에서 프로필 정보를 가져오는 코드 예시는 어떤 것이 있나요?", "answer": "Python에서 프로필 정보를 가져오는 예시는 다음과 같습니다: `profile = people_service.people().get('people/me', personFields='names,emailAddresses')`. 이 코드는 인증된 사용자의 이름과 이메일 주소를 가져옵니다.", "sources": ["https://developers.google.com/people/v1/profiles?hl=ko"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "\"이 앱은 인증되지 않았습니다\" 경고가 표시될 때 어떻게 해결하나요?", "answer": "이 경고는 앱이 민감한 사용자 데이터에 대한 액세스 권한을 요청하고 있을 때 발생합니다. 이 문제를 해결하려면 앱이 인증 절차를 거쳐야 합니다. 개발 단계에서는 고급 > {프로젝트 이름}(안전하지 않음)으로 이동하여 이 경고를 무시할 수 있습니다.", "sources": ["https://developers.google.com/people/v1/troubleshoot-authentication-authorization?hl=ko#this_app_isnt_verified"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "credentials.json 파일을 찾을 수 없다는 오류를 어떻게 해결하나요?", "answer": "이 오류는 데스크톱 애플리케이션 사용자 인증 정보를 승인하지 않은 경우 발생합니다. 사용자 인증 정보를 만들고 다운로드한 JSON 파일이 credentials.json으로 저장되었는지 확인한 후, 해당 파일을 작업 디렉터리로 이동해야 합니다.", "sources": ["https://developers.google.com/people/v1/troubleshoot-authentication-authorization?hl=ko#file_not_found_error_for_credentialsjson"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "\"토큰이 만료되었습니다\" 오류를 해결하려면 어떻게 해야 하나요?", "answer": "이 오류는 Google 승인 서버의 액세스 토큰이 만료되었거나 취소된 경우 발생합니다. 해결 방법에 대한 자세한 내용은 갱신 토큰 만료에 대한 문서를 참고해야 합니다.", "sources": ["https://developers.google.com/people/v1/troubleshoot-authentication-authorization?hl=ko#%60token-expired"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "\"origin_mismatch\" 오류는 무엇이며 어떻게 해결하나요?", "answer": "이 오류는 웹페이지를 제공하는 호스트와 포트가 Google Cloud 콘솔 프로젝트의 허용된 JavaScript 출처와 일치하지 않을 때 발생합니다. 승인된 JavaScript 원본을 설정하고 브라우저의 URL이 원본 URL과 일치하는지 확인해야 합니다.", "sources": ["https://developers.google.com/people/v1/troubleshoot-authentication-authorization?hl=ko#error_origin_mismatch"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
{"question": "\"idpiframe_initialization_failed: Failed to read the 'localStorage' property from 'Window'\" 오류를 해결하려면 어떻게 해야 하나요?", "answer": "이 오류는 브라우저에서 서드 파티 쿠키 및 데이터 스토리지가 사용 설정되지 않은 경우 발생합니다. 사용자는 서드 파티 쿠키 및 데이터 저장소를 사용 설정하거나 accounts.google.com에 대한 예외를 추가해야 합니다.", "sources": ["https://developers.google.com/people/v1/troubleshoot-authentication-authorization?hl=ko#idpiframe_initialization_failed_failed_to_read_the_localstorage_property_from_window"], "tags": "people", "last_verified": "2025-08-19", "source_file": "people_v1_troubleshoot-authentication-authorization.txt"}
