Source URL: https://developers.google.com/maps/documentation/javascript/places-ui-kit/place-list?hl=ko

reviews장소 UI 키트에 대한 의견을 공유하여 GMP의 미래를 함께 만들어 주세요. [https://google.qualtrics.com/jfe/form/SV_bQILAtzbvKIF7Po]
이 페이지는 Cloud Translation API [https://cloud.google.com/translate/?hl=ko]를 통해 번역되었습니다.
홈 [https://developers.google.com/?hl=ko]
제품 [https://developers.google.com/products?hl=ko]
Google Maps Platform [https://developers.google.com/maps?hl=ko]
문서 [https://developers.google.com/maps/documentation?hl=ko]
Web [https://developers.google.com/maps/web?hl=ko]
Maps JavaScript API [https://developers.google.com/maps/documentation/javascript?hl=ko]
Places UI Kit [https://developers.google.com/maps/documentation/javascript/places-ui-kit?hl=ko]
의견 보내기
장소 검색 요소
PlaceSearchElement [https://developers.google.com/maps/documentation/javascript/reference/places-widget?hl=ko#PlaceSearchElement]는 장소 검색 결과를 목록에 렌더링하는 HTML 요소입니다. gmp-place-search 요소를 구성하는 방법에는 두 가지가 있습니다.
주변 검색 요청 [https://developers.google.com/maps/documentation/javascript/places-ui-kit/place-list?hl=ko#search-nearby-request]을 사용하여 PlaceNearbySearchRequestElement [https://developers.google.com/maps/documentation/javascript/reference/places-widget?hl=ko#PlaceNearbySearchRequestElement]를 사용하여 검색 결과를 렌더링합니다.
텍스트로 검색 요청 [https://developers.google.com/maps/documentation/javascript/places-ui-kit/place-list?hl=ko#search-by-text-request]을 사용하여 PlaceTextSearchRequestElement [https://developers.google.com/maps/documentation/javascript/reference/places-widget?hl=ko#PlaceTextSearchRequestElement]를 사용하여 검색 결과를 렌더링합니다.
주변 검색 요청
메뉴에서 장소 유형을 선택하여 해당 장소 유형의 주변 검색 결과를 확인합니다.
다음 예에서는 주변 지역 검색에 대한 응답으로 장소 검색 요소를 렌더링합니다. 간단하게 카페, 레스토랑, 전기 자동차 충전소의 세 가지 장소 유형만 나열되어 있습니다. 결과를 선택하면 선택한 장소에 마커와 PlaceDetailsCompactElement [https://developers.google.com/maps/documentation/javascript/places-ui-kit/place-details?hl=ko#PlaceDetailsCompactElement]가 표시됩니다. 지도에 장소 검색 요소를 추가하려면 다음 스니펫과 같이 gmp-place-nearby-search-request 요소를 포함하는 gmp-place-search 요소를 HTML 페이지에 추가합니다.
<div class="list-container">
  <div id="map-container"></div>
  <div class="controls">
      <select name="types" class="type-select">
      <option value="">Select a place type</option>
      <option value="cafe">Cafe</option>
      <option value="restaurant">Restaurant</option>
      <option value="electric_vehicle_charging_station">EV charging station</option>
      </select>
  </div>

<div class="list-container">
  <gmp-place-search orientation="vertical" selectable>
      <gmp-place-all-content> </gmp-place-all-content>
      <gmp-place-nearby-search-request
      ></gmp-place-nearby-search-request>
  </gmp-place-search>
</div>

<div id="details-container">
   <gmp-place-details-compact orientation="horizontal">
      <gmp-place-details-place-request></gmp-place-details-place-request>
      <gmp-place-all-content></gmp-place-all-content>
  </gmp-place-details-compact>
</div>
여러 querySelector 호출은 상호작용을 위해 페이지 요소를 선택하는 데 사용됩니다.
  const mapContainer = document.getElementById("map-container");
  const placeSearch = document.querySelector("gmp-place-search");
  const placeSearchQuery = document.querySelector("gmp-place-nearby-search-request");
  const detailsContainer = document.getElementById("details-container");
  const placeDetails = document.querySelector("gmp-place-details-compact");
  const placeRequest = document.querySelector("gmp-place-details-place-request");
  const typeSelect = document.querySelector(".type-select");
사용자가 메뉴에서 장소 유형을 선택하면 gmp-place-nearby-search-request 요소가 업데이트되고 장소 검색 요소에 결과가 표시됩니다 (마커는 addMarkers 도우미 함수에 추가됨).
  typeSelect.addEventListener('change', (event) => {
    event.preventDefault();
    searchPlaces();
});

function searchPlaces(){
  const bounds = gMap.getBounds();
  placeDetailsPopup.map = null;

  if (typeSelect.value) {
  placeSearch.style.display = 'block';
  placeSearchQuery.maxResultCount = 10;
  placeSearchQuery.locationRestriction = { center: cent, radius: 1000 };
  placeSearchQuery.includedTypes = [typeSelect.value];

  placeSearch.addEventListener('gmp-load', addMarkers, { once: true });
  }
}
전체 코드 예 보기
텍스트로 검색 요청
입력란에 검색어를 입력하고 검색 버튼을 클릭하면 검색어와 일치하는 장소 목록이 표시됩니다.
이 예에서는 사용자 텍스트 검색에 대한 응답으로 장소 검색 요소를 렌더링합니다. 결과를 선택하면 선택한 장소에 마커와 PlaceDetailsCompactElement [https://developers.google.com/maps/documentation/javascript/places-ui-kit/place-details?hl=ko#PlaceDetailsCompactElement]가 표시됩니다. 지도에 장소 검색 요소를 추가하려면 다음 스니펫과 같이 gmp-place-search-text-search-request 요소를 포함하는 gmp-place-search 요소를 HTML 페이지에 추가합니다.
  <div id="map-container"></div>
  <div class="controls">
  <input type="text" class="query-input" />
  <button class="search-button">Search</button>
  </div>

  <div class="list-container">
    <gmp-place-search orientation="vertical" selectable>
        <gmp-place-all-content> </gmp-place-all-content>
        <gmp-place-text-search-request></gmp-place-text-search-request>
    </gmp-place-search>
  </div>

  <div id="details-container">
      <gmp-place-details-compact orientation="horizontal">
          <gmp-place-details-place-request></gmp-place-details-place-request>
          <gmp-place-all-content></gmp-place-all-content>
      </gmp-place-details-compact>
  </div>
  
여러 querySelector 호출은 상호작용을 위해 페이지 요소를 선택하는 데 사용됩니다.
  const mapContainer = document.getElementById("map-container");
  const placeSearch = document.querySelector("gmp-place-search");
  const placeSearchQuery = document.querySelector("gmp-place-text-search-request");
  const queryInput = document.querySelector(".query-input");
  const searchButton = document.querySelector(".search-button");
  const detailsContainer = document.getElementById("details-container");
  const placeDetails = document.querySelector("gmp-place-details-compact");
  const placeRequest = document.querySelector("gmp-place-details-place-request");
사용자가 검색어를 입력한 후 검색 함수가 실행되면 gmp-place-text-search-request 요소가 업데이트되고 장소 검색 요소에 결과가 표시됩니다 (마커는 addMarkers 도우미 함수에 추가됨).
searchButton.addEventListener("click", searchPlaces);
queryInput.addEventListener("keydown", (event) => {
    if (event.key == 'Enter') {
        event.preventDefault();
        searchPlaces();
    }
  });

function searchPlaces(){
  if (queryInput.value) {
      placeSearch.style.display = 'block';
      placeSearchQuery.textQuery = queryInput.value;
      placeSearchQuery.locationBias = gMap.getBounds();
      placeSearch.addEventListener('gmp-load', addMarkers, { once: true });
  }
}
전체 코드 예 보기
의견 보내기