Source URL: https://developers.google.com/maps/documentation/navigation/android-sdk/route?hl=ko

이 페이지는 Cloud Translation API [https://cloud.google.com/translate/?hl=ko]를 통해 번역되었습니다.
Switch to English
홈 [https://developers.google.com/?hl=ko]
제품 [https://developers.google.com/products?hl=ko]
Google Maps Platform [https://developers.google.com/maps?hl=ko]
문서 [https://developers.google.com/maps/documentation?hl=ko]
Android [https://developers.google.com/maps/android?hl=ko]
Navigation SDK for Android [https://developers.google.com/maps/documentation/navigation/android-sdk?hl=ko]
도움이 되었나요?
의견 보내기
단일 대상 경로 탐색
bookmark_border
이 페이지의 내용
요약 [https://developers.google.com/maps/documentation/navigation/android-sdk/route?hl=ko#summary]
코드 보기 [https://developers.google.com/maps/documentation/navigation/android-sdk/route?hl=ko#see_the_code]
앱에 UI 요소 추가 [https://developers.google.com/maps/documentation/navigation/android-sdk/route?hl=ko#add_a_ui_element_to_your_app]
탐색 프래그먼트 사용 [https://developers.google.com/maps/documentation/navigation/android-sdk/route?hl=ko#navfrag]
탐색 뷰 사용 [https://developers.google.com/maps/documentation/navigation/android-sdk/route?hl=ko#navview]
공지: fromLatLng() 및 fromPlaceId()은 지원이 중단되었지만 추가 업데이트 없이 계속 사용할 수 있습니다. 새 Waypoint.Builder [https://developers.google.com/maps/documentation/navigation/android-sdk/reference/com/google/android/libraries/navigation/Waypoint.Builder?hl=ko]로 마이그레이션하는 것이 좋습니다.
이 가이드에 따라 Android용 Navigation SDK를 사용하여 앱 내에 경로를 표시하세요. 이 가이드에서는 프로젝트 설정 [https://developers.google.com/maps/documentation/navigation/android-sdk/set-up-project?hl=ko]에 설명된 대로 Navigation SDK를 앱에 이미 통합했다고 가정합니다.
요약
탐색 프래그먼트 또는 탐색 뷰로 앱에 UI 요소를 추가합니다. 이 UI 요소는 활동에 대화형 지도와 턴바이턴 탐색 UI를 추가합니다.
위치 정보 액세스 권한을 요청합니다. 앱은 기기의 위치를 확인하기 위해 위치 정보 액세스 권한을 요청해야 합니다.
NavigationApi [https://developers.google.com/maps/documentation/navigation/android-sdk/reference/com/google/android/libraries/navigation/NavigationApi?hl=ko] 클래스를 사용하여 SDK를 초기화합니다.
Navigator [https://developers.google.com/maps/documentation/navigation/android-sdk/reference/com/google/android/libraries/navigation/Navigator?hl=ko] 클래스를 사용하여 목적지를 설정하고 세부 경로 안내를 제어합니다. 이 과정은 세 단계로 이루어집니다.
setDestination() [https://developers.google.com/maps/documentation/navigation/android-sdk/reference/com/google/android/libraries/navigation/Navigator?hl=ko#setDestination(com.google.android.libraries.navigation.Waypoint)]를 사용하여 목적지를 설정합니다.
startGuidance() [https://developers.google.com/maps/documentation/navigation/android-sdk/reference/com/google/android/libraries/navigation/Navigator?hl=ko#startGuidance()]로 내비게이션을 시작합니다.
getSimulator() [https://developers.google.com/maps/documentation/navigation/android-sdk/reference/com/google/android/libraries/navigation/Navigator?hl=ko#getSimulator()]을 사용하여 테스트, 디버깅, 앱 데모를 위해 경로를 따라 차량의 진행 상황을 시뮬레이션합니다.
앱을 빌드하고 실행합니다.
코드 보기
단일 대상 탐색 활동의 Java 코드를 표시하거나 숨깁니다.
앱에 UI 요소 추가
이 섹션에서는 세부 경로 안내를 표시하기 위한 대화형 지도와 UI를 추가하는 두 가지 방법을 다룹니다. 대부분의 경우 NavigationView과 직접 상호작용하는 대신 NavigationView [https://developers.google.com/maps/documentation/navigation/android-sdk/reference/com/google/android/libraries/navigation/NavigationView?hl=ko]의 래퍼인 SupportNavigationFragment [https://developers.google.com/maps/documentation/navigation/android-sdk/reference/com/google/android/libraries/navigation/SupportNavigationFragment?hl=ko]를 사용하는 것이 좋습니다. 자세한 내용은 탐색 지도 상호작용 권장사항 [https://developers.google.com/maps/documentation/navigation/android-sdk/nav-map-interactions-best-practices?hl=ko]을 참고하세요.
탐색 프래그먼트 사용
SupportNavigationFragment [https://developers.google.com/maps/documentation/navigation/android-sdk/reference/com/google/android/libraries/navigation/SupportNavigationFragment?hl=ko]은 대화형 지도와 세부 경로 안내를 비롯한 탐색의 시각적 출력을 표시하는 UI 구성요소입니다. 다음과 같이 XML 레이아웃 파일에서 프래그먼트를 선언할 수 있습니다.
<?xml version="1.0" encoding="utf-8"?>
<fragment xmlns:android="http://schemas.android.com/apk/res/android"
    android:name="com.google.android.libraries.navigation.SupportNavigationFragment"
    android:id="@+id/navigation_fragment"
    android:layout_width="match_parent"
    android:layout_height="match_parent"/>
또는 FragmentActivity.getSupportFragmentManager() [https://developer.android.com/reference/android/support/v4/app/FragmentActivity.html?hl=ko#getSupportFragmentManager()]를 사용하여 Android 문서 [https://developer.android.com/training/basics/fragments/creating.html?hl=ko]에 설명된 대로 프래그먼트를 프로그래매틱 방식으로 구성할 수 있습니다.
탐색 뷰 사용
프래그먼트 대신 탐색용 지도를 표시하는 UI 구성요소를 NavigationView [https://developers.google.com/maps/documentation/navigation/android-sdk/reference/com/google/android/libraries/navigation/NavigationView?hl=ko]으로 사용할 수도 있습니다.
주의: NavigationView [https://developers.google.com/maps/documentation/navigation/android-sdk/reference/com/google/android/libraries/navigation/NavigationView?hl=ko] 클래스 설명 상단의 안내, 특히 뷰를 포함하는 활동 또는 프래그먼트에서 수명 주기 메서드를 올바르게 전달하고 호출하라는 조언을 읽어보세요.
위치 정보 액세스 권한 요청
이 섹션에서는 상세한 위치 정보 액세스 권한을 요청하는 방법을 보여줍니다. 자세한 내용은 Android 권한 [https://developer.android.com/training/permissions/requesting.html?hl=ko] 가이드를 참고하세요.
Android 매니페스트에 권한을 <manifest> 요소의 하위 요소로 추가합니다.
<manifest xmlns:android="http://schemas.android.com/apk/res/android"
    package="com.example.navsdksingledestination">
    <uses-permission android:name="android.permission.ACCESS_FINE_LOCATION" />
</manifest>
앱에서 런타임 권한을 요청하여 사용자에게 위치 정보 액세스 권한을 부여하거나 거부할 수 있는 기회를 제공합니다. 다음 코드는 사용자가 상세한 위치 정보 액세스 권한을 부여했는지 확인합니다. 부여하지 않은 경우, 해당 권한을 요청합니다.
    if (ContextCompat.checkSelfPermission(this.getApplicationContext(),
            android.Manifest.permission.ACCESS_FINE_LOCATION)
                == PackageManager.PERMISSION_GRANTED) {
        mLocationPermissionGranted = true;
    } else {
        ActivityCompat.requestPermissions(this,
                new String[] { android.Manifest.permission.ACCESS_FINE_LOCATION },
                PERMISSIONS_REQUEST_ACCESS_FINE_LOCATION);
    }

    if (!mLocationPermissionGranted) {
        displayMessage("Error loading Navigation SDK: "
                + "The user has not granted location permission.");
        return;
    }
권한 요청의 결과를 처리하도록 onRequestPermissionsResult() 콜백을 재정의합니다.
    @Override
    public void onRequestPermissionsResult(int requestCode, @NonNull String permissions[],
                                           @NonNull int[] grantResults) {
        mLocationPermissionGranted = false;
        switch (requestCode) {
            case PERMISSIONS_REQUEST_ACCESS_FINE_LOCATION: {
                // If request is canceled, the result arrays are empty.
                if (grantResults.length > 0
                        && grantResults[0] == PackageManager.PERMISSION_GRANTED) {
                    mLocationPermissionGranted = true;
                }
            }
        }
    }
Navigation SDK 초기화
NavigationApi [https://developers.google.com/maps/documentation/navigation/android-sdk/reference/com/google/android/libraries/navigation/NavigationApi?hl=ko] 클래스는 앱이 Google 탐색을 사용할 수 있도록 승인하는 초기화 로직을 제공합니다. 이 섹션에서는 탐색기를 초기화하는 방법과 앱에서 사용 설정할 수 있는 기타 구성을 다룹니다.
Navigation SDK를 초기화하고 onNavigatorReady() 콜백을 재정의하여 탐색기가 준비되면 내비게이션을 시작합니다.
선택사항입니다. 사용자가 기기에서 앱을 닫으면 안내 알림과 백그라운드 서비스가 종료되도록 앱을 구성합니다. 이 선택은 비즈니스 모델에 따라 다릅니다. 앱이 닫혀도 회전 안내와 위치 업데이트를 계속 표시하는 기본 탐색기 동작을 사용하는 것이 좋습니다. 대신 최종 사용자가 앱을 닫을 때 탐색 및 위치 업데이트를 종료하려면 이 구성을 사용합니다.
선택사항입니다. 지원되는 국가에서 도로 제한을 사용 설정합니다. 번호판의 마지막 숫자를 설정합니다. 이 호출은 한 번만 하면 됩니다. 후속 경로 요청은 계속해서 이를 사용합니다. 이 호출은 지원되는 지역에서만 작동합니다. Navigation SDK 지원 국가 [https://developers.google.com/maps/documentation/navigation/android-sdk/coverage-nav-sdk?hl=ko]를 참고하세요.
    NavigationApi.getNavigator(this, new NavigationApi.NavigatorListener() {
                /**
                 * Sets up the navigation UI when the navigator is ready for use.
                 */
                @Override
                public void onNavigatorReady(Navigator navigator) {
                    displayMessage("Navigator ready.");
                    mNavigator = navigator;
                    mNavFragment = (NavigationFragment) getFragmentManager()
                            .findFragmentById(R.id.navigation_fragment);

                    // Optional. Disable the guidance notifications and shut down the app
                    // and background service when the user closes the app.
                    // mNavigator.setTaskRemovedBehavior(Navigator.TaskRemovedBehavior.QUIT_SERVICE)

                    // Optional. Set the last digit of the car's license plate to get
                    // route restrictions for supported countries.
                    // mNavigator.setLicensePlateRestrictionInfo(getLastDigit(), "BZ");

                    // Set the camera to follow the device location with 'TILTED' driving view.
                    mNavFragment.getCamera().followMyLocation(Camera.Perspective.TILTED);

                    // Set the travel mode (DRIVING, WALKING, CYCLING, TWO_WHEELER, or TAXI).
                    mRoutingOptions = new RoutingOptions();
                    mRoutingOptions.travelMode(RoutingOptions.TravelMode.DRIVING);

                    // Navigate to a place, specified by Place ID.
                    navigateToPlace(SYDNEY_OPERA_HOUSE, mRoutingOptions);
                }

                /**
                 * Handles errors from the Navigation SDK.
                 * @param errorCode The error code returned by the navigator.
                 */
                @Override
                public void onError(@NavigationApi.ErrorCode int errorCode) {
                    switch (errorCode) {
                        case NavigationApi.ErrorCode.NOT_AUTHORIZED:
                            displayMessage("Error loading Navigation SDK: Your API key is "
                                    + "invalid or not authorized to use the Navigation SDK.");
                            break;
                        case NavigationApi.ErrorCode.TERMS_NOT_ACCEPTED:
                            displayMessage("Error loading Navigation SDK: User did not accept "
                                    + "the Navigation Terms of Use.");
                            break;
                        case NavigationApi.ErrorCode.NETWORK_ERROR:
                            displayMessage("Error loading Navigation SDK: Network error.");
                            break;
                        case NavigationApi.ErrorCode.LOCATION_PERMISSION_MISSING:
                            displayMessage("Error loading Navigation SDK: Location permission "
                                    + "is missing.");
                            break;
                        default:
                            displayMessage("Error loading Navigation SDK: " + errorCode);
                    }
                }
            });
대상 설정
Navigator [https://developers.google.com/maps/documentation/navigation/android-sdk/reference/com/google/android/libraries/navigation/Navigator?hl=ko] 클래스는 탐색 여정을 구성하고 시작하고 중지하는 기능을 제공합니다.
이전 섹션에서 가져온 Navigator [https://developers.google.com/maps/documentation/navigation/android-sdk/reference/com/google/android/libraries/navigation/Navigator?hl=ko]를 사용하여 이 여정의 대상 Waypoint [https://developers.google.com/maps/documentation/navigation/android-sdk/reference/com/google/android/libraries/navigation/Waypoint?hl=ko]를 설정합니다. 경로를 계산한 후 SupportNavigationFragment [https://developers.google.com/maps/documentation/navigation/android-sdk/reference/com/google/android/libraries/navigation/SupportNavigationFragment?hl=ko]은 지도에 경로를 나타내는 다중선과 목적지에 마커를 표시합니다.
```none
    private void navigateToPlace(String placeId, RoutingOptions travelMode) {
        Waypoint destination;
        try {
            destination = Waypoint.builder().setPlaceIdString(placeId).build();
        } catch (Waypoint.UnsupportedPlaceIdException e) {
            displayMessage("Error starting navigation: Place ID is not supported.");
            return;
        }

        // Create a future to await the result of the asynchronous navigator task.
        ListenableResultFuture<Navigator.RouteStatus> pendingRoute =
                mNavigator.setDestination(destination, travelMode);

        // Define the action to perform when the SDK has determined the route.
        pendingRoute.setOnResultListener(
                new ListenableResultFuture.OnResultListener<Navigator.RouteStatus>() {
                    @Override
                    public void onResult(Navigator.RouteStatus code) {
                        switch (code) {
                            case OK:
                                // Hide the toolbar to maximize the navigation UI.
                                if (getActionBar() != null) {
                                    getActionBar().hide();
                                }

                                // Enable voice audio guidance (through the device speaker).
                                mNavigator.setAudioGuidance(
                                        Navigator.AudioGuidance.VOICE_ALERTS_AND_GUIDANCE);

                                // Simulate vehicle progress along the route for demo/debug builds.
                                if (BuildConfig.DEBUG) {
                                    mNavigator.getSimulator().simulateLocationsAlongExistingRoute(
                                            new SimulationOptions().speedMultiplier(5));
                                }

                                // Start turn-by-turn guidance along the current route.
                                mNavigator.startGuidance();
                                break;
                            // Handle error conditions returned by the navigator.
                            case NO_ROUTE_FOUND:
                                displayMessage("Error starting navigation: No route found.");
                                break;
                            case NETWORK_ERROR:
                                displayMessage("Error starting navigation: Network error.");
                                break;
                            case ROUTE_CANCELED:
                                displayMessage("Error starting navigation: Route canceled.");
                                break;
                            default:
                                displayMessage("Error starting navigation: "
                                        + String.valueOf(code));
                        }
                    }
                });
    }
```
앱 빌드 및 실행
컴퓨터에 Android 기기를 연결합니다. 하드웨어 기기에서 앱 실행 [https://developer.android.com/studio/run/device.html?hl=ko] 방법에 관한 Android 스튜디오 안내를 따르세요. 또는 Android Virtual Device (AVD) Manager [https://developer.android.com/studio/run/managing-avds.html?hl=ko]를 사용하여 가상 기기를 구성할 수 있습니다. 에뮬레이터를 선택할 때 Google API가 포함된 이미지를 선택해야 합니다.
Android 스튜디오에서 Run 메뉴 옵션 또는 재생 버튼 아이콘을 클릭합니다. 표시되는 메시지에 따라 기기를 선택합니다.
사용자 환경 개선을 위한 힌트
탐색을 사용하려면 사용자가 Google 탐색 서비스 약관에 동의해야 합니다. 이 수락은 한 번만 필요합니다. 기본적으로 SDK는 탐색기가 처음 호출될 때 수락을 요청합니다. 원하는 경우 TermsAndConditionsCheckOption [https://developers.google.com/maps/documentation/navigation/android-sdk/reference/com/google/android/libraries/navigation/TermsAndConditionsCheckOption?hl=ko]를 사용하여 앱의 UX 흐름 초기에(예: 가입 또는 로그인 중) 내비게이션 서비스 약관 대화상자를 트리거할 수 있습니다.
탐색 품질과 ETA 정확도를 크게 개선하려면 위도/경도 좌표 대신 장소 ID를 사용하여 경유지를 초기화하세요.
이 샘플은 시드니 오페라 하우스의 특정 장소 ID에서 대상 경유지를 파생합니다. 장소 ID 찾기 [https://developers.google.com/maps/documentation/places/web-service/place-id?hl=ko]를 사용하여 다른 특정 위치의 장소 ID를 가져올 수 있습니다.
도움이 되었나요?
의견 보내기