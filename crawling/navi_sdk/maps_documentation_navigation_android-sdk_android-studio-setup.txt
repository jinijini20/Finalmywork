Source URL: https://developers.google.com/maps/documentation/navigation/android-sdk/android-studio-setup?hl=ko

이 페이지는 Cloud Translation API [https://cloud.google.com/translate/?hl=ko]를 통해 번역되었습니다.
Switch to English
홈 [https://developers.google.com/?hl=ko]
제품 [https://developers.google.com/products?hl=ko]
Google Maps Platform [https://developers.google.com/maps?hl=ko]
문서 [https://developers.google.com/maps/documentation?hl=ko]
Android [https://developers.google.com/maps/android?hl=ko]
Navigation SDK for Android [https://developers.google.com/maps/documentation/navigation/android-sdk?hl=ko]
도움이 되었나요?
의견 보내기
Android 스튜디오 프로젝트 설정
bookmark_border
이 페이지의 내용
프로젝트에 Navigation SDK 추가 [https://developers.google.com/maps/documentation/navigation/android-sdk/android-studio-setup?hl=ko#add_the_to_your_project]
빌드 구성 [https://developers.google.com/maps/documentation/navigation/android-sdk/android-studio-setup?hl=ko#configure_the_build]
오프라인 속성 업데이트 [https://developers.google.com/maps/documentation/navigation/android-sdk/android-studio-setup?hl=ko#update_local_properties]
Gradle 빌드 스크립트 업데이트 [https://developers.google.com/maps/documentation/navigation/android-sdk/android-studio-setup?hl=ko#update_the_gradle_build_script]
앱에 API 키 추가 [https://developers.google.com/maps/documentation/navigation/android-sdk/android-studio-setup?hl=ko#add_the_api_key_to_your_app]
앱에 필수 저작자 표시 포함 [https://developers.google.com/maps/documentation/navigation/android-sdk/android-studio-setup?hl=ko#include_the_required_attributions_in_your_app]
Mobility 또는 Fleet Engine Deliveries 고객인 경우 [https://developers.google.com/maps/documentation/navigation/android-sdk/android-studio-setup?hl=ko#mobility_billing]
이 페이지에서는 개발 프로젝트에 Navigation SDK를 통합하는 방법을 설명합니다.
프로젝트에 Navigation SDK 추가
Navigation SDK는 Google Maven 저장소 [https://maven.google.com/web/index.html?q=navigation&hl=ko#com.google.android.libraries.navigation:navigation]를 통해 사용할 수 있습니다. Gradle build.gradle 또는 Maven pom.xml 구성을 사용하여 프로젝트에 SDK를 추가할 수 있습니다.
참고: 이 메서드는 이전 아티팩트 ID를 통해 Navigation SDK에 종속되는 일부 라이브러리와 호환되지 않습니다. 여기에는 드라이버 SDK v4.4 이하 버전이 포함됩니다.
Gradle 또는 Maven 구성에 다음 종속 항목을 추가하고 VERSION_NUMBER 자리표시자를 원하는 버전의 Navigation SDK for Android로 대체합니다.
--- 탭: Gradle [https://developers.google.com/maps/documentation/navigation/android-sdk/android-studio-setup?hl=ko#gradle] ---
모듈 수준 build.gradle에 다음을 추가합니다.
dependencies {
        ...
        implementation 'com.google.android.libraries.navigation:navigation:VERSION_NUMBER'
}

--- 탭: Maven [https://developers.google.com/maps/documentation/navigation/android-sdk/android-studio-setup?hl=ko#maven] ---
pom.xml에 다음을 추가합니다.
<dependencies>
  ...
  <dependency>
    <groupId>com.google.android.libraries.navigation</groupId>
    <artifactId>navigation</artifactId>
    <version>VERSION_NUMBER</version>
  </dependency>
</dependencies>
참고: 원래 비공개 Maven 저장소에서 업그레이드하는 모빌리티 서비스 고객의 경우 그룹 및 아티팩트 이름이 변경되었으며 com.google.cloud.artifactregistry.gradle-plugin 플러그인이 더 이상 필요하지 않습니다.
Maps SDK를 사용하는 종속 항목이 있는 경우 Maps SDK를 사용하는 선언된 각 종속 항목에서 종속 항목을 제외해야 합니다.
--- 탭: Gradle [https://developers.google.com/maps/documentation/navigation/android-sdk/android-studio-setup?hl=ko#gradle] ---
최상위 build.gradle에 다음을 추가합니다.
allprojects {
        ...
        // Required: you must exclude the Google Play service Maps SDK from
        // your transitive dependencies to make sure there won't be
        // multiple copies of Google Maps SDK in your binary, as the Navigation
        // SDK already bundles the Google Maps SDK.
        configurations {
            implementation {
                exclude group: 'com.google.android.gms', module: 'play-services-maps'
            }
        }
}

--- 탭: Maven [https://developers.google.com/maps/documentation/navigation/android-sdk/android-studio-setup?hl=ko#maven] ---
pom.xml에 다음을 추가합니다.
<dependencies>
  <dependency>
  <groupId>project.that.brings.in.maps</groupId>
  <artifactId>MapsConsumer</artifactId>
  <version>1.0</version>
    <exclusions>
      <!-- Navigation SDK already bundles Maps SDK. You must exclude it to prevent duplication-->
      <exclusion>  <!-- declare the exclusion here -->
        <groupId>com.google.android.gms</groupId>
        <artifactId>play-services-maps</artifactId>
      </exclusion>
    </exclusions>
  </dependency>
</dependencies>
빌드 구성
프로젝트를 만든 후 빌드와 Navigation SDK 사용이 성공하도록 설정을 구성할 수 있습니다.
오프라인 속성 업데이트
Gradle Scripts 폴더에서 local.properties 파일을 열고 android.useDeprecatedNdk=true를 추가합니다.
Gradle 빌드 스크립트 업데이트
build.gradle (Module:app) 파일을 열고 다음 가이드라인을 사용하여 Navigation SDK 요구사항을 충족하도록 설정을 업데이트하고 최적화 옵션 설정도 고려하세요.
Navigation SDK에 필요한 설정
minSdkVersion을 23 이상으로 설정합니다.
targetSdkVersion을 34 이상으로 설정합니다.
javaMaxHeapSize를 늘리는 dexOptions 설정을 추가합니다.
추가 라이브러리의 위치를 설정합니다.
Navigation SDK용 repositories 및 dependencies 추가
종속 항목의 버전 번호를 사용 가능한 최신 버전으로 바꿉니다.
빌드 시간을 줄이는 선택적 설정
R8/ProGuard를 사용하여 코드 축소 및 리소스 축소 [https://developer.android.com/studio/build/shrink-code.html?hl=ko]를 사용 설정하여 종속 항목에서 사용하지 않는 코드와 리소스를 삭제합니다. R8/ProGuard 단계 실행에 시간이 너무 오래 걸리는 경우 개발 작업을 위해 multidex [https://developer.android.com/studio/build/multidex?hl=ko]를 사용 설정하는 것이 좋습니다.
빌드에 포함된 언어 번역 수 줄이기: 개발 중에 한 언어에 대해 resConfigs를 설정합니다. 최종 빌드의 경우 실제로 사용하는 언어에 대해 resConfigs를 설정합니다. 기본적으로 Gradle에는 Navigation SDK에서 지원하는 모든 언어의 리소스 문자열이 포함됩니다.
Java8 지원을 위한 디슈가링 추가
Android Gradle 플러그인 4.0.0 이상을 사용하여 앱을 빌드하면 이 플러그인은 다양한 Java 8 언어 API를 사용할 수 있도록 지원을 확대합니다. 자세한 내용은 Java 8 desugaring 지원 [https://developer.android.com/studio/write/java8-support?hl=ko#library-desugaring]을 참고하세요. 컴파일 및 종속 항목 옵션은 아래의 빌드 스크립트 스니펫을 참고하세요.
Gradle 8.4, Android Gradle 플러그인 버전 8.3.0, Desugar 라이브러리 com.android.tools:desugar_jdk_libs_nio:2.0.3를 사용하는 것이 좋습니다. 이 설정은 Android용 Navigation SDK 버전 6.0.0 이상과 호환됩니다.
Desugar 라이브러리는 app 모듈과 Navigation SDK에 직접 종속되는 모든 모듈에 사용 설정해야 합니다.
다음은 애플리케이션의 Gradle 빌드 스크립트의 예입니다. 사용 중인 Navigation SDK 버전이 이 문서보다 약간 앞서거나 뒤처질 수 있으므로 업데이트된 종속 항목 세트는 샘플 앱 [https://developers.google.com/maps/documentation/navigation/android-sdk/try-demo?hl=ko]을 확인하세요.
apply plugin: 'com.android.application'

ext {
    navSdk = "__NAVSDK_VERSION__"
}

android {
    compileSdk 33
    buildToolsVersion='28.0.3'

    defaultConfig {
        applicationId "<your id>"
        // Navigation SDK supports SDK 23 and later.
        minSdkVersion 23
        targetSdkVersion 34
        versionCode 1
        versionName "1.0"
        // Set this to the languages you actually use, otherwise you'll include resource strings
        // for all languages supported by the Navigation SDK.
        resConfigs "en"
        multiDexEnabled true
    }

    dexOptions {
        // This increases the amount of memory available to the dexer. This is required to build
        // apps using the Navigation SDK.
        javaMaxHeapSize "4g"
    }
    buildTypes {
        // Run ProGuard. Note that the Navigation SDK includes its own ProGuard configuration.
        // The configuration is included transitively by depending on the Navigation SDK.
        // If the ProGuard step takes too long, consider enabling multidex for development work
        // instead.
        all {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        // Flag to enable support for the new language APIs
        coreLibraryDesugaringEnabled true
        // Sets Java compatibility to Java 8
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

repositories {
    // Navigation SDK for Android and other libraries are hosted on Google's Maven repository.
    google()
}

dependencies {
    // Include the Google Navigation SDK.
    // Note: remember to exclude Google Play service Maps SDK from your transitive
    // dependencies to avoid duplicate copies of the Google Maps SDK.
    api "com.google.android.libraries.navigation:navigation:${navSdk}"

    // Declare other dependencies for your app here.

    annotationProcessor "androidx.annotation:annotation:1.7.0"
    coreLibraryDesugaring 'com.android.tools:desugar_jdk_libs_nio:2.0.3'
}
앱에 API 키 추가
이 섹션에서는 앱이 더욱 안전하게 참조할 수 있도록 API 키를 저장하는 방법을 설명합니다. API 키는 버전 제어 시스템에 체크인하면 안 되며, 프로젝트의 루트 디렉터리에 있는 secrets.properties 파일에 저장하는 것이 좋습니다. secrets.properties 파일에 관한 자세한 내용은 Gradle 속성 파일 [https://developer.android.com/studio/build?hl=ko#properties-files]을 참고하세요.
이 작업을 간소화하려면 Android용 Secrets Gradle 플러그인 [https://github.com/google/secrets-gradle-plugin]을 사용하는 것이 좋습니다.
참고: 최신 시스템 요구사항 및 설치 안내는 GitHub의 Android용 Secrets Gradle 플러그인 [https://github.com/google/secrets-gradle-plugin] 문서를 참고하세요.
Google 지도 프로젝트에 Android용 Secrets Gradle 플러그인을 설치하려면 다음 단계를 따르세요.
Android 스튜디오에서 최상위 수준 build.gradle.kts 또는 build.gradle 파일을 열고 다음 코드를 buildscript 아래 dependencies 요소에 추가합니다.
--- 탭: Kotlin [https://developers.google.com/maps/documentation/navigation/android-sdk/android-studio-setup?hl=ko#kotlin-build.gradle.kts] ---
buildscript {
    dependencies {
        classpath("com.google.android.libraries.mapsplatform.secrets-gradle-plugin:secrets-gradle-plugin:2.0.1")
    }
}

--- 탭: Groovy [https://developers.google.com/maps/documentation/navigation/android-sdk/android-studio-setup?hl=ko#groovy-build.gradle] ---
buildscript {
    dependencies {
        classpath "com.google.android.libraries.mapsplatform.secrets-gradle-plugin:secrets-gradle-plugin:2.0.1"
    }
}
모듈 수준 build.gradle.kts 또는 build.gradle 파일을 열고 plugins 요소에 다음 코드를 추가합니다.
--- 탭: Kotlin [https://developers.google.com/maps/documentation/navigation/android-sdk/android-studio-setup?hl=ko#kotlin-build.gradle.kts] ---
plugins {
    // ...
    id("com.google.android.libraries.mapsplatform.secrets-gradle-plugin")
}

--- 탭: Groovy [https://developers.google.com/maps/documentation/navigation/android-sdk/android-studio-setup?hl=ko#groovy-build.gradle] ---
plugins {
    // ...
    id 'com.google.android.libraries.mapsplatform.secrets-gradle-plugin'
}
모듈 수준 build.gradle.kts 또는 build.gradle 파일에서 targetSdk 및 compileSdk가 34로 설정되어 있는지 확인합니다.
Gradle과 프로젝트를 동기화 [https://developer.android.com/studio/build?hl=ko#sync-files]합니다.
최상위 수준 디렉터리에서 secrets.properties 파일을 연 후 다음 코드를 추가합니다. YOUR_API_KEY를 직접 생성한 API 키로 변경합니다. secrets.properties가 버전 제어 시스템에 체크인되는 데서 제외되었으므로 키를 이 파일에 저장합니다.
참고: secrets.properties 파일이 존재하지 않으면 local.properties 파일과 동일한 폴더에 파일을 만듭니다.
MAPS_API_KEY=
YOUR_API_KEY
최상위 수준 디렉터리에서 secrets.properties 파일과 동일한 폴더에 local.defaults.properties 파일을 만든 후 다음 코드를 추가합니다.
참고: 아래에 표시된 대로 코드를 입력하세요. DEFAULT_API_KEY를 API 키로 바꾸지 마세요.
MAPS_API_KEY=DEFAULT_API_KEY
이 파일의 목적은 secrets.properties 파일이 없는 경우 빌드에 실패하지 않도록 API 키의 백업 위치를 제공하는 것입니다. 이는 버전 제어 시스템에서 secrets.properties가 빠진 앱을 복제하거나 API 키를 제공하는 secrets.properties 파일을 아직 로컬에서 생성하지 않은 경우 발생할 수 있습니다.
AndroidManifest.xml 파일에서 com.google.android.geo.API_KEY로 이동한 후 android:value attribute를 업데이트합니다. <meta-data> 태그가 존재하지 않으면 <application> 태그의 하위 요소로 태그를 만듭니다.
<meta-data
    android:name="com.google.android.geo.API_KEY"
    android:value="${MAPS_API_KEY}" />
참고: com.google.android.geo.API_KEY는 API 키의 권장되는 메타데이터 이름입니다. 이 이름의 키는 Android 플랫폼에서 Android용 Navigation SDK 등 여러 Google 지도 기반 API를 인증하는 데 사용할 수 있습니다. 이전 버전과의 호환성을 위해 API에서는 com.google.android.maps.v2.API_KEY 이름도 지원합니다. 이 기존 이름을 사용하면 Android 지도 API v2에 대한 인증만 가능합니다. 애플리케이션에서는 API 키 메타데이터 이름을 하나만 지정할 수 있습니다. 두 개가 모두 지정되면 API에서 예외가 발생합니다.
Android 스튜디오에서 모듈 수준 build.gradle.kts 또는 build.gradle 파일을 열고 secrets 속성을 수정합니다. secrets 속성이 없으면 추가합니다.
플러그인의 속성을 수정하여 propertiesFileName을 secrets.properties로 설정하고, defaultPropertiesFileName을 local.defaults.properties로 설정하고, 다른 속성을 설정합니다.
--- 탭: Kotlin [https://developers.google.com/maps/documentation/navigation/android-sdk/android-studio-setup?hl=ko#kotlin-build.gradle.kts] ---
secrets {
    // To add your Maps API key to this project:
    // 1. If the secrets.properties file does not exist, create it in the same folder as the local.properties file.
    // 2. Add this line, where YOUR_API_KEY is your API key:
    //        MAPS_API_KEY=YOUR_API_KEY
    propertiesFileName = "secrets.properties"

    // A properties file containing default secret values. This file can be
    // checked in version control.
    defaultPropertiesFileName = "local.defaults.properties"
}

--- 탭: Groovy [https://developers.google.com/maps/documentation/navigation/android-sdk/android-studio-setup?hl=ko#groovy-build.gradle] ---
secrets {
    // To add your Maps API key to this project:
    // 1. If the secrets.properties file does not exist, create it in the same folder as the local.properties file.
    // 2. Add this line, where YOUR_API_KEY is your API key:
    //        MAPS_API_KEY=YOUR_API_KEY
    propertiesFileName = "secrets.properties"

    // A properties file containing default secret values. This file can be
    // checked in version control.
    defaultPropertiesFileName = "local.defaults.properties"
}
앱에 필수 저작자 표시 포함
앱에서 Android용 Navigation SDK를 사용하는 경우 앱의 법적 고지 섹션에 저작자 표시 텍스트와 오픈소스 라이선스를 포함해야 합니다.
핵심 사항: 저작자 표시를 포함하려면 독립적인 메뉴 항목 또는 정보 메뉴의 항목으로 추가하세요.
필수 저작자 표시 텍스트와 오픈소스 라이선스는 Android용 Navigation SDK zip 파일에서 확인할 수 있습니다.
NOTICE.txt
LICENSES.txt
Mobility 또는 Fleet Engine Deliveries 고객인 경우
도움이 되었나요?
의견 보내기