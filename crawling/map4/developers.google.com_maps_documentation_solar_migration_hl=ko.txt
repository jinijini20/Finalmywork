Source URL: https://developers.google.com/maps/documentation/solar/migration?hl=ko
Title: Google Maps Platform에서 Solar API로 이전

의견 보내기

Google Maps Platform에서 Solar API로 이전

컬렉션을 사용해 정리하기

내 환경설정을 기준으로 콘텐츠를 저장하고 분류하세요.

유럽 경제 지역 (EEA) 개발자

청구서 수신 주소가 유럽 경제 지역에 있는 경우 2025년 7월 8일부터
Google Maps Platform EEA 서비스 약관 [https://cloud.google.com/terms/maps-platform/eea?hl=ko]이 서비스 이용에 적용됩니다. 자세히 알아보기 [https://developers.google.com/maps/comms/eea/faq?hl=ko]
또한 Solar API의 특정 콘텐츠가 더 이상 반환되지 않습니다.
자세히 알아보기 [https://developers.google.com/maps/comms/eea/solar?hl=ko]

Google Earth Engine Solar API에서 Google Maps Platform [https://developers.google.com/maps?hl=ko] Solar API로 이동하려면 다음 단계를 따르세요.

클라우드 프로젝트에서 Google Maps Platform Solar API를 사용 설정합니다.
새 키를 만들고 GMP Solar API로 제한합니다.
아래의 단계별 [https://developers.google.com/maps/documentation/solar/migration?hl=ko#step_by_step] 안내에 따라 코드를 업데이트합니다.

나란히 비교

|  | Solar API (신규) | Earth Engine Solar API (지원 중단됨) |
| --- | --- | --- |
| 출시 상태 | 출시됨 | 파일럿 (지원 중단됨) |
| 액세스 |
| 메커니즘 | Cloud 콘솔을 통해 Google Cloud 계정에서 태양광 API를 사용 설정하고 Google Maps Platform 섹션을 통해 API를 관리 | Cloud 콘솔에서 Earth Engine Solar API를 사용 설정하여 Google Cloud 계정 |
| 누가 | 공개 | 액세스 제어 |
| 수준 | 자가 프로비저닝 | 클라우드 프로젝트 수동 액세스 |
| 인증 | API 키 및 OAuth | API 키 |
| 가격 책정 |
| 전략 | 사용한 만큼만 지불 | 100% 할인 |
| 등급 | 볼륨에 따라 가격이 낮아지는 1, 000개당 가격 | – |
| 엔드포인트 | 엔드포인트별로 다른 가격 | – |
| Cloud |
| 모니터링 | 'Google Maps Platform'의 Cloud Monitoring | 'API 및 서비스' 아래의 Cloud Monitoring |
| 할당량 | QPM (분당 쿼리 수) 및 QPH (시간당 쿼리 수) | 연간 |
| 로깅 | Cloud Logging (선택사항) | Cloud Logging (선택사항) |
| 결제 | Cloud Billing 계정 | - |
| 지원 | SLO/SLA가 적용되는 Google Maps Platform 전체 지원 | 이메일로 제한됨 |
| API |
| 호스트 이름 | https://solar.googleapis.com/v1/ (REST) | https://earthenginesolar.googleapis.com/v1/ (REST) |
| 메서드 | buildingInsights:findClosest dataLayers:get | buildings:findClosest solar.get |
| 응답 | 파일럿과 비교하여 변경사항 없음 | – |
| solarInfo | 반경 100m 이하 | 반경 100m 이하 |
| 적용 범위 |
| 지역 | 전역 | 전역 |
| 데이터 품질 | HIGH/MEDIUM | HIGH/MEDIUM |
| 건물 유형 | 주소에 매핑되고 Solar API 이미지 범위 내에 있는 건물 | 주소에 매핑되고 Solar API 이미지 범위 내에 있는 건물 |
| 서비스 약관 |
| 서비스 약관 | Google Maps Platform 약관 | Google Earth Engine 약관 |

단계별 안내

Google Cloud 프로젝트 설정

자세한 내용은 Google Cloud 프로젝트 설정 [https://developers.google.com/maps/documentation/solar/cloud-setup?hl=ko]을 참고하세요.
주의: 'Google Cloud 프로젝트 설정'의 'API 사용 설정' 부분에서 중지하세요.
특정 역할 [https://cloud.google.com/iam/docs/understanding-roles?hl=ko]만 Cloud 프로젝트를 만들 수 있습니다. 프로젝트를 만들 수 없는 경우 조직의 관리자에게 문의하세요.

기존 Cloud 프로젝트를 사용할 수도 있습니다. 자세한 내용은 Google Maps Platform 시작하기 [https://developers.google.com/maps/get-started?hl=ko]를 참고하세요.

결제 계정 설정

결제 계정 관리 방법 [https://cloud.google.com/billing/docs/how-to/manage-billing-account?hl=ko]을 참고하세요.

기존 결제 계정으로 기존 클라우드 프로젝트를 사용할 수 있습니다.

API 키 가져오기 또는 OAuth 토큰 사용

Google Cloud 프로젝트를 설정한 후 API 키 사용 [https://developers.google.com/maps/documentation/solar/get-api-key?hl=ko]에 설명된 대로 Solar API를 사용하려면 API 키를 만들고 보안 조치를 해야 합니다. 또는 OAuth 사용 [https://developers.google.com/maps/documentation/solar/oauth-token?hl=ko]에 설명된 대로 OAuth 토큰을 만들 수 있습니다.

Solar API 사용

새 엔드포인트(https://solar.googleapis.com)에 GET 요청을 합니다.
일부 API 메서드 이름이 변경되었습니다.

buildings:findClosest → buildingInsights:findClosest
solarinfo:get → dataLayers:get

빠른 체험: 이전 단계에서 저장한 API 키를 사용하여 브라우저에서 URL을 로드하기 전에 아래 예시 쿼리에서 YOUR_API_KEY을 바꿉니다.

https://solar.googleapis.com/v1/dataLayers:get?location.latitude=37.2746464&location.longitude=-121.7530949&radius_meters=10&key=YOUR_API_KEY

원래 미리보기 출시의 응답

2023년 5월 9일의 원래 미리보기 출시에서 대답의 URL은 다음과 같은 형식입니다.

https://earthengine.googleapis.com/v1alpha/projects/sunroof-api/thumbnails/THUMBNAIL_ID:getPixels

다음 스니펫은 응답의 예입니다.

"imageryDate": {
"year": 2015,
"month": 8,
"day": 8
return url.toString();
Python# Functions to examine a response URL and to append the API key to the
# URL if it is in the new format.

def add_api_key_to_url(base_url: str, api_key: str) -> str:
'''Formats URL that currently lacks an API key to use the one provided.'''
return base_url + "&key=" +api_key;

def prepare_geo_tiff_url(base_url: str, api_key: str) -> str:
'''Prepares URL from GetDataLayers depending on API being called.
If the geoTIFF url from GetDataLayers is for the solar API GetGeoTiff
endpoint, append the API key. Otherwise return the URL as is.
'''
if re.search("solar.googleapis.com", geo_tiff_url):
return add_api_key_to_url(geo_tiff_url, api_key)
return geo_tiff_url
자바/** Adds API key to a URL. */
private String addApiKeyToUrl(String geoTiffUrl, String apiKey) {
return geoTiffUrl + "&key=" + apiKey;
Pattern pattern = Pattern.compile("solar.googleapis.com");
Matcher matcher = pattern.matcher(geoTiffUrl);
if (matcher.find()) {
return addApiKeyToUrl(geoTiffUrl, apiKey);