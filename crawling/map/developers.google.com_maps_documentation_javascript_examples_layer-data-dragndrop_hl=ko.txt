Source URL: https://developers.google.com/maps/documentation/javascript/examples/layer-data-dragndrop?hl=ko
Title: Data Layer: Drag and Drop GeoJSON

Send feedback

Data Layer: Drag and Drop GeoJSON

Stay organized with collections

Save and categorize content based on your preferences.

This example allows you to drag and drop GeoJSON onto the map. Download
a
sample GeoJSON file [https://developers.google.com/static/maps/documentation/javascript/examples/json/states.json] to test dragging from the device.

For more information about how to work with the map data layer, see the
google.maps.Data class [https://developers.google.com/maps/documentation/javascript/reference#Data].

TypeScript
geometry: google.maps.LatLng | google.maps.Data.Geometry,
callback: any,
thisArg: google.maps.LatLngBounds
) {
if (geometry instanceof google.maps.LatLng) {
callback.call(thisArg, geometry);
"dragstart",
(e: Event) => {
"text/plain",
JSON.stringify(files[Number((e.target as HTMLElement).dataset.value)])
mapContainer.addEventListener("dragover", addClassToDropTarget, false);
mapContainer.addEventListener("drop", handleDrop, false);
mapContainer.addEventListener("dragleave", removeClassFromDropTarget, false);
e.preventDefault();
e.stopPropagation();
removeClassFromDropTarget(e);

initEvents();

declare global {
interface Window {
"dragstart",
(e) => {
"text/plain",
JSON.stringify(files[Number(e.target.dataset.value)]),
mapContainer.addEventListener("dragover", addClassToDropTarget, false);
mapContainer.addEventListener("drop", handleDrop, false);
mapContainer.addEventListener("dragleave", removeClassFromDropTarget, false);
e.preventDefault();
e.stopPropagation();
removeClassFromDropTarget(e);

initEvents();

html {
body {
<html>
<head>
<title>Data Layer: Drag and Drop GeoJSON</title>

<link
href="https://unpkg.com/material-components-web@6.0.0/dist/material-components-web.css"
rel="stylesheet"
/>
<link
rel="stylesheet"
href="https://fonts.googleapis.com/icon?family=Material+Icons"
/>

<link rel="stylesheet" type="text/css" href="./style.css" />
<script type="module" src="./index.js"></script>
</head>
<body>
<div id="container">
<div id="map"></div>
<div id="sidebar" class="mdc-typography">
<div class="file" draggable="true" data-value="0">
<span class="material-icons">text_snippet</span>
<div class="filename">polygons.geojson</div>
</div>
<div class="file" draggable="true" data-value="1">
<span class="material-icons">text_snippet</span>
<div class="filename">points.geojson</div>
</div>
<div class="file" draggable="true" data-value="2">
<span class="material-icons">text_snippet</span>
<div class="filename">polyline.geojson</div>
</div>
</div>
</div>

<!--
The `defer` attribute causes the script to execute after the full HTML
document has been parsed. For non-blocking uses, avoiding race conditions,
and consistent behavior across browsers, consider loading using Promises. See
https://developers.google.com/maps/documentation/javascript/load-maps-js-api
for more information.
-->
<script
src="https://maps.googleapis.com/maps/api/js?key=AIzaSyB41DRUbKWJHPxaFjMAwdrzWzbVKartNGg&callback=initialize&v=weekly"
defer
></script>
</body>
</html>index.html [https://github.com/googlemaps/js-samples/blob/2683f7366fb27829401945d2a7e27d77ed2df8e5/dist/samples/layer-data-dragndrop/docs/index.html#L8-L55]

Try Sample

JSFiddle.net [https://jsfiddle.net/gh/get/library/pure/googlemaps/js-samples/tree/master/dist/samples/layer-data-dragndrop/jsfiddle]

Google Cloud Shell [https://ssh.cloud.google.com/cloudshell/editor?cloudshell_git_repo=https%3A%2F%2Fgithub.com%2Fgooglemaps%2Fjs-samples&cloudshell_git_branch=sample-layer-data-dragndrop&cloudshell_tutorial=cloud_shell_instructions.md&cloudshell_workspace=.]

Clone Sample

Git and Node.js are required to run this sample locally. Follow these instructions [https://docs.npmjs.com/downloading-and-installing-node-js-and-npm] to install Node.js and NPM. The following commands clone, install dependencies and start the sample application.

git clone -b sample-layer-data-dragndrop https://github.com/googlemaps/js-samples.git
cd js-samples
npm i
npm start

Other samples can be tried by switching to any branch beginning with sample-SAMPLE_NAME.

git checkout sample-SAMPLE_NAME
npm i
npm start

Send feedback