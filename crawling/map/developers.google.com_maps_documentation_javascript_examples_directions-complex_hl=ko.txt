Source URL: https://developers.google.com/maps/documentation/javascript/examples/directions-complex?hl=ko
Title: Directions Service (Complex)

Send feedback

Directions Service (Complex)

Stay organized with collections

Save and categorize content based on your preferences.

This example demonstrates the use of the DirectionsService object
to fetch directions between landmarks in New York City. Markers are placed at
each waypoint along the route. Click on a marker to display the directions
associated with that waypoint.

Read the
documentation [https://developers.google.com/maps/documentation/javascript/directions#InspectingResults].

TypeScript
function initMap(): void {

directionsRenderer,
directionsService,
markerArray,
stepDisplay,
map

directionsRenderer,
directionsService,
markerArray,
stepDisplay,
map
(document.getElementById("end") as HTMLElement).addEventListener(
"change",
onChangeHandler
directionsRenderer: google.maps.DirectionsRenderer,
directionsService: google.maps.DirectionsService,
markerArray: google.maps.Marker[],
stepDisplay: google.maps.InfoWindow,
map: google.maps.Map
) {
.route({
origin: (document.getElementById("start") as HTMLInputElement).value,
destination: (document.getElementById("end") as HTMLInputElement).value,
travelMode: google.maps.TravelMode.WALKING,
directionsRenderer.setDirections(result);
showSteps(result, markerArray, stepDisplay, map);
directionResult: google.maps.DirectionsResult,
markerArray: google.maps.Marker[],
stepDisplay: google.maps.InfoWindow,
map: google.maps.Map
) {

marker.setMap(map);
marker.setPosition(myRoute.steps[i].start_location);
attachInstructionText(
stepDisplay,
marker,
myRoute.steps[i].instructions,
map
stepDisplay: google.maps.InfoWindow,
marker: google.maps.Marker,
text: string,
map: google.maps.Map
) {
google.maps.event.addListener(marker, "click", () => {
stepDisplay.open(map, marker);
function initMap() {
directionsRenderer,
directionsService,
markerArray,
stepDisplay,
map,

directionsRenderer,
directionsService,
markerArray,
stepDisplay,
map,
directionsRenderer,
directionsService,
markerArray,
stepDisplay,
map,
) {
.route({
origin: document.getElementById("start").value,
destination: document.getElementById("end").value,
travelMode: google.maps.TravelMode.WALKING,
directionsRenderer.setDirections(result);
showSteps(result, markerArray, stepDisplay, map);

marker.setMap(map);
marker.setPosition(myRoute.steps[i].start_location);
attachInstructionText(
stepDisplay,
marker,
myRoute.steps[i].instructions,
map,
stepDisplay.open(map, marker);
/*
* Always set the map height explicitly to define the size of the div element
* that contains the map.
*/
body {
<html>
<head>
<title>Directions Service (Complex)</title>

<link rel="stylesheet" type="text/css" href="./style.css" />
<script type="module" src="./index.js"></script>
</head>
<body>
<div id="floating-panel">
<b>Start: </b>
<select id="start">
<option value="penn station, new york, ny">Penn Station</option>
<option value="grand central station, new york, ny">
Grand Central Station
</option>
<option value="625 8th Avenue, New York, NY, 10018">
Port Authority Bus Terminal
</option>
<option value="staten island ferry terminal, new york, ny">
Staten Island Ferry Terminal
</option>
<option value="101 E 125th Street, New York, NY">
Harlem - 125th St Station
</option>
</select>
<b>End: </b>
<select id="end">
<option value="260 Broadway New York NY 10007">City Hall</option>
<option value="W 49th St & 5th Ave, New York, NY 10020">
Rockefeller Center
</option>
<option value="moma, New York, NY">MOMA</option>
<option value="350 5th Ave, New York, NY, 10118">
Empire State Building
</option>
<option value="253 West 125th Street, New York, NY">
Apollo Theater
</option>
<option value="1 Wall St, New York, NY">Wall St</option>
</select>
</div>
<div id="map"></div>
&nbsp;
<div id="warnings-panel"></div>

<!--
The `defer` attribute causes the script to execute after the full HTML
document has been parsed. For non-blocking uses, avoiding race conditions,
and consistent behavior across browsers, consider loading using Promises. See
https://developers.google.com/maps/documentation/javascript/load-maps-js-api
for more information.
-->
<script
src="https://maps.googleapis.com/maps/api/js?key=AIzaSyB41DRUbKWJHPxaFjMAwdrzWzbVKartNGg&callback=initMap&v=weekly"
defer
></script>
</body>
</html>index.html [https://github.com/googlemaps/js-samples/blob/2683f7366fb27829401945d2a7e27d77ed2df8e5/dist/samples/directions-complex/docs/index.html#L8-L65]

Try Sample

JSFiddle.net [https://jsfiddle.net/gh/get/library/pure/googlemaps/js-samples/tree/master/dist/samples/directions-complex/jsfiddle]

Google Cloud Shell [https://ssh.cloud.google.com/cloudshell/editor?cloudshell_git_repo=https%3A%2F%2Fgithub.com%2Fgooglemaps%2Fjs-samples&cloudshell_git_branch=sample-directions-complex&cloudshell_tutorial=cloud_shell_instructions.md&cloudshell_workspace=.]

Clone Sample

Git and Node.js are required to run this sample locally. Follow these instructions [https://docs.npmjs.com/downloading-and-installing-node-js-and-npm] to install Node.js and NPM. The following commands clone, install dependencies and start the sample application.

git clone -b sample-directions-complex https://github.com/googlemaps/js-samples.git
cd js-samples
npm i
npm start

Other samples can be tried by switching to any branch beginning with sample-SAMPLE_NAME.

git checkout sample-SAMPLE_NAME
npm i
npm start

Send feedback