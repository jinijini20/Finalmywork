Source URL: https://developers.google.com/maps/documentation/javascript/examples/advanced-markers-animation?hl=ko
Title: Animate a marker using CSS

Send feedback

Animate a marker using CSS

Stay organized with collections

Save and categorize content based on your preferences.

This example creates the traditional "bounce-drop" animation using CSS and
advanced markers. In the IntersectionObserver, it adds the
drop CSS style. The IntersectionObserversees when each marker enters the
viewport, and adds the style. Then, the animationend event listener that the
createMarker() function added to each marker removes the style.

Read the
documentation [https://developers.google.com/maps/documentation/javascript/advanced-markers/html-markers].

TypeScript
/**
* Returns a random lat lng position within the map bounds.
* @param {!google.maps.Map} map
* @return {!google.maps.LatLngLiteral}
*/
function getRandomPosition(map) {
intersectionObserver.unobserve(entry.target);
const { AdvancedMarkerElement, PinElement } = await google.maps.importLibrary("marker") as google.maps.MarkerLibrary;

controlUI.innerText = "Reset the example";
controlUI.addEventListener("click", () => {
map.controls[google.maps.ControlPosition.TOP_CENTER].push(controlDiv);
content.addEventListener('animationend', (event) => {
content.classList.remove('drop');
content.style.opacity = '1';
intersectionObserver.observe(content);
mapContainer!.appendChild(mapDiv);
initMap();
/**
* Returns a random lat lng position within the map bounds.
* @param {!google.maps.Map} map
* @return {!google.maps.LatLngLiteral}
*/
function getRandomPosition(map) {
intersectionObserver.unobserve(entry.target);
const { AdvancedMarkerElement, PinElement } = await google.maps.importLibrary("marker");
controlUI.innerText = "Reset the example";
controlUI.addEventListener("click", () => {
map.controls[google.maps.ControlPosition.TOP_CENTER].push(controlDiv);
content.addEventListener('animationend', (event) => {
content.classList.remove('drop');
content.style.opacity = '1';
intersectionObserver.observe(content);
mapContainer.appendChild(mapDiv);
initMap();
/*
* Always set the map height explicitly to define the size of the div element
* that contains the map.
*/
body {
body {
<html>
<head>
<title>Advanced Markers CSS Animation</title>

<link rel="stylesheet" type="text/css" href="./style.css" />
<script type="module" src="./index.js"></script>
</head>
<body>
<div id="mapContainer">
<div id="map" style="height: 100%"></div>
</div>

<!-- prettier-ignore -->
<script>(g=>{var h,a,k,p="The Google Maps JavaScript API",c="google",l="importLibrary",q="__ib__",m=document,b=window;b=b[c]||(b[c]={});var d=b.maps||(b.maps={}),r=new Set,e=new URLSearchParams,u=()=>h||(h=new Promise(async(f,n)=>{await (a=m.createElement("script"));e.set("libraries",[...r]+"");for(k in g)e.set(k.replace(/[A-Z]/g,t=>"_"+t[0].toLowerCase()),g[k]);e.set("callback",c+".maps."+q);a.src=`https://maps.${c}apis.com/maps/api/js?`+e;d[q]=f;a.onerror=()=>h=n(Error(p+" could not load."));a.nonce=m.querySelector("script[nonce]")?.nonce||"";m.head.append(a)}));d[l]?console.warn(p+" only loads once. Ignoring:",g):d[l]=(f,...n)=>r.add(f)&&u().then(()=>d[l](f,...n))})
({key: "AIzaSyA6myHzS10YXdcazAFalmXvDkrYCp5cLc8", v: "weekly"});</script>
</body>
</html>index.html [https://github.com/googlemaps-samples/js-api-samples/blob/aa0b5b60136edb03c5eac5627cebe9ef42868db4/dist/samples/advanced-markers-animation/docs/index.html#L8-L24]

Try Sample

JSFiddle.net [https://jsfiddle.net/gh/get/library/pure/googlemaps-samples/js-api-samples/tree/main/dist/samples/advanced-markers-animation/jsfiddle]

Clone Sample

Git and Node.js are required to run this sample locally. Follow these instructions [https://docs.npmjs.com/downloading-and-installing-node-js-and-npm] to install Node.js and NPM. The following commands clone, install dependencies and start the sample application.

git clone https://github.com/googlemaps-samples/js-api-samples.git
cd samples/advanced-markers-animation
npm i
npm start

Send feedback