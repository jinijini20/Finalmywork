Source URL: https://developers.google.com/maps/documentation/javascript/examples/overlay-popup?hl=ko
Title: Custom Popups

Send feedback

Custom Popups

Stay organized with collections

Save and categorize content based on your preferences.

This example displays a customized popup on the map. Alternatively, use a
Marker [https://developers.google.com/maps/documentation/javascript/examples/marker-simple] or
Info
Window [https://developers.google.com/maps/documentation/javascript/examples/infowindow-simple] to display the default popups.

Read the documentation [https://developers.google.com/maps/documentation/javascript/customoverlays].

TypeScript
this.position = position;

content.classList.add("popup-bubble");

bubbleAnchor.appendChild(content);

this.containerDiv.classList.add("popup-container");
this.containerDiv.appendChild(bubbleAnchor);

Popup.preventMapHitsAndGesturesFrom(this.containerDiv);
)!;

Math.abs(divPosition.x) < 4000 && Math.abs(divPosition.y) < 4000
? "block"
: "none";

if (display === "block") {
this.containerDiv.style.left = divPosition.x + "px";
this.containerDiv.style.top = divPosition.y + "px";
new google.maps.LatLng(-33.866, 151.196),
popup.setMap(map);
containerDiv;
constructor(position, content) {
super();
this.position = position;
content.classList.add("popup-bubble");

bubbleAnchor.appendChild(content);
this.containerDiv.classList.add("popup-container");
this.containerDiv.appendChild(bubbleAnchor);
Popup.preventMapHitsAndGesturesFrom(this.containerDiv);
Math.abs(divPosition.x) < 4000 && Math.abs(divPosition.y) < 4000
? "block"
: "none";

if (display === "block") {
this.containerDiv.style.left = divPosition.x + "px";
this.containerDiv.style.top = divPosition.y + "px";
new google.maps.LatLng(-33.866, 151.196),
popup.setMap(map);
/*
* Always set the map height explicitly to define the size of the div element
* that contains the map.
*/
body {
<html>
<head>
<title>Custom Popups</title>

<link rel="stylesheet" type="text/css" href="./style.css" />
<script type="module" src="./index.js"></script>
</head>
<body>
<div id="map"></div>
<div id="content">Hello world!</div>

<!--
The `defer` attribute causes the script to execute after the full HTML
document has been parsed. For non-blocking uses, avoiding race conditions,
and consistent behavior across browsers, consider loading using Promises. See
https://developers.google.com/maps/documentation/javascript/load-maps-js-api
for more information.
-->
<script
src="https://maps.googleapis.com/maps/api/js?key=AIzaSyB41DRUbKWJHPxaFjMAwdrzWzbVKartNGg&callback=initMap&v=weekly"
defer
></script>
</body>
</html>index.html [https://github.com/googlemaps/js-samples/blob/2683f7366fb27829401945d2a7e27d77ed2df8e5/dist/samples/overlay-popup/docs/index.html#L8-L31]

Try Sample

JSFiddle.net [https://jsfiddle.net/gh/get/library/pure/googlemaps/js-samples/tree/master/dist/samples/overlay-popup/jsfiddle]

Google Cloud Shell [https://ssh.cloud.google.com/cloudshell/editor?cloudshell_git_repo=https%3A%2F%2Fgithub.com%2Fgooglemaps%2Fjs-samples&cloudshell_git_branch=sample-overlay-popup&cloudshell_tutorial=cloud_shell_instructions.md&cloudshell_workspace=.]

Clone Sample

Git and Node.js are required to run this sample locally. Follow these instructions [https://docs.npmjs.com/downloading-and-installing-node-js-and-npm] to install Node.js and NPM. The following commands clone, install dependencies and start the sample application.

git clone -b sample-overlay-popup https://github.com/googlemaps/js-samples.git
cd js-samples
npm i
npm start

Other samples can be tried by switching to any branch beginning with sample-SAMPLE_NAME.

git checkout sample-SAMPLE_NAME
npm i
npm start

Send feedback