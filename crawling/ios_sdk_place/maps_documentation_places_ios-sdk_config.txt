Source URL: https://developers.google.com/maps/documentation/places/ios-sdk/config?hl=ko

이 페이지는 Cloud Translation API를 통해 번역되었습니다.
Switch to English
홈
제품
Google Maps Platform
문서
iOS
Places SDK for iOS
도움이 되었나요?
의견 보내기
Xcode 프로젝트 설정
bookmark_border
출시 노트
이 페이지의 내용
1단계: 필수 소프트웨어 설치하기
2단계: Xcode 프로젝트 생성 및 iOS용 Places SDK 설치
3단계: 앱에 API 키 추가
4단계 (선택사항): Apple 개인 정보 보호 매니페스트 파일 검사
다음 단계
결제를 사용 설정하고 API 키를 만든 후 앱 개발에 사용할 Xcode 프로젝트를 설정할 수 있습니다.
각 출시마다 출시 노트가 제공됩니다.
1단계: 필수 소프트웨어 설치하기
iOS용 Places SDK를 사용하여 프로젝트를 빌드하려면 다음이 필요합니다.
Xcode 버전 16.0 이상
2단계: Xcode 프로젝트 생성 및 iOS용 Places SDK 설치
--- 탭: Swift Package Manager ---
iOS용 Places SDK는 
    Swift Package Manager를 통해 설치할 수 있습니다. SDK를 추가하려면 기존 iOS용 Places SDK 종속 항목을 삭제해야 합니다.

  중요: 이 안내에서는 Xcode 15 이상을 사용하는 것으로 가정하지만 이전 버전의 Xcode에서도 유사해야 합니다.


  SDK를 기존 또는 새 프로젝트에 추가하려면 다음 단계를 따르세요.

  
    
      Xcode project 또는 workspace를 열고 File > Add Package Dependencies로 이동합니다.
    
    
      https://github.com/googlemaps/ios-places-sdk를 URL로 입력하고 Enter 키를 눌러 패키지를 가져온 다음 '패키지 추가'를 클릭합니다.
    
    
      특정 version를 설치하려면 종속 항목 규칙 필드를 버전 기반 옵션 중 하나로 설정합니다. 새 프로젝트의 경우 최신 버전을 지정하고 '정확한 버전' 옵션을 사용하는 것이 좋습니다. 완료되면 '패키지 추가'를 클릭합니다.
    
    
    Choose Package Products 창에서 GooglePlaces, GooglePlacesSwift 또는 둘 다 지정된 기본 대상에 추가되는지 확인합니다. 완료되면 패키지 추가를 클릭합니다.

      지원 중단된 GitHub URL에서 Google Places Swift를 업데이트하는 경우
        
        중요: 버전 0.3.0부터 Google Places Swift에 액세스하는 GitHub URL이 변경되었습니다. 이전 URL(https://github.com/googlemaps/ios-places-swift-sdk)을 통해 액세스한 GooglePlacesSwift 버전을 업데이트하는 경우 Xcode의 패키지 종속 항목 섹션에서 삭제하세요.
        
      

  
    설치를 확인하려면 타겟의 일반 창으로 이동합니다. 프레임워크, 라이브러리, 삽입된 콘텐츠에 설치된 패키지가 표시됩니다. 프로젝트 탐색기의 패키지 종속 항목 섹션을 확인하여 패키지와 버전을 확인할 수도 있습니다.
    
  




기존 프로젝트의 package를 업데이트하려면 다음 단계를 따르세요.

  
    
    
    
    Xcode에서 'File > Packages > Update To Latest Package Versions'로 이동합니다.

    지원 중단된 GitHub URL에서 Google Places Swift를 업데이트하는 경우
      
      중요: 버전 0.3.0부터 Google Places Swift에 액세스하는 GitHub URL이 변경되었습니다. 이전 URL(https://github.com/googlemaps/ios-places-swift-sdk)을 통해 액세스한 GooglePlacesSwift 버전을 업데이트하는 경우 Xcode의 패키지 종속 항목 섹션에서 삭제하세요.
      
    
      
    
    
    
      설치를 확인하려면 프로젝트 탐색기의 패키지 종속 항목 섹션으로 이동하여 패키지와 버전을 확인합니다.
    
    
  
    중요: 아티팩트를 해결할 수 없거나 오류가 발생하는 경우가 있습니다. 
    이 경우 '파일 > 패키지 > 패키지 캐시 재설정'을 선택하세요.
  


    
    
      수동으로 설치된 기존 iOS용 Places SDK를 삭제하려면 다음 단계를 따르세요.
    
      
        
          Xcode 프로젝트 구성 설정에서 프레임워크, 라이브러리, 삽입된 콘텐츠를 찾습니다. 빼기 기호(-)를 사용하여 다음 프레임워크를 삭제합니다.
          
            GooglePlaces.xcframework
            GooglePlacesSwift.xcframework
          
        
        
          Xcode 프로젝트의 최상위 디렉터리에서 GooglePlaces 번들을 삭제합니다.

--- 탭: 수동 설치 ---
이 가이드에서는 iOS용 Places SDK 및 iOS용 Places Swift SDK가 포함된 XCFrameworks를 프로젝트에 수동으로 추가하고 Xcode에서 빌드 설정을 구성하는 방법을 보여줍니다. XCFramework는 Apple Silicon을 사용하는 머신을 비롯한 여러 플랫폼에서 사용할 수 있는 바이너리 패키지입니다. iOS용 Places SDK, iOS용 Places Swift SDK 또는 둘 다 추가할 수 있습니다.
    
      다음 SDK 바이너리 및 리소스 파일을 다운로드합니다.
        
          GooglePlaces
          GooglePlacesResources
        
      
      iOS용 Places Swift SDK를 설치하는 경우 다음 파일을 설치하세요.
        
          GooglePlacesSwift
          GooglePlacesSwiftResources
        
      
      파일을 추출하여 XCFramework 및 리소스에 액세스합니다.
      Xcode를 실행하고 기존 프로젝트를 열거나 새 프로젝트를 만듭니다. iOS용 앱을 처음 개발하는 경우 새 프로젝트를 만들고 iOS 앱 템플릿을 선택합니다.
      프로젝트의 이전 릴리스에서 모든 Maps 번들을 삭제합니다.
      

        
          일반 탭을 엽니다. 다음 XCFramework를 프레임워크, 라이브러리, 삽입된 콘텐츠 아래의 프로젝트로 드래그합니다. 삽입 안 함을 선택해야 합니다.
          
            GooglePlaces.xcframework
          

          Places Swift SDK를 설치하는 경우 다음 XCFramework를 Frameworks, Libraries, and Embedded Content 아래의 프로젝트로 드래그합니다. 삽입 안 함을 선택해야 합니다.
          
            GooglePlacesSwift.xcframework
          
        
        
          다운로드한 GooglePlacesResources에서 GooglePlaces.bundle를 Xcode 프로젝트의 최상위 디렉터리로 복사합니다. 메시지가 표시되면 
          Copy items into destination group's folder를 선택해야 합니다.
          
          Places Swift SDK를 설치하는 경우 다운로드한 GooglePlacesSwiftResources에서 GooglePlacesSwift.bundle를 Xcode 프로젝트의 최상위 디렉터리에 복사합니다. 메시지가 표시되면 Copy items into destination group's folder를 선택해야 합니다.
        
        
          Project Navigator에서 프로젝트를 선택하고 애플리케이션의 대상을 선택합니다.
        
        
          빌드 단계 탭을 엽니다. Link Binary with Libraries 내에 다음 프레임워크와 라이브러리를 추가합니다.
          
            CoreGraphics.framework
            CoreLocation.framework
            libc++.tbd
            libz.tbd
            QuartzCore.framework
            UIKit.framework
          
        
        
          
            특정 대상 대신 자신의 프로젝트를 선택하고 Build Settings(빌드 설정) 탭을 엽니다. Linking - General -> Other Linker Flags(연결 - 일반 -> 기타 링커 플래그) 섹션에서 'Debug'(디버그) 및 'Release'(출시)에 -ObjC를 추가합니다. 이 설정이 표시되지 않으면 Build Settings(빌드 설정) 표시줄의 필터를 Basic(기본)에서 All(모두)로 변경합니다.

--- 탭: CocoaPods ---
지원 중단: CocoaPods는 2025년 8월 18일부터 유지관리 모드에 있으며 2026년 2분기 이후에는 CocoaPods의 추가 버전이 출시되지 않습니다. 대신 Swift Package Manager를 사용하세요.

    
    iOS용 Places SDK와 iOS용 Places Swift SDK는 CocoaPod pod인 GooglePlaces 및 GooglePlacesSwift로 제공됩니다.

    CocoaPods는 Swift 및 Objective-C Cocoa 프로젝트용 오픈소스 종속 항목 관리자입니다. 아직 CocoaPods 도구가 없으면 터미널에서 다음 명령어를 실행하여 macOS에 CocoaPods 도구를 설치합니다. 자세한 내용은 CocoaPods 시작 가이드를 참고하세요.

    sudo gem install cocoapods

    Podfile를 만들어 SDK와 종속 항목을 설치합니다.

    
      아직 Xcode 프로젝트가 없으면 지금 만들어 로컬 시스템에 저장합니다. iOS용 앱을 처음 개발하는 경우 새 프로젝트를 만들고 iOS 앱 템플릿을 선택합니다.
      프로젝트 디렉터리에 Podfile 파일을 만듭니다. 이 파일은 프로젝트의 종속 항목을 정의합니다.
      Podfile을 수정하고 종속 항목과 버전을 추가합니다. 다음은 애플리케이션 타겟 이름과 GooglePlaces 및 GooglePlacesSwift 포드 이름을 지정하는 예입니다.

      
      source 'https://github.com/CocoaPods/Specs.git'

platform :ios, '16.0'

target 'YOUR_APPLICATION_TARGET_NAME_HERE' do
  pod 'GooglePlaces', '10.1.0'
  pod 'GooglePlacesSwift', '10.1.0'
end

      항상 최신 버전을 사용하려면 pod outdated를 정기적으로 실행하여 새 버전이 있는지 확인하세요.
      

      Podfile을 저장합니다.
      터미널을 열고 Podfile이 포함된 디렉터리로 이동합니다.

      cd <path-to-project>
      pod install 명령어를 실행합니다. Podfile에 지정된 API가 API에 포함된 종속 항목과 함께 설치됩니다.

      pod install
      Xcode를 닫은 다음 프로젝트의 .xcworkspace 파일을 (더블클릭하여) 열어 Xcode를 실행합니다. 이 때부터는 .xcworkspace 파일을 사용하여 프로젝트를 열어야 합니다.
    
기존 프로젝트의 API를 업데이트하려면 다음 단계를 따르세요.


  터미널을 열고 Podfile이 포함된 프로젝트 디렉터리로 이동합니다.
  pod update 명령어를 실행합니다. 이렇게 하면 Podfile에 지정된 모든 API가 최신 버전으로 업데이트됩니다.


3단계: 앱에 API 키 추가
다음 예에서 YOUR_API_KEY를 이 API 키로 바꾸세요.
--- 탭: GooglePlacesSwift ---
다음과 같이 API 키를 AppDelegate.swift에 추가합니다.
    
      다음 import 문을 추가합니다.
        import GooglePlacesSwift
      
      다음 코드를 application(_:didFinishLaunchingWithOptions:) 메서드에 추가하여 YOUR_API_KEY를 API 키로 대체합니다.
        PlacesClient.provideAPIKey("YOUR_API_KEY")

--- 탭: Swift ---
다음과 같이 API 키를 AppDelegate.swift에 추가합니다.
      
        다음 import 문을 추가합니다.
          import GooglePlaces
        
        다음 코드를 application(_:didFinishLaunchingWithOptions:) 메서드에 추가하여 YOUR_API_KEY를 API 키로 대체합니다.
          GMSPlacesClient.provideAPIKey("YOUR_API_KEY")

--- 탭: Objective-C ---
다음과 같이 API 키를 AppDelegate.m에 추가합니다.
    
      다음 import 문을 추가합니다.
        @import GooglePlaces;
      
      다음 코드를 application:didFinishLaunchingWithOptions: 메서드에 추가하여 YOUR_API_KEY를 API 키로 대체합니다.
        [GMSPlacesClient provideAPIKey:@"YOUR_API_KEY"];
4단계 (선택사항): Apple 개인 정보 보호 매니페스트 파일 검사
참고: 다음은 웹 스토어에 앱을 배포할 때 관련이 있습니다.
Apple은 App Store에 있는 앱의 앱 개인정보 보호 세부정보를 요구합니다. 업데이트 및 자세한 내용은 Apple App Store 개인 정보 보호 세부정보 페이지를 참고하세요.
Apple 개인 정보 보호 매니페스트 파일은 SDK의 리소스 번들에 포함되어 있습니다. 개인 정보 매니페스트 파일이 포함되었는지 확인하고 콘텐츠를 검사하려면 앱의 보관 파일을 만들고 보관 파일에서 개인 정보 보고서를 생성하세요.
다음 단계
코드 작성을 시작합니다. 권장되는 시작점은 사용자의 현재 위치를 가져오는 스타터 앱을 구현하는 것입니다.
프로젝트가 구성되면 샘플 앱을 살펴볼 수 있습니다.
App Check를 사용하여 API 키를 보호하세요.
도움이 되었나요?
의견 보내기