Source URL: https://developers.google.com/maps/documentation/android-sdk/map?hl=ko

홈 [https://developers.google.com/?hl=ko]
제품 [https://developers.google.com/products?hl=ko]
Google Maps Platform [https://developers.google.com/maps?hl=ko]
문서 [https://developers.google.com/maps/documentation?hl=ko]
Android [https://developers.google.com/maps/android?hl=ko]
Maps SDK for Android [https://developers.google.com/maps/documentation/android-sdk/overview?hl=ko]
안내 [https://developers.google.com/maps/documentation/android-sdk?hl=ko]
의견 보내기
지도 추가
플랫폼 선택: Android [https://developers.google.com/maps/documentation/android-sdk/map?hl=ko] iOS [https://developers.google.com/maps/documentation/ios-sdk/map?hl=ko] JavaScript [https://developers.google.com/maps/documentation/javascript/maptypes?hl=ko]
이 주제에서는 Android용 Maps SDK를 사용하도록 프로젝트를 구성 [https://developers.google.com/maps/documentation/android-sdk/config?hl=ko]한 후 Android 앱에 기본 지도를 추가하는 방법을 설명합니다. 지도를 추가한 후에 지도 유형 및 기능 [https://developers.google.com/maps/documentation/android-sdk/configure-map?hl=ko]을 변경할 수 있습니다.
참고: Android 스튜디오에서 Google 지도 템플릿을 사용하면 기본 지도가 포함된 앱을 빠르게 만들 수 있습니다. 자세한 내용은 빠른 시작 [https://developers.google.com/maps/documentation/android-sdk/start?hl=ko]을 참고하세요.
개요
Android용 Maps SDK는 앱에서 지도의 수명 주기, 기능 및 데이터를 관리하는 데 사용할 수 있는 다양한 클래스를 제공합니다. 클래스는 지도의 초기 상태 설정 및 런타임 시 사용자의 동작 입력에 대한 응답 같은 Android UI 모델에 따라 사용자 상호작용을 지원합니다.
지도 처리를 위한 기본 인터페이스 및 클래스:
GoogleMap [https://developers.google.com/maps/documentation/android-sdk/reference/com/google/android/libraries/maps/GoogleMap?hl=ko] - 기본 지도 기능 및 데이터를 관리하기 위한 진입점입니다. 앱은 SupportMapFragment 또는 MapView 객체에서 가져온 GoogleMap 객체에만 액세스할 수 있습니다.
SupportMapFragment [https://developers.google.com/maps/documentation/android-sdk/reference/com/google/android/libraries/maps/SupportMapFragment?hl=ko] - GoogleMap 객체의 수명 주기를 관리하기 위한 프래그먼트 [https://developer.android.com/guide/fragments?hl=ko]입니다.
MapView [https://developers.google.com/maps/documentation/android-sdk/reference/com/google/android/libraries/maps/MapView?hl=ko] - GoogleMap 객체의 수명 주기를 관리하는 뷰 [https://developer.android.com/reference/android/view/View.html?hl=ko]입니다.
OnMapReadyCallback [https://developers.google.com/maps/documentation/android-sdk/reference/com/google/android/libraries/maps/OnMapReadyCallback?hl=ko] - GoogleMap 객체의 이벤트 및 사용자 상호작용을 처리하는 콜백 인터페이스입니다.
GoogleMap 객체는 다음 작업을 자동으로 수행합니다.
Google 지도 서비스에 연결
지도 타일 다운로드
기기 화면에 타일 표시
화면 이동 및 확대/축소와 같은 다양한 컨트롤 표시
화면 이동 및 확대/축소 동작 시 지도를 이동하거나 확대/축소하여 응답
앱에서 GoogleMap 객체를 사용하려면 SupportMapFragment 또는 MapView 객체 중 하나를 지도의 컨테이너 객체로 사용한 다음 컨테이너에서 GoogleMap 객체를 가져와야 합니다. 컨테이너 클래스는 Android 프래그먼트나 뷰에서 파생되므로 Android 기본 클래스의 수명 주기 관리와 UI 기능을 지도에 제공합니다. SupportMapFragment 클래스는 GoogleMap 객체의 더 최신 버전이며 일반적인 컨테이너입니다.
코드 보기
다음은 프래그먼트를 정적으로 추가할 때 이 주제에서 사용하는 전체 Java 활동에서 가져온 코드입니다. Android 프로젝트는 Empty 프로젝트 템플릿에서 만든 다음 프로젝트 구성 [https://developers.google.com/maps/documentation/android-sdk/config?hl=ko] 가이드에 따라 업데이트되었습니다. 이 주제의 단계를 수행하면 프로젝트 템플릿에 따라 코드가 달라질 수 있습니다.
코드 표시/숨기기
지도 추가하기
이 섹션에서는 프래그먼트를 지도 컨테이너로 사용하여 기본 지도를 추가하는 방법을 설명하지만, 프래그먼트 대신 뷰를 사용할 수도 있습니다. 예는 GitHub의 RawMapViewDemoActivity [https://github.com/googlemaps-samples/android-samples/blob/main/ApiDemos/java/app/src/gms/java/com/example/mapdemo/RawMapViewDemoActivity.java]에서 확인할 수 있습니다.
기본 단계는 다음과 같습니다.
SDK와 API 키를 가져온 후 필수 프레임워크를 추가하려면 다음 단계를 따르세요.
Google Cloud 콘솔에서 설정 [https://developers.google.com/maps/documentation/android-sdk/cloud-setup?hl=ko]
API 키 사용 [https://developers.google.com/maps/documentation/android-sdk/get-api-key?hl=ko]
Android 스튜디오 프로젝트 설정 [https://developers.google.com/maps/documentation/android-sdk/config?hl=ko]
지도를 처리할 활동에 SupportMapFragment 객체를 추가합니다. 프래그먼트를 정적 또는 동적으로 추가할 수 있습니다.
OnMapReadyCallback 인터페이스를 구현합니다.
레이아웃 파일을 콘텐츠 뷰로 설정합니다.
프래그먼트를 정적으로 추가한 경우 프래그먼트에 대한 핸들을 가져옵니다.
콜백을 등록합니다.
GoogleMap 객체에 대한 핸들을 가져옵니다.
SupportMapFragment 객체 추가하기
SupportMapFragment 객체를 정적 또는 동적으로 앱에 추가할 수 있습니다. 가장 간단한 방법은 정적으로 추가하는 것입니다. 프래그먼트를 동적으로 추가하는 경우 런타임 시 프래그먼트 제거 및 교체 같은 추가 작업을 처리할 수 있습니다.
프래그먼트를 정적으로 추가하기
지도를 처리할 활동의 레이아웃 파일 [https://developer.android.com/guide/topics/ui/declaring-layout?hl=ko]에서 다음을 수행합니다.
fragment 요소를 추가합니다.
이름 선언 xmlns:map="http://schemas.android.com/apk/res-auto"를 추가합니다. 이렇게 하면 maps 사용자 지정 XML 속성 [https://developers.google.com/maps/documentation/android-sdk/configure-map?hl=ko#static]을 사용할 수 있습니다.
fragment 요소에서 android:name 속성을 com.google.android.gms.maps.SupportMapFragment로 설정합니다.
fragment 요소에서 android:id 속성을 추가하고 R.id.map 리소스 ID [https://developer.android.com/guide/topics/resources/more-resources?hl=ko#Id](@+id/map)로 설정합니다.
예를 들어 다음은 fragment 요소가 포함된 전체 레이아웃 파일입니다.
<?xml version="1.0" encoding="utf-8"?>
<fragment xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:map="http://schemas.android.com/apk/res-auto"
    android:name="com.google.android.gms.maps.SupportMapFragment"
    android:id="@+id/map"
    android:layout_width="match_parent"
    android:layout_height="match_parent"/>
프래그먼트를 동적으로 추가하기
활동에서 다음 작업을 처리합니다.
SupportMapFragment 인스턴스를 생성합니다.
프래그먼트를 활동에 추가하는 트랜잭션을 커밋합니다. 자세한 내용은 프래그먼트 트랜잭션 [https://developer.android.com/guide/fragments/transactions?hl=ko]을 참조하세요.
예:
OnMapReadyCallback 인터페이스 구현하기
활동 선언을 다음과 같이 업데이트합니다.
콘텐츠 뷰 설정하기
활동의 onCreate [http://developer.android.com/reference/android/app/Activity.html?hl=ko#onCreate(android.os.Bundle)] 메서드에서 setContentView 메서드를 호출하고 레이아웃 파일을 콘텐츠 뷰로 설정합니다.
예를 들어 레이아웃 파일의 이름이 main.xml인 경우:
프래그먼트에 대한 핸들 가져오기 및 콜백 등록하기
프래그먼트에 대한 핸들을 가져오려면 FragmentManager.findFragmentById [http://developer.android.com/reference/android/app/FragmentManager.html?hl=ko#findFragmentById(int)] 메서드를 호출하고 레이아웃 파일 프래그먼트의 리소스 ID를 전달합니다. 프래그먼트를 동적으로 추가했다면 이미 핸들을 가져왔으므로 이 단계를 건너뜁니다.
getMapAsync [https://developers.google.com/maps/documentation/android-sdk/reference/com/google/android/libraries/maps/MapFragment?hl=ko#public-void-getmapasync-onmapreadycallback-callback] 메서드를 호출하여 프래그먼트에서 콜백을 설정합니다.
예를 들어 프래그먼트를 정적으로 추가한 경우:
GoogleMap 객체에 대한 핸들 가져오기
onMapReady [https://developers.google.com/maps/documentation/android-sdk/reference/com/google/android/libraries/maps/OnMapReadyCallback?hl=ko#public-abstract-void-onmapready-googlemap-googlemap] 콜백 메서드를 사용하여 GoogleMap 객체에 대한 핸들을 가져옵니다. 지도에서 사용자 입력을 수신할 준비가 되면 콜백이 트리거됩니다. 지도를 업데이트하는 데 사용할 수 있는 GoogleMap 클래스의 null이 아닌 인스턴스를 제공합니다.
이 예에서 onMapReady 콜백이 GoogleMap 객체에 대한 핸들을 가져오면 마커 [https://developers.google.com/maps/documentation/android-sdk/map-with-marker?hl=ko]가 지도에 추가됩니다.
성공적으로 앱을 빌드하고 실행 [https://developer.android.com/studio/run?hl=ko]하면 앱에서 Null 섬(위도 0도, 경도 0도)에 마커가 표시된 지도가 나타납니다.
전체 활동의 코드를 봅니다.
arrow_upward전체 활동 보기 [https://developers.google.com/maps/documentation/android-sdk/map?hl=ko#view_the_code]
다음 단계
이 단계를 완료하면 지도 설정을 구성 [https://developers.google.com/maps/documentation/android-sdk/configure-map?hl=ko]할 수 있습니다.
의견 보내기