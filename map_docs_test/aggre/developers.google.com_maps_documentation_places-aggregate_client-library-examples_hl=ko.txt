Source URL: https://developers.google.com/maps/documentation/places-aggregate/client-library-examples?hl=ko
Title: Places Aggregate API 클라이언트 라이브러리 예시
bookmark_border

의견 보내기

Places Aggregate API 클라이언트 라이브러리 예시

bookmark_borderbookmark

컬렉션을 사용해 정리하기

내 환경설정을 기준으로 콘텐츠를 저장하고 분류하세요.

이 페이지의 내용클라이언트 라이브러리 설치 [https://developers.google.com/maps/documentation/places-aggregate/client-library-examples?hl=ko#installing-client]인증 [https://developers.google.com/maps/documentation/places-aggregate/client-library-examples?hl=ko#authentication]예 [https://developers.google.com/maps/documentation/places-aggregate/client-library-examples?hl=ko#examples]컴퓨팅 통계 [https://developers.google.com/maps/documentation/places-aggregate/client-library-examples?hl=ko#compute_insights]

이 페이지에는 Places Aggregate API 클라이언트 라이브러리를 사용하는 방법의 예가 나와 있습니다.

클라이언트 라이브러리 설치

설치 안내는 Places Aggregate API 클라이언트 라이브러리 [https://developers.google.com/maps/documentation/places-aggregate/client-libraries?hl=ko#install_the_client_library]를 참고하세요.

인증

클라이언트 라이브러리를 사용할 때는 애플리케이션 기본 사용자 인증 정보(ADC) [https://cloud.google.com/docs/authentication/application-default-credentials?hl=ko]를 사용하여 인증합니다. ADC 설정은 애플리케이션 기본 사용자 인증 정보에 대한 사용자 인증 정보 제공 [https://cloud.google.com/docs/authentication%0Aprovide-credentials-adc?hl=ko]을 참고하세요. 클라이언트 라이브러리에서 ADC를 사용하는 방법은 클라이언트 라이브러리를 사용하여 인증 [https://cloud.google.com/docs/authentication/client-libraries?hl=ko]을 참고하세요.

API 키를 사용하여 클라이언트 라이브러리에 인증할 수도 있습니다. 예를 들면 다음과 같습니다.
--- 탭: 자바 [https://developers.google.com/maps/documentation/places-aggregate/client-library-examples?hl=ko#%EC%9E%90%EB%B0%94] ---
import java.util.HashMap;
import java.util.Map;
import com.google.api.gax.core.NoCredentialsProvider;
import com.google.api.gax.rpc.FixedHeaderProvider;
import com.google.api.gax.rpc.HeaderProvider;
import com.google.maps.areainsights.v1.AreaInsightsClient;
import com.google.maps.areainsights.v1.AreaInsightsSettings;
String apiKey = "API_KEY";
Map<String, String> headers = new HashMap<>();
headers.put("x-goog-api-key", apiKey);
HeaderProvider headerProvider = FixedHeaderProvider.create(headers);
AreaInsightsSettings areaInsightsSettings =
AreaInsightsSettings.newBuilder()
"google.golang.org/api/option" // Import the option package when using an API key
"google.golang.org/genproto/googleapis/type/latlng"
...
# Instantiates the insights client, passing the API key
client_options={"api_key": "API_KEY"}

--- 탭: UNNAMED ---
using Google.Maps.AreaInsights.V1;
using Google.Api.Gax.Grpc;
using Grpc.Core;
ComputeInsightsSettings = defaultSettings.ComputeInsightsSettings.MergedWith(apiHeader)
AreaInsightsClientBuilder builder = new AreaInsightsClientBuilder
Settings = settings,
ChannelCredentials = new SslCredentials()
AreaInsightsClient areaInsightsClient = await builder.BuildAsync();
애플리케이션에서 API 키를 사용하는 경우 저장 및 전송 중에 안전하게 보호되도록 해야 합니다. API 키를 공개적으로 노출하면 계정에 예상치 않은 비용이 부과될 수 있습니다.

이 페이지의 예시에서는 애플리케이션 기본 사용자 인증 정보를 사용합니다.

예

컴퓨팅 통계

다음은 클라이언트 라이브러리를 사용하여 컴퓨팅 통계를 호출하는 방법의 예입니다.
--- 탭: 자바 [https://developers.google.com/maps/documentation/places-aggregate/client-library-examples?hl=ko#%EC%9E%90%EB%B0%94] ---
import com.google.api.core.ApiFuture;
import com.google.maps.areainsights.v1.AreaInsightsClient;
import com.google.maps.areainsights.v1.ComputeInsightsRequest;
import com.google.maps.areainsights.v1.ComputeInsightsResponse;
import com.google.maps.areainsights.v1.Filter;
import com.google.maps.areainsights.v1.Insight;
import com.google.maps.areainsights.v1.LocationFilter;
import com.google.maps.areainsights.v1.OperatingStatus;
import com.google.maps.areainsights.v1.RatingFilter;
import com.google.maps.areainsights.v1.TypeFilter;
import com.google.type.LatLng;
ComputeInsightsRequest request =
ComputeInsightsRequest.newBuilder()
.addInsights(Insight.INSIGHT_COUNT)
.setFilter(
Filter.newBuilder()
.setLocationFilter(
LocationFilter.newBuilder()
.setCircle(
LocationFilter.Circle.newBuilder()
.setLatLng(
LatLng.newBuilder()
.setLatitude(37.7749)
.setLongitude(-122.4194)
.build())
.setRadius(2000)
.build()))
.setTypeFilter(TypeFilter.newBuilder().addIncludedTypes("restaurant").build())
.addOperatingStatus(OperatingStatus.OPERATING_STATUS_OPERATIONAL)
.setRatingFilter(RatingFilter.newBuilder().setMinRating(4.2f).build())
.build())
.build();
ApiFuture futureResponse =
areaInsightsClient.computeInsightsCallable().futureCall(request);
ComputeInsightsResponse response = futureResponse.get();
System.out.println(response);
import (
"context"
"fmt"
"log"
areainsights "cloud.google.com/go/maps/areainsights/apiv1"
areainsightspb "cloud.google.com/go/maps/areainsights/apiv1/areainsightspb"
"google.golang.org/genproto/googleapis/type/latlng"
func main() {
ctx := context.Background()
minRating := float32(4.2)
.OPERATING_STATUS_OPERATIONAL,
],
ratingFilter: {
minRating: 4.2,

--- 탭: Python [https://developers.google.com/maps/documentation/places-aggregate/client-library-examples?hl=ko#python] ---
import asyncio
from google.maps import areainsights_v1
from google.type import latlng_pb2
async def places_aggregate():
client = areainsights_v1.AreaInsightsAsyncClient()
# Build the request
request = areainsights_v1.ComputeInsightsRequest(
insights=[areainsights_v1.Insight.INSIGHT_COUNT],
filter=areainsights_v1.Filter(
location_filter=areainsights_v1.LocationFilter(
circle=areainsights_v1.LocationFilter.Circle(
lat_lng=latlng_pb2.LatLng(latitude=37.7749, longitude=-122.4194),
radius=2000
),
type_filter=areainsights_v1.TypeFilter(
included_types=["restaurant"]
),
operating_status=[areainsights_v1.OperatingStatus.OPERATING_STATUS_OPERATIONAL],
rating_filter=areainsights_v1.RatingFilter(
min_rating=4.2
# Make the request
response = await client.compute_insights(request=request)
return response
print(asyncio.run(places_aggregate()))

--- 탭: UNNAMED ---
using Google.Maps.AreaInsights.V1;
AreaInsightsClient areaInsightsClient = await AreaInsightsClient.CreateAsync();
Filter = new Filter
LocationFilter = new LocationFilter
Circle = new LocationFilter.Types.Circle
LatLng = new Google.Type.LatLng { Latitude = 37.7749, Longitude = -122.4194 },
Radius = 2000
TypeFilter = new TypeFilter
RatingFilter = new RatingFilter
MinRating = 4.2f
ComputeInsightsResponse response = await areaInsightsClient.ComputeInsightsAsync(request);